<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>王先生的博客</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-05-29T14:35:51.343Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>WangQi</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mapreduce</title>
    <link href="http://example.com/2022/05/29/mapreduce/"/>
    <id>http://example.com/2022/05/29/mapreduce/</id>
    <published>2022-05-29T14:33:47.000Z</published>
    <updated>2022-05-29T14:35:51.343Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MapReduce概述"><a href="#MapReduce概述" class="headerlink" title="MapReduce概述"></a>MapReduce概述</h1><h2 id="1-1MapReduce定义"><a href="#1-1MapReduce定义" class="headerlink" title="1.1MapReduce定义"></a>1.1MapReduce定义</h2><ul><li><p>MR是一个<strong>分布式****运算</strong>程序的编程框架</p></li><li><p>MR是分析数据，HDFS是存储数据</p></li><li><p>MR的核心功能：</p><ul><li>将<strong>用户编写的业务逻辑代码</strong>和<strong>自带默认组件</strong>整合成一个完整的<strong>分布式运算程序</strong></li></ul></li></ul><h2 id="1-2MapReduce优缺点"><a href="#1-2MapReduce优缺点" class="headerlink" title="1.2MapReduce优缺点"></a>1.2MapReduce优缺点</h2><ul><li><p>优点：</p><ul><li>MR易于编程：他简单实现一些接口，就可以完成一个分布式程序</li><li>良好的拓展性：可以增加机器来拓展计算能力</li><li>高容错性：其中一个机器挂掉，可以把上面的计算任务转移到另一个节点运行，不至于这个任务运行失败</li><li>适合PB级以上海量数据的离线处理</li></ul></li><li><p>缺点：</p><ul><li><p>不擅长实时计算：无法像MySQL一样，在毫秒或者秒级内返回结果</p></li><li><p>不擅长流式计算：流式计算输入数据式动态的，而MR的<strong>输入数据集是静态的</strong></p></li><li><p>不擅长DAG(有向图)计算：每个MR作业的输出结果都会写入到磁盘，会造成大量的磁盘IO，导致性能非常低下</p></li></ul></li></ul><h2 id="1-3MapReduce核心思想"><a href="#1-3MapReduce核心思想" class="headerlink" title="1.3MapReduce核心思想"></a>1.3MapReduce核心思想</h2><p>核心思想如图</p><p><img src="D:\大数据\media\MR核心思想.PNG" alt="MR核心思想"></p><ul><li><p>分布式运算程序往往分为<strong>至少2步</strong></p></li><li><p>第一个阶段的MapTask并发实例，完全独立，互补干扰</p></li><li><p>第二阶段的ReduceTask并发实例，互补干扰。但是他们依赖上一阶段的所有的MapTasK并发实例的输出</p></li><li><p>MR编程模型只能包含一个Map阶段和一个Reduce阶段，如果用户的业务逻辑非常复杂，那就只能多个MR程序，串行运行。就是一个Map阶段一个Reduce阶段，再来一个Map阶段一个Reduce阶段。。。</p></li></ul><h2 id="1-4MapReduce进程"><a href="#1-4MapReduce进程" class="headerlink" title="1.4MapReduce进程"></a>1.4MapReduce进程</h2><ul><li><p>一个完整的MapReduce程序分布式运行时有三类实例进程</p><ul><li><p><strong>MrAppMaste</strong>r:负责整个程序的过程调度和状态协调</p></li><li><p><strong>MapTask</strong>：负责Map阶段的整个数据处理流程</p></li><li><p><strong>ReduceTask</strong>:负责Reduce阶段的整个数据处理流程</p></li></ul></li></ul><h2 id="1-5官方WordCount源码"><a href="#1-5官方WordCount源码" class="headerlink" title="1.5官方WordCount源码"></a>1.5官方WordCount源码</h2><p>​采用反编译工具反编译源码，发现WordCount案例有Map类、Reduce类和驱动类。且数据的类型是Hadoop自身封装的序列化类型</p><h2 id="1-6常用数据序列化类型"><a href="#1-6常用数据序列化类型" class="headerlink" title="1.6常用数据序列化类型"></a>1.6常用数据序列化类型</h2><p><strong>其实就是，Hadoop把Java的基本类型重新编译了一遍。生成了他们的包装类</strong></p><table><thead><tr><th>java类型</th><th>Hadoop Writable类型(也就是Hadoop的包装类)</th></tr></thead><tbody><tr><td>boolean</td><td>BooleanWritable</td></tr><tr><td>byte</td><td>ByteWritable</td></tr><tr><td>int</td><td>IntWritable</td></tr><tr><td>float</td><td>FloatWritable</td></tr><tr><td>long</td><td>LongWritable</td></tr><tr><td>double</td><td>DoubleWritable</td></tr><tr><td><strong>String</strong></td><td><strong>Text</strong></td></tr><tr><td>map</td><td>MapWritable</td></tr><tr><td>array</td><td>ArrayWritable</td></tr></tbody></table><h2 id="1-7MapReduce编程规范-重点"><a href="#1-7MapReduce编程规范-重点" class="headerlink" title="1.7MapReduce编程规范(重点)"></a>1.7MapReduce编程规范(重点)</h2><p>用户编程的程序分为三个部分：Mapper、Reducer和Driver</p><ol><li><p>Mapper</p><ul><li>用户自定义的Mapper类要继承Mapper</li><li>Mapper的输入数据是KV的形式(KV的类型可以自定义)</li><li>Mapper中的业务逻辑方法是map()</li><li>Mapper的输出数据是KV形式（KV的类型可以自定义）</li><li><strong style="color:red"><strong>map()方法(MapTask)对每一个&lt;K,V&gt;调用一次(每读取一行执行一次)</strong></strong></li></ul></li><li><p>Reducer</p><ul><li>用户自定义的Reducer类要继承Reducer</li><li>Reducer的输入数据类型是Mapper类的输出数据类型(KV类型一致)</li><li>Reducer的业务逻辑方法是reduce()方法。</li><li><strong style="color:red"><strong>ReduceTask进程对每一组相同的&lt;K,V&gt;组调用一次reduce()方法</strong></strong></li></ul></li><li><p>Driver:相当于Yarn集群的客户端，用于提交我们整个程序的Yarn集群，提交的是封装的MapReduce程序相关运行参数的Job对象</p><p><strong>流程：固定套路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 创建job对象</span></span><br><span class="line"><span class="type">Configuration</span> <span class="variable">conf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Configuration</span>();</span><br><span class="line"><span class="type">Job</span> <span class="variable">job</span> <span class="operator">=</span> Job.getInstance(conf);</span><br><span class="line"><span class="comment">// 2.设置jar位置</span></span><br><span class="line">job.setJarByClass(phoneCountDriver.class);</span><br><span class="line"><span class="comment">// 3. 关联Mapper</span></span><br><span class="line">job.setMapperClass(phoneCountMapper.class);</span><br><span class="line"><span class="comment">// 4.关联Reducer</span></span><br><span class="line">job.setReducerClass(phoneCountReducer.class);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 5. 设置输出类型</span></span><br><span class="line">job.setMapOutputKeyClass(Text.class);</span><br><span class="line">job.setMapOutputValueClass(FlowBean.class);</span><br><span class="line"></span><br><span class="line">job.setOutputKeyClass(Text.class);</span><br><span class="line">job.setOutputValueClass(FlowBean.class);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 6. 设置输入输出位置</span></span><br><span class="line">FileInputFormat.setInputPaths(job, <span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;d:/phone_data.txt&quot;</span>));</span><br><span class="line">FileOutputFormat.setOutputPath(job, <span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;d:/output1&quot;</span>));</span><br><span class="line"><span class="comment">// 7.提交</span></span><br><span class="line">job.waitForCompletion(<span class="literal">true</span>);</span><br></pre></td></tr></table></figure></li></ol><h2 id="1-8WordCount案例实操（重点）"><a href="#1-8WordCount案例实操（重点）" class="headerlink" title="1.8WordCount案例实操（重点）"></a>1.8WordCount案例实操（重点）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;strong&gt;详情看尚硅谷大数据(MR篇)&lt;/strong&gt;</span><br></pre></td></tr></table></figure><h1 id="Hadoop优化"><a href="#Hadoop优化" class="headerlink" title="Hadoop优化"></a>Hadoop优化</h1><h2 id="2-1序列化概念"><a href="#2-1序列化概念" class="headerlink" title="2.1序列化概念"></a>2.1序列化概念</h2><h3 id="什么是序列化？"><a href="#什么是序列化？" class="headerlink" title="什么是序列化？"></a>什么是序列化？</h3><p>​序列化：就是把<strong>内存中的对象，转换成字节序列</strong>(或者其他数据传输协议)以便于存储到磁盘(持久化)和网络传输</p><p>​反序列化：就是收到字节序列(或其他数据传输协议)或者<strong>磁盘的持久化数据，转换成内存中的对象</strong></p><h3 id="为什么要序列化？"><a href="#为什么要序列化？" class="headerlink" title="为什么要序列化？"></a>为什么要序列化？</h3><p>​不序列化的对象，存于系统的内存中，如果关机之后，对象会消失。</p><p>​再者，内存中的对象只能再本地运行不能发送到网络中的其他计算机。这样序列化就解决了这些问题。</p><h3 id="为啥不使用Java的序列化？"><a href="#为啥不使用Java的序列化？" class="headerlink" title="为啥不使用Java的序列化？"></a>为啥不使用Java的序列化？</h3><p>​因为，Java的序列化是一个重量级序列化框架，会产生很多额外附带信息，所以不使用</p><h3 id="hadoop序列化特点"><a href="#hadoop序列化特点" class="headerlink" title="hadoop序列化特点"></a>hadoop序列化特点</h3><ol><li>紧凑：高效使用存储空间</li><li>快速：读写数据的额外开销小</li><li>可拓展：锁着通信协议的升级可升级</li><li>互操作：支持多语言的交互</li></ol><h2 id="2-2自定义bean对象实现序列化接口-重点"><a href="#2-2自定义bean对象实现序列化接口-重点" class="headerlink" title="2.2自定义bean对象实现序列化接口(重点)"></a>2.2自定义bean对象实现序列化接口(重点)</h2><p>​<strong>具体实现Bean对象序列化需要以下7个步骤</strong></p><ul><li>必须实现<strong>Writable接口</strong></li><li>反序列化时，需要反射调用<strong>空参构造方法</strong>，所以必须有空参构造</li><li>重写序列化方法：write()</li><li>重写反序列化方法:readFields()</li><li><strong>注意：反序列化的顺序和序列化的顺序完全一致</strong></li><li>要把结果显示在文件中，需要<strong>重写toString()方法</strong>，<strong>可用”\t”隔开</strong>，以便后续使用。</li><li>如果需要将自定义的bean放在key中传输，则还需要实现Comparable接口，因为MapReduce框中的Shuffle过程要求对key必须能排序。详见后面排序案例。</li></ul><h2 id="2-3序列化案例实操-重点"><a href="#2-3序列化案例实操-重点" class="headerlink" title="2.3序列化案例实操(重点)"></a>2.3序列化案例实操(重点)</h2><p><strong style="color:red">详细在课件资料：</strong></p><p>注意：</p><ul><li>Mapper的输出KV格式，是Reducer的输入KV格式</li><li></li></ul><h1 id="MapReduce框架原理（都很重要）"><a href="#MapReduce框架原理（都很重要）" class="headerlink" title="MapReduce框架原理（都很重要）"></a>MapReduce框架原理（都很重要）</h1><h2 id="3-1InputFormat数据输入"><a href="#3-1InputFormat数据输入" class="headerlink" title="3.1InputFormat数据输入"></a>3.1InputFormat数据输入</h2><h3 id="3-1-1切片于MapTask并行制度"><a href="#3-1-1切片于MapTask并行制度" class="headerlink" title="3.1.1切片于MapTask并行制度"></a>3.1.1切片于MapTask并行制度</h3><ol><li><p>问题引出</p><p>MapTask的并行度决定Map阶段的任务处理并发度，进而影响整个Job的处理速度。</p><p>思考：1G的数据，启动8个MapTask，可以提高集群的并发处理能力。那么1K的数据，也启动8个MapTask，会提高集群性能吗？MapTask并行任务是否越多越好呢？哪些因素影响了MapTask并行度？</p></li><li><p>MapTask并行度决定机制</p><ul><li><strong style="color:red;font-size:18px">数据块：Block是HDFS的物理分区，把数据物理分成一块一块的</strong></li><li><strong style="color:red;font-size:18px">切片:数据切片是逻辑分区，只是逻辑上分为一块，物理上仍按照数据块分</strong></li></ul></li><li><p><strong>数据切片与MapTask并行度决定机制图</strong></p><p><img src="D:\大数据\media\数据切片.PNG" alt="数据切片"></p></li><li><p>注意点：</p><ol><li>一个切片由一个MapTask执行</li><li>一个Job的Map阶段并行度由客户端在提交Job的切片数量决定。</li><li>切片的分割只是由文件决定，一个文件可以有N个切片，但是多个文件不可以共用一个切片。</li></ol></li></ol><h3 id="3-1-2Job提交流程源码和切片源码"><a href="#3-1-2Job提交流程源码和切片源码" class="headerlink" title="3.1.2Job提交流程源码和切片源码"></a>3.1.2Job提交流程源码和切片源码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">---------------------Job提交流程源码详解--------------------</span><br><span class="line">waitForCompletion();<span class="comment">//方法是入口</span></span><br><span class="line"></span><br><span class="line">submit(); <span class="comment">//第二个入口</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//1. 建立链接</span></span><br><span class="line">connect();</span><br><span class="line"><span class="comment">//1.1 创建提交Job的代理</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Cluster</span>(getConfiguration());</span><br><span class="line"><span class="comment">//1.1.1 判断本地yarn 还是远程</span></span><br><span class="line">initialize(JobTrackAddr,conf);</span><br><span class="line"></span><br><span class="line"><span class="comment">//2. 提交Job</span></span><br><span class="line">submitter.submitJobInternal(Job.<span class="built_in">this</span>,cluster)</span><br><span class="line">    <span class="comment">//1. 创建给集群提交数据的Stag路径</span></span><br><span class="line">    Path jobstagingArea </span><br><span class="line">    JobSubmissionFiles.getStagingDir(cluster,conf);</span><br><span class="line"><span class="comment">//2. 获取Jobid 创建Job路径</span></span><br><span class="line"><span class="type">JobId</span> <span class="variable">jobid</span> <span class="operator">=</span> submitClient.getNewJobID();</span><br><span class="line"><span class="comment">//3. 拷贝Jar包到集群</span></span><br><span class="line">copyAndConfigureFiles(job,submitJobDir);</span><br><span class="line">rUpLoader.uploadFiles(job,jobSumbitDir);</span><br><span class="line"><span class="comment">//4. 计算切片，生成切片规划文件</span></span><br><span class="line">writeSplits(job,submitJobDir);</span><br><span class="line">maps=writerNewSplit(Job,jobsubmitJobDir);</span><br><span class="line">input.getSplits(job);</span><br><span class="line"><span class="comment">//5. 向Stag路径写XML配置文件</span></span><br><span class="line">writeConf(conf,submitJobFile);</span><br><span class="line">conf.writeXML(out);</span><br><span class="line"><span class="comment">//6. 提交Job返回提交状态</span></span><br><span class="line">status = submitClient.submitJob(JobID,submitJobDir.toString(),job.getCredentials);</span><br></pre></td></tr></table></figure><h3 id="3-1-2FileInputFormat切片源码解析-input-getSplits-job"><a href="#3-1-2FileInputFormat切片源码解析-input-getSplits-job" class="headerlink" title="3.1.2FileInputFormat切片源码解析(input.getSplits(job))"></a>3.1.2FileInputFormat切片源码解析(input.getSplits(job))</h3><ul><li><p>程序先找到数据存储的目录</p></li><li><p>开始遍历处理（规划切片）目录下的每一个文件</p></li><li><p>遍历第一个文件ss.txt</p><ul><li><p>获取文件大小fs.sizeOf(ss.txt);</p></li><li><p>计算切片大小</p><p>computerSplitSize(Math.max(minSize,Math.min(maxSize,blocksize)))&#x3D;blocksize&#x3D;128M; 如果是本地是32M</p><p>minSize:1k</p><p>maxSize:32M</p></li><li><p>默认情况下，切片的大小是blocksize</p></li><li><p>开始切，</p><ul><li>形成第一个切片：ss.txt:0-128M</li><li>第二个切片：ss.txt:128M-256M</li><li>第三个切片：ss.txt:256M-300M</li></ul><p><strong>每次切片时，都要判断剩余的部分是否大于块的1.1倍数，不大于1.1倍就划分为1个切片</strong></p></li><li><p>将切片信息写到一个切片规划文件中</p></li><li><p>整个切片的核心过程在getSplit()方法中完成</p></li><li><p>InputSplit只记录了切片的元数据信息，比如起始位置，长度等</p></li></ul></li><li><p>提交切片规划到YARN上，YARN的MrAppMaster就可以根据规划文件计算开启的MapTask个数</p></li></ul><h3 id="3-1-3FileInputFormat切片机制"><a href="#3-1-3FileInputFormat切片机制" class="headerlink" title="3.1.3FileInputFormat切片机制"></a>3.1.3FileInputFormat切片机制</h3><ol><li><p>切片机制：</p><ol><li>简单地按照文件内容长度切片</li><li>切片的大小，默认为blocksize大小</li><li><strong>切片时不考虑数据集整体，而是逐个对每一个文件单独切片</strong></li></ol></li><li><p>案例分析：</p><ol><li><p>输入数据有两个文件：</p><p>file1.txt   320M</p><p>file2.txt   10M</p></li><li><p>经过FileInputFormat切片机制运算后，生成切片信息如下：</p><p>file1.txt.split1 –&gt; 0~128M</p><p>file1.txt.split2—&gt;128~256M</p><p>file1.txt.split3—&gt;256~300M</p><p>file2.txt.split1 —&gt; 0-10M</p></li></ol></li><li><p>注意点:</p><ol><li><p>源码中计算机切片大小的公式：</p><p>Math.max(minSize,Math.min(maxSize,blockSize));</p><p>minSize&#x3D;1 默认值为1</p><p>maxSize&#x3D;Long.MAXVlue</p><p>因此，默认情况下，切片大小&#x3D;blocksize </p><p><strong>注意：本地是32M，集群时128M或256M</strong></p></li><li><p>切片大小设置：</p><ul><li><p>maxsize(切片最大值)</p><p>参数如果比blockSize小，会让切片变小，就是等于整个参数的值。</p></li><li><p>minsize(切片最小值)</p><p>参数如果比blockSize大，就可以让切片比blockSize更大。</p></li></ul></li><li><p>获取切片信息API</p><p>&#x2F;&#x2F;获取切片的文件名称</p><p>String name&#x3D;inputSplit.getPath().getName();</p><p>&#x2F;&#x2F;根据文件类型获取切片信息</p><p>FileSplit inputSplit&#x3D;(FileSplit)context.getInputSplit();</p></li></ol></li></ol><h3 id="3-1-4CombineTextInputFormat切片机制"><a href="#3-1-4CombineTextInputFormat切片机制" class="headerlink" title="3.1.4CombineTextInputFormat切片机制"></a>3.1.4CombineTextInputFormat切片机制</h3><ol><li><p>背景：</p><p>框架默认的TextInputFormat切片机制是对任务按文件规划切片，<strong>不管文件多小，都会是一个单独的切片</strong>，都会交给一个MapTask，这样如果有大量小文件，就会<strong>产生大量的MapTask</strong>,处理效率低下。</p></li><li><p>应用场景</p><p>用于小文件过多的场景。它可以将多个小文件从逻辑上规划到一个切片中，这样，多个小文件就可以交给一个MapTask处理。</p></li><li><p>虚拟存储切片的最大值设置</p><p>CombineTextInputFormat.setMaxInputSplitSize(job, 4194304);&#x2F;&#x2F; 4m</p><p>注意：虚拟存储切片最大值设置最好根据实际的小文件大小情况来设置具体的值。</p></li><li><p>切片生成过程</p><img src="D:\大数据\media\ConmbineText.png" alt="ConmbineText" style="zoom:150%;" /><ul><li><p>虚拟存储过程：</p><p>将输入目录下所有文件大小，依次和设置的setMaxInputSplitSize值比较，如果不大于设置的最大值，逻辑上划分一个块。<strong>如果输入文件大于设置的最大值且大于两倍，那么以最大值切割一块；当剩余数据大小超过设置的最大值且不大于最大值2倍，此时将文件均分成2个虚拟存储块（防止出现太小切片）。</strong></p><p>例如setMaxInputSplitSize值为4M，输入文件大小为8.02M，则先逻辑上分成一个4M。剩余的大小为4.02M，如果按照4M逻辑划分，就会出现0.02M的小的虚拟存储文件，所以将剩余的4.02M文件切分成（2.01M和2.01M）两个文件。</p></li><li><p>切片过程</p><p>（a）判断虚拟存储的文件大小是否大于setMaxInputSplitSize值，大于等于则单独形成一个切片。</p><p>（b）如果不大于则跟下一个虚拟存储文件进行合并，共同形成一个切片。</p><p>（c）测试举例：有4个小文件大小分别为1.7M、5.1M、3.4M以及6.8M这四个小文件，则虚拟存储之后形成6个文件块，大小分别为：</p><p>1.7M，（2.55M、2.55M），3.4M以及（3.4M、3.4M）</p><p>最终会形成3个切片，大小分别为：</p><p>（1.7+2.55）M，（2.55+3.4）M，（3.4+3.4）M</p></li></ul></li></ol><h3 id="3-1-5CombineTextInputFormat案例"><a href="#3-1-5CombineTextInputFormat案例" class="headerlink" title="3.1.5CombineTextInputFormat案例"></a>3.1.5CombineTextInputFormat案例</h3><p><strong>查看课件</strong></p><p>关键：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在驱动类中添加代码如下:Driver类中</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//如果不设置InputFormat，它默认用的是TextInputFormat.class</span></span><br><span class="line">job.setInputFormatClass(CombineTextInputFormat.class);</span><br><span class="line"></span><br><span class="line"><span class="comment">//虚拟存储切片最大设置4M,可以调</span></span><br><span class="line">CombineTextInputFormat.setMaxInputSplitSize(job,<span class="number">4194304</span>);</span><br></pre></td></tr></table></figure><h3 id="3-1-6FileInputFormat实现类"><a href="#3-1-6FileInputFormat实现类" class="headerlink" title="3.1.6FileInputFormat实现类"></a>3.1.6FileInputFormat实现类</h3><p>思考：<strong>在运行MR程序时，输入的文件格式包括：基于行的日志文件，二进制格式文件，数据库表等。</strong>那么针对不同的数据类型，MR是如何读取数据的那？</p><p>​FileInputFormat常见的接口实现类包括:TextInputFormat，KeyValueTextInputFormat,NLineInputFormat,CombineTextInputFormat和自定义的InputFormat等。</p><ol><li><p>TextInputFormat：默认：</p><p>按行读取每条记录。<strong>键时存储改行在整个文件中的起始字节偏移量，LongWritable类型。值是这行的内容，不包括任何行终止符(回车和换行符)，Text类型</strong></p></li><li><p>KeyValueTextInputFormat：</p><p>每一行均为一条记录，被分隔符分割为Key,Value。可以通过在驱动类中设置<strong>con.set(KeyValueLineReconrdReader.KEY_VALUE_SEPERATOR,”\t”)</strong>,来设定分隔符。默认分隔符是tab(“\t”)</p></li><li><p>NLineInputFormat</p><p>如果使用NLineInputFormat，代表每个<strong>map进程处理的InputSplit不在按Block块去划分</strong>。而是按<strong>NLineInputFormat指定的行数N来划分</strong>。即</p><p><strong>输入文件的总行数&#x2F;N&#x3D;切片数。如果不整除，切片数&#x3D;商+1</strong></p></li></ol><h3 id="3-1-7keyValueTextInputFormat使用案例"><a href="#3-1-7keyValueTextInputFormat使用案例" class="headerlink" title="3.1.7keyValueTextInputFormat使用案例"></a>3.1.7keyValueTextInputFormat使用案例</h3><ol><li><p>需求</p><p>统计输入文件中每一行的第一个单词相同的行数</p></li><li><p>输入数据</p><p>banzhang ni hao</p><p>xihuan hadoop banzhang</p><p>banzhang ni hao</p><p>xihuan hadoop banzhang</p></li><li><p>注意：在Driver类中</p><p>&#x2F;&#x2F;1.设置切割符，因为默认是”\t”</p><p>conf.set(KeyValueLineRecordReader.KEY_VALUE_SEPERATOR, “ “);</p><p>&#x2F;&#x2F;2. 设置输出格式</p><p>job.setInputFormatClass(KeyValueTextInputFormat.class);</p></li></ol><h3 id="3-1-8NLineInputFormat使用案例"><a href="#3-1-8NLineInputFormat使用案例" class="headerlink" title="3.1.8NLineInputFormat使用案例"></a>3.1.8NLineInputFormat使用案例</h3><ol><li><p>需求；</p><p>对每个单词进行个数统计，要求根据每个输入文件的行数规定输出多少个切片。此案例是将每三行放入1一个切片中。</p></li><li><p>输入数据</p><p>banzhang ni hao</p><p>xihuan hadoop banzhang</p><p>banzhang ni hao</p><p>xihuan hadoop banzhang</p><p>banzhang ni hao</p><p>xihuan hadoop banzhang</p><p>banzhang ni hao</p><p>xihuan hadoop banzhang</p><p>banzhang ni hao</p><p>xihuan hadoop banzhang banzhang ni hao</p><p>xihuan hadoop banzhang</p></li><li><p>期望输出</p><p>Number of splits:4</p></li><li></li></ol><h2 id="3-2MapReduce工作流程"><a href="#3-2MapReduce工作流程" class="headerlink" title="3.2MapReduce工作流程"></a>3.2MapReduce工作流程</h2><img src="D:\大数据\media\MR工作流程1.PNG" alt="MR工作流程1" style="zoom: 200%;" /><img src="D:\大数据\media\MR工作流程2.PNG" alt="MR工作流程2" style="zoom:200%;" /><p><strong>流程解读</strong></p><p>上面的流程是整个MR最全的工作流程。但是<strong>Shuffle过程是从第7步开始到16步</strong>结束。</p><ol><li>MapTask收集我们的map方法输出的KV对，放到内存缓冲区中。</li><li>从内存缓冲区不断溢出本地磁盘文件，可能会溢出多个文件:<ol><li>环形缓冲区，左边放索引信息，右边放元数据</li><li>如果环形缓冲区的使用到80%，会将其溢出到本地磁盘.</li><li>然后再从这端循环反向输入到另外一端。</li></ol></li><li>多个溢出文件会被合并成大的溢出文件。</li><li>在溢出过程及合并的过程中，都要<strong>调用Partitioner进行分区和针对Key</strong>进行排序。</li><li>ReduceTask根据自己的分区号，去各个MapTask机器上取相应结果的分区数据。</li><li>ReduceTask会取到同一个分区的来自不同的MapTask的结果文件，ReduceTask会将这些文件再进行合并(归并排序)</li><li>合并成大文件之后，Shuffle的过程也结束了。后面进入ReduceTask的逻辑运算过程。<strong>从文件中取出一个一个的键值对Group，调用用户自定义的reduce()方法</strong></li></ol><p><strong>注意</strong></p><p>​Shuffle中的缓冲区大小会影响到MapReduce程序的执行效率，原则上说，缓冲区越大，磁盘IO的次数越少，执行速度就越快</p><p>​<strong>缓冲区的大小可以通过参数调整，参数：io.sort.mb默认100M</strong></p><h2 id="3-3Shuffle机制"><a href="#3-3Shuffle机制" class="headerlink" title="3.3Shuffle机制"></a>3.3Shuffle机制</h2><h3 id="3-3-1Shuffle机制"><a href="#3-3-1Shuffle机制" class="headerlink" title="3.3.1Shuffle机制"></a>3.3.1Shuffle机制</h3><p>​位于Map阶段之后，Reduce阶段之前的数据处理过程称为Shuffle。</p><img src="D:\大数据\media\shuffle.png" alt="shuffle" style="zoom:200%;" /><h3 id="3-3-2Partition分区"><a href="#3-3-2Partition分区" class="headerlink" title="3.3.2Partition分区"></a>3.3.2Partition分区</h3><ol><li><p>问题引入：</p><p>要求将统计结果<strong>按照条件输出到不同的分区中（分区）</strong>。</p><p>例如：将统计结果按照手机号不同身份分区。</p></li><li><p><strong>默认Partition分区</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HashPartitioner</span>&lt;K,V&gt; <span class="keyword">extends</span> <span class="title class_">Partitioner</span>&lt;k,v&gt;&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getPartition</span><span class="params">(K key,V value,<span class="type">int</span> numReduceTasks)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (Key.hashCode() &amp; Integer.MAX_VALUE) % numReduceTasks);</span><br><span class="line">        <span class="comment">//Key.hashCode() &amp; Integer.MAX_VALUE：</span></span><br><span class="line">        <span class="comment">//为了对Key.hashCode()瘦身，把前面的多余的值去掉</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">-------注意：----------------</span><br><span class="line">   <span class="number">1.</span> 默认分区是根据：</span><br><span class="line">    key的hashCode对ReduceTasks个数取模得到的。</span><br><span class="line">    用户无法控制哪儿个key存储到哪儿个分区</span><br></pre></td></tr></table></figure></li><li><p><strong>自定义分区的步骤</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//1. 自定义类继承Partitioner，重写getPartition()方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CustomPartition</span> <span class="keyword">extends</span> <span class="title class_">Partitioner</span>&lt;Text,FlowBean&gt;&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getPartition</span><span class="params">(Text key,FlowBean value,<span class="type">int</span> numPartitions)</span>&#123;</span><br><span class="line">        <span class="comment">//控制分区代码逻辑</span></span><br><span class="line">        <span class="keyword">return</span> partition;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//2. 在Job驱动中，设置自定义Partition</span></span><br><span class="line">job.setPartitionerClass(CustomPartitioner.class);</span><br><span class="line"><span class="comment">//3. 自定义Partition后，要根据自定义Partitioner的逻辑设置相应数量的ReduceTask</span></span><br><span class="line">job.setNumReduceTask(<span class="number">5</span>);</span><br></pre></td></tr></table></figure></li><li><p>分区总结</p><p>假设：自定义分区数是5，则</p><ul><li>job.setNumReduceTask(1); 会正常运行，只不过会产生一个输出文件</li><li>job.setNumReduceTask(2); 报错，输出IOException异常</li><li>job.setNumReduceTask(6); 会出现5个分区，第六个为空，产生空文件</li></ul></li></ol><h2 id="3-4MapTask工作机制"><a href="#3-4MapTask工作机制" class="headerlink" title="3.4MapTask工作机制"></a>3.4MapTask工作机制</h2><h2 id="3-5ReduceTask工作机制"><a href="#3-5ReduceTask工作机制" class="headerlink" title="3.5ReduceTask工作机制"></a>3.5ReduceTask工作机制</h2><h2 id="3-6OutputFormat数据输出"><a href="#3-6OutputFormat数据输出" class="headerlink" title="3.6OutputFormat数据输出"></a>3.6OutputFormat数据输出</h2><h2 id="3-7Join多种应用"><a href="#3-7Join多种应用" class="headerlink" title="3.7Join多种应用"></a>3.7Join多种应用</h2><h2 id="3-8计数器应用"><a href="#3-8计数器应用" class="headerlink" title="3.8计数器应用"></a>3.8计数器应用</h2><h2 id="3-9数据清洗-ETL"><a href="#3-9数据清洗-ETL" class="headerlink" title="3.9数据清洗(ETL)"></a>3.9数据清洗(ETL)</h2><h2 id="3-10MapReduce开发总结"><a href="#3-10MapReduce开发总结" class="headerlink" title="3.10MapReduce开发总结"></a>3.10MapReduce开发总结</h2><h1 id="Hadoop数据压缩-开发重要"><a href="#Hadoop数据压缩-开发重要" class="headerlink" title="Hadoop数据压缩(开发重要)"></a>Hadoop数据压缩(开发重要)</h1><h2 id="4-1概述"><a href="#4-1概述" class="headerlink" title="4.1概述"></a>4.1概述</h2><h2 id="4-2MR支持的压缩编码"><a href="#4-2MR支持的压缩编码" class="headerlink" title="4.2MR支持的压缩编码"></a>4.2MR支持的压缩编码</h2><h2 id="4-3压缩方式选择"><a href="#4-3压缩方式选择" class="headerlink" title="4.3压缩方式选择"></a>4.3压缩方式选择</h2><h2 id="4-4压缩位置选择"><a href="#4-4压缩位置选择" class="headerlink" title="4.4压缩位置选择"></a>4.4压缩位置选择</h2><h2 id="4-5压缩参数配置"><a href="#4-5压缩参数配置" class="headerlink" title="4.5压缩参数配置"></a>4.5压缩参数配置</h2><h2 id="4-6压缩实操案例"><a href="#4-6压缩实操案例" class="headerlink" title="4.6压缩实操案例"></a>4.6压缩实操案例</h2><h1 id="Yarn资源调度器-面试重点"><a href="#Yarn资源调度器-面试重点" class="headerlink" title="Yarn资源调度器(面试重点)"></a>Yarn资源调度器(面试重点)</h1><h2 id="5-1Yarn基本架构"><a href="#5-1Yarn基本架构" class="headerlink" title="5.1Yarn基本架构"></a>5.1Yarn基本架构</h2><h2 id="5-2Yarn工作机制"><a href="#5-2Yarn工作机制" class="headerlink" title="5.2Yarn工作机制"></a>5.2Yarn工作机制</h2><h2 id="5-3作业提交全过程"><a href="#5-3作业提交全过程" class="headerlink" title="5.3作业提交全过程"></a>5.3作业提交全过程</h2><h2 id="5-4资源调度器"><a href="#5-4资源调度器" class="headerlink" title="5.4资源调度器"></a>5.4资源调度器</h2><h2 id="5-5任务的准则执行"><a href="#5-5任务的准则执行" class="headerlink" title="5.5任务的准则执行"></a>5.5任务的准则执行</h2><h1 id="Hadoop企业优化-开发重点"><a href="#Hadoop企业优化-开发重点" class="headerlink" title="Hadoop企业优化(开发重点)"></a>Hadoop企业优化(开发重点)</h1><h2 id="6-1MR跑的慢的原因"><a href="#6-1MR跑的慢的原因" class="headerlink" title="6.1MR跑的慢的原因"></a>6.1MR跑的慢的原因</h2><h2 id="6-2MR优化方法"><a href="#6-2MR优化方法" class="headerlink" title="6.2MR优化方法"></a>6.2MR优化方法</h2><h2 id="6-3HDFS小文件优化方法"><a href="#6-3HDFS小文件优化方法" class="headerlink" title="6.3HDFS小文件优化方法"></a>6.3HDFS小文件优化方法</h2><h1 id="MapReduce扩展案例"><a href="#MapReduce扩展案例" class="headerlink" title="MapReduce扩展案例"></a>MapReduce扩展案例</h1><h2 id="7-1倒排索引案例（多Job串联）"><a href="#7-1倒排索引案例（多Job串联）" class="headerlink" title="7.1倒排索引案例（多Job串联）"></a>7.1倒排索引案例（多Job串联）</h2><h2 id="7-2TopN案例"><a href="#7-2TopN案例" class="headerlink" title="7.2TopN案例"></a>7.2TopN案例</h2><h2 id="7-3栈博客共同好友案例"><a href="#7-3栈博客共同好友案例" class="headerlink" title="7.3栈博客共同好友案例"></a>7.3栈博客共同好友案例</h2><h1 id="常见问题和解决"><a href="#常见问题和解决" class="headerlink" title="常见问题和解决"></a>常见问题和解决</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;MapReduce概述&quot;&gt;&lt;a href=&quot;#MapReduce概述&quot; class=&quot;headerlink&quot; title=&quot;MapReduce概述&quot;&gt;&lt;/a&gt;MapReduce概述&lt;/h1&gt;&lt;h2 id=&quot;1-1MapReduce定义&quot;&gt;&lt;a href=&quot;#1-1</summary>
      
    
    
    
    <category term="大数据" scheme="http://example.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="hadoop" scheme="http://example.com/tags/hadoop/"/>
    
  </entry>
  
  <entry>
    <title>hdfs</title>
    <link href="http://example.com/2022/05/29/hdfs/"/>
    <id>http://example.com/2022/05/29/hdfs/</id>
    <published>2022-05-29T14:33:38.000Z</published>
    <updated>2022-05-29T14:35:23.819Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HDFS篇"><a href="#HDFS篇" class="headerlink" title="HDFS篇"></a>HDFS篇</h1><h1 id="HDFS概述"><a href="#HDFS概述" class="headerlink" title="HDFS概述"></a>HDFS概述</h1><ul><li><p>HDFS（Hadoop Distribute FILE System）：是一个文件管理系统，然后是分布式</p></li><li><p>使用场景：适合<strong>一次写入，多次读出</strong>的场景，且支持文件的修改</p><ul><li>适合数据分析</li><li>不适合用作网盘(网盘增删改查多)</li></ul></li><li><p>优缺点：</p><ul><li>优点:<ul><li>高容错型：<ul><li>可以设置副本数</li><li>当一个副本丢失后，它可以自动恢复</li></ul></li><li>适合处理大数据<ul><li>数据规模：处理规模达到GB、TB甚至PB级别</li><li>文件规模：能够处理百万规模以上的文件数量</li></ul></li><li>可构建在廉价机器上，通过多副本机制，提高可靠性</li></ul></li><li>缺点：<ul><li>不适合低延时数据访问，比如毫秒级的存储数据，是做不到的</li><li>无法高效的对<strong>大量小文件</strong>进存储<ul><li>存储<strong>大量小文</strong>件的话，他会占用NameNode大量的内存来存储文件和快信息。这样不可取，因为NameNode的内存总是有限的</li><li>小文件存储的寻址时间会超过读取时间，他违反了HDFS的设计目标</li></ul></li><li>不支持并发写入，文件随机修改<ul><li>一个文件只能有一个写，不允许多个线程同时写</li><li>仅支持数据<strong>append（追加）</strong>，不支持文件的随机修改</li></ul></li></ul></li></ul></li><li><p>HDFS的文件块大小（<strong>面试重点</strong>）</p><ul><li>默认大小：<ul><li>Hadoop2.x是128M</li><li>Hadoop1.x是64M</li></ul></li><li>寻址时间为<strong>传输时间的1%</strong> ,为最佳时间</li><li>如果硬盘的传输速率是100M&#x2F;S，那么最佳的是大小是100M(一般写128M)<ul><li>如果传输速率高，可以是256M</li></ul></li></ul></li><li><p>为什么块的大小不能设置太小，也不能设置太大？</p><ul><li>HDFS的<strong>块设置太小，会增加寻址时间</strong></li><li>块设置太大，从<strong>磁盘传输数据</strong>的时间会明显大于定位这个块开<strong>始位置所需时间</strong></li><li>总结：<ul><li>HDFS的块大小设置取决于磁盘传输速率</li></ul></li></ul></li></ul><h1 id="HDFS的Shell操作-重点"><a href="#HDFS的Shell操作-重点" class="headerlink" title="HDFS的Shell操作(重点)"></a>HDFS的Shell操作(重点)</h1><h2 id="基本语法："><a href="#基本语法：" class="headerlink" title="基本语法："></a>基本语法：</h2><ul><li>bin&#x2F;hadoop fs 具体命令 —-&gt; 配置了环境变量可以 hadoop fs 具体命令</li><li>bin&#x2F;hdfs dfs 具体命令</li><li>注意：dfs 是fs 实现类，所以直接使用hadoop fs即可</li></ul><h2 id="常见命令"><a href="#常见命令" class="headerlink" title="常见命令"></a>常见命令</h2><ul><li><p>启动Hadoop集群</p><p>sbin&#x2F;start-dfs.sh   —&gt; 这个要在NameNode节点主机启动</p><p>sbin&#x2F;start-yarn-sh  —-&gt; 这个要在ResourceManager节点主机启动</p></li><li><p>-help ：输出这个命令的参数</p><p>hadoop fs -help ls  &#x2F;&#x2F; hadoop fs -help 跟需要了解的指令</p></li><li><p>-ls:   显示目录信息</p><p>hadoop fs -ls -hl &#x2F;user&#x2F;</p></li><li><p>-mkdir: 创建一个文件夹</p><p>hadoop fs -mkdir &#x2F;user&#x2F;tom</p><p><strong>递归创建文件夹：hadoop fs -mkdir -p &#x2F;user&#x2F;digui1&#x2F;digui2&#x2F;digui3</strong></p></li><li><p>-moveFromLocal: 从本地移动到云端(<strong>本地删除</strong>)</p><p>hadoop fs -moverFromLocal 源文件所在(指本地)  目标文件所在(指云端)</p></li><li><p>-copyFromLocal: 从本地拷贝到云端(<strong>本地不删除，等于复制</strong>)</p><p>hadoop fs -copyFromLocal 源文件所在(指本地)   目标文件所在(指云端)</p></li><li><p>-appendToFile :  追加一个文件到引进存在的文件末尾</p><p>hadoop fs -appendToFile 需要追加.txt  &#x2F;user&#x2F;tom&#x2F;被追加的文件.txt</p></li><li><p>-cat : 显示文件内容</p><p>hadoop fs -cat &#x2F;user&#x2F;tom&#x2F;txixh.txt</p></li><li><p>-chgrp、-chown、-chmod: 与Linux的用法一致</p></li><li><p>-copyToLocal: 从云端拷贝至本地</p><p>hadoop fs -copyToLocal 源文件所在(云端)  目的文件所在(本地)</p></li><li><p>-cp :从ＨＤＦＳ的一个路径拷贝到HDFS的另一个路径</p><p>hadoop fs -cp 路径1 路径2</p></li><li><p>-mv: 在HDFS目录中移动文件</p><p>hadoop fs -mv 路径1 路径2</p></li><li><p>-get:等同于copyToLocal, 就是从ＨＤＦＳ下载到本地</p></li><li><p>-put：等同于copyFromLocal，就是从本地拷贝到ＨＤＦＳ</p></li><li><p>-getmerge:合并下载，比如HDFS的目录 &#x2F;user&#x2F;tom&#x2F;下又多个文件log1、log2、log3等。使用这个命令将其合成一个文件</p></li><li><p>-tail:显示一个文件的末尾</p><p>hadoop fs -tail &#x2F;user&#x2F;tom&#x2F;log1</p></li><li><p>-rm: 删除一个文件或文件夹</p><p>hadoop fs -rm &#x2F;user&#x2F;tom</p></li><li><p>-rmdir:删除一个空目录(<strong>必须是空的</strong>)</p><p>hadoop fs -rmdir &#x2F;user&#x2F;tom&#x2F;zz</p></li><li><p>-du ： 统计文件夹的大小信息</p><p>hadoop fs -du -h &#x2F;user&#x2F;tom</p></li><li><p>-setrep: 设置HDFS中文件的副本数</p><p>hadoop fs -setrep 10 &#x2F;user&#x2F;tom&#x2F;shi.txt</p></li></ul><h1 id="HDFS客户端操作"><a href="#HDFS客户端操作" class="headerlink" title="HDFS客户端操作"></a>HDFS客户端操作</h1><h2 id="HDFS客户机准备"><a href="#HDFS客户机准备" class="headerlink" title="HDFS客户机准备"></a>HDFS客户机准备</h2><ul><li><p>安装Hadoop的环境，配置环境变量</p></li><li><p>创建Maven工程</p></li><li><p>导入pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.logging.log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.hadoop<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hadoop-common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.hadoop<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hadoop-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.hadoop<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hadoop-hdfs<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jdk.tools<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jdk.tools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>system<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">systemPath</span>&gt;</span>$&#123;JAVA_HOME&#125;/lib/tools.jar<span class="tag">&lt;/<span class="name">systemPath</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>在Eclipse&#x2F;IEDA如果打印不出日志，在控制台上显示</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.log4j:WARN No appenders could be found for logger (org.apache.hadoop.util.Shell).  </span><br><span class="line">2.log4j:WARN Please initialize the log4j system properly.  </span><br><span class="line">3.log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.</span><br></pre></td></tr></table></figure></li><li><p>解决方案：在resource文件夹下，创建名为”log4j.properties”</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">log4j.rootLogger=INFO, stdout</span><br><span class="line">log4j.appender.stdout=org.apache.log4j.ConsoleAppender</span><br><span class="line">log4j.appender.stdout.layout=org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.stdout.layout.ConversionPattern=%d %p [%c] - %m%n</span><br><span class="line">log4j.appender.logfile=org.apache.log4j.FileAppender</span><br><span class="line">log4j.appender.logfile.File=target/spring.log</span><br><span class="line">log4j.appender.logfile.layout=org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.logfile.layout.ConversionPattern=%d %p [%c] - %m%n</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="HDFS的API操作"><a href="#HDFS的API操作" class="headerlink" title="HDFS的API操作"></a>HDFS的API操作</h2><h3 id="HDFS文件上传"><a href="#HDFS文件上传" class="headerlink" title="HDFS文件上传"></a>HDFS文件上传</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testCopyFromLocalFile</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">//1. 获取文件系统</span></span><br><span class="line">    Configuration conf= <span class="keyword">new</span> <span class="title class_">Configuration</span>();</span><br><span class="line">    FileSystem fs=FileSystem.get(<span class="keyword">new</span> <span class="title class_">URI</span>(<span class="string">&quot;hdfs://node01:9000&quot;</span>),conf,<span class="string">&quot;tom&quot;</span>);</span><br><span class="line">    <span class="comment">//2. 上传文件</span></span><br><span class="line">    fs.copyFromLocal(<span class="keyword">new</span> <span class="title class_">PATH</span>(<span class="string">&quot;e:/ban.txt&quot;</span>),<span class="keyword">new</span> <span class="title class_">PATH</span>(<span class="string">&quot;/user/tom/ban.txt&quot;</span>));</span><br><span class="line">    <span class="comment">//3. 释放资源</span></span><br><span class="line">    fs.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">HDFS的副本优先级问题：</span><br><span class="line">参数优先级排序：（1）客户端代码中设置的值 &gt;（2）ClassPath下的用户自定义配置文件 &gt;（3）然后是服务器的默认配置</span><br><span class="line"></span><br><span class="line">(1)客户端设置：</span><br><span class="line">conf.set(&quot;dfs.repulication&quot;,&quot;2&quot;);</span><br><span class="line">(2)ClassPath下的用户自定义配置文件</span><br><span class="line">将hdfs-site.xml拷贝到项目的根目录下</span><br><span class="line">        <span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line">        <span class="meta">&lt;?xml-stylesheet type=<span class="string">&quot;text/xsl&quot;</span> href=<span class="string">&quot;configuration.xsl&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.replication<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">value</span>&gt;</span>1<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line">(3)然后是服务器的默认配置，就是在Linux端里的hdfs-site.xml的设置</span><br></pre></td></tr></table></figure><h3 id="HDFS文件下载"><a href="#HDFS文件下载" class="headerlink" title="HDFS文件下载"></a>HDFS文件下载</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">copyToLocal1</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">//1. 创建文件系统</span></span><br><span class="line">    <span class="type">Configuration</span> <span class="variable">conf</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">Configuration</span>();</span><br><span class="line">    FileSystem fs= FileSystem.get(<span class="keyword">new</span> <span class="title class_">URI</span>(<span class="string">&quot;hdfs://node01:9000&quot;</span>),conf,<span class="string">&quot;tom&quot;</span>);</span><br><span class="line">    <span class="comment">//2. 下载文件</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    copyToLocalFile: 参数说明</span></span><br><span class="line"><span class="comment">    boolean delSrc 指是否将原文件删除</span></span><br><span class="line"><span class="comment">Path src 指要下载的文件路径</span></span><br><span class="line"><span class="comment">Path dst 指将文件下载到的路径</span></span><br><span class="line"><span class="comment">boolean useRawLocalFileSystem 是否开启文件校验。</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    fs.copyToLocalFile(<span class="literal">false</span>,<span class="keyword">new</span> <span class="title class_">PATH</span>(<span class="string">&quot;/user/tom/ban.txt&quot;</span>),<span class="keyword">new</span> <span class="title class_">PATH</span>(<span class="string">&quot;e:/ban.txt&quot;</span>),<span class="literal">true</span>);</span><br><span class="line">    <span class="comment">//3. 关闭资源</span></span><br><span class="line">    fs.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="HDFS文件夹删除"><a href="#HDFS文件夹删除" class="headerlink" title="HDFS文件夹删除"></a>HDFS文件夹删除</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">rmDir</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="comment">//1. 创建文件系统</span></span><br><span class="line">    <span class="type">Configuration</span> <span class="variable">conf</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">Configuration</span>();</span><br><span class="line">    FileSystem fs= FileSystem.get(<span class="keyword">new</span> <span class="title class_">URI</span>(<span class="string">&quot;hdfs://node01:9000&quot;</span>),conf,<span class="string">&quot;tom&quot;</span>);</span><br><span class="line">    <span class="comment">//2. 文件夹删除</span></span><br><span class="line">    fs.delete(<span class="keyword">new</span> <span class="title class_">PATH</span>(<span class="string">&#x27;/user/tom&#x27;</span>),<span class="literal">true</span>);</span><br><span class="line">    <span class="comment">//3. 关闭资源</span></span><br><span class="line">    fs.close;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="HDFS文件名更改"><a href="#HDFS文件名更改" class="headerlink" title="HDFS文件名更改"></a>HDFS文件名更改</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">renameDir</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">//1. 创建文件系统</span></span><br><span class="line">    <span class="type">Configuration</span> <span class="variable">conf</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">Configuration</span>();</span><br><span class="line">    FileSystem fs= FileSystem.get(<span class="keyword">new</span> <span class="title class_">URI</span>(<span class="string">&quot;hdfs://node01:9000&quot;</span>),conf,<span class="string">&quot;tom&quot;</span>);</span><br><span class="line">    <span class="comment">//2. 更改文件名</span></span><br><span class="line">    fs.rename(<span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;/banzhang.txt&quot;</span>),<span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;/zzzz.txt&quot;</span>);</span><br><span class="line">    <span class="comment">//3. 关闭资源</span></span><br><span class="line">fs.close();          </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="HDFS文件详情查看"><a href="#HDFS文件详情查看" class="headerlink" title="HDFS文件详情查看"></a>HDFS文件详情查看</h3><p><strong>查看文件名称、权限、长度、块信息</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">viewDetialDir</span><span class="params">()</span>&#123;</span><br><span class="line">      <span class="comment">//1. 创建文件系统</span></span><br><span class="line">    <span class="type">Configuration</span> <span class="variable">conf</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">Configuration</span>();</span><br><span class="line">    FileSystem fs= FileSystem.get(<span class="keyword">new</span> <span class="title class_">URI</span>(<span class="string">&quot;hdfs://node01:9000&quot;</span>),conf,<span class="string">&quot;tom&quot;</span>);</span><br><span class="line">    <span class="comment">//2. 查看文件名称、权限、长度、块信息</span></span><br><span class="line">    <span class="comment">//2.1 获取文件详情</span></span><br><span class="line">    RemoteIterator&lt;LocatedFileStatus&gt; listFiles =fs.listFiles(<span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;/&quot;</span>),<span class="literal">true</span>);</span><br><span class="line">    <span class="comment">//2.2 输出详情</span></span><br><span class="line">    <span class="keyword">while</span>(listFiles.hasNext())&#123;</span><br><span class="line">        <span class="type">LocatedFileStatus</span> <span class="variable">status</span> <span class="operator">=</span> listFiles.next();</span><br><span class="line">        <span class="comment">// 文件名称</span></span><br><span class="line">        System.out.println(status.getPath().getName());</span><br><span class="line">        <span class="comment">// 长度</span></span><br><span class="line">        System.out.println(status.getlen());</span><br><span class="line">        <span class="comment">// 权限</span></span><br><span class="line">        System.out.println(status.getPermission());</span><br><span class="line">        <span class="comment">// 分组</span></span><br><span class="line">         System.out.println(status.getGroup());</span><br><span class="line">        <span class="comment">// 获取存储的块信息</span></span><br><span class="line">        BlockLocation[] blockLocations = status.getBlockLocations();</span><br><span class="line"><span class="keyword">for</span> (BlockLocation blockLocation : blockLocations) &#123;</span><br><span class="line"><span class="comment">// 获取块存储的主机节点</span></span><br><span class="line">String[] hosts = blockLocation.getHosts();</span><br><span class="line"><span class="keyword">for</span> (String host : hosts) &#123;</span><br><span class="line">System.out.println(host);</span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//3. 关闭资源 </span></span><br><span class="line">    fs.close();</span><br><span class="line">&#125;</span><br><span class="line">    </span><br></pre></td></tr></table></figure><h3 id="HDFS文件和文件夹判断"><a href="#HDFS文件和文件夹判断" class="headerlink" title="HDFS文件和文件夹判断"></a>HDFS文件和文件夹判断</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">dirOrFile</span><span class="params">()</span>&#123;</span><br><span class="line">     <span class="comment">//1. 创建文件系统</span></span><br><span class="line">    <span class="type">Configuration</span> <span class="variable">conf</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">Configuration</span>();</span><br><span class="line">    FileSystem fs= FileSystem.get(<span class="keyword">new</span> <span class="title class_">URI</span>(<span class="string">&quot;hdfs://node01:9000&quot;</span>),conf,<span class="string">&quot;tom&quot;</span>);</span><br><span class="line">    <span class="comment">//2. 判断是文件还是文件夹</span></span><br><span class="line">    fileStatus[] listStatus = fs.listStatus(<span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;/&quot;</span>));</span><br><span class="line">    <span class="keyword">for</span>(FileStatus fileStatus : listStatus)&#123;</span><br><span class="line">        <span class="comment">// 如果是文件</span></span><br><span class="line"><span class="keyword">if</span> (fileStatus.isFile()) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;f:&quot;</span>+fileStatus.getPath().getName());</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;d:&quot;</span>+fileStatus.getPath().getName());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//3. 关闭资源</span></span><br><span class="line">fs.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="HDFS的I-x2F-O操作"><a href="#HDFS的I-x2F-O操作" class="headerlink" title="HDFS的I&#x2F;O操作"></a>HDFS的I&#x2F;O操作</h2><p>​上面我们学的API操作HDFS系统都是框架封装好的。那么如果我们想自己实现上述API的操作该怎么实现呢？</p><p>我们可以采用IO流的方式实现数据的上传和下载</p><h3 id="HDFS文件上传-1"><a href="#HDFS文件上传-1" class="headerlink" title="HDFS文件上传"></a>HDFS文件上传</h3><p><strong>需求：把本地e盘上的banzhu.txt 文件上传到HDFS根目录</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">customFileUpload</span><span class="params">()</span>&#123;</span><br><span class="line">     <span class="comment">//1. 创建文件系统</span></span><br><span class="line">    <span class="type">Configuration</span> <span class="variable">conf</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">Configuration</span>();</span><br><span class="line">    FileSystem fs= FileSystem.get(<span class="keyword">new</span> <span class="title class_">URI</span>(<span class="string">&quot;hdfs://node01:9000&quot;</span>),conf,<span class="string">&quot;tom&quot;</span>);</span><br><span class="line">    <span class="comment">//2. 创建输入流</span></span><br><span class="line">    <span class="type">FileInputStream</span> <span class="variable">fis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInPutStream</span>(<span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;e:/banzhu.txt&quot;</span>));</span><br><span class="line">    <span class="comment">//3. 创建输出流</span></span><br><span class="line">    <span class="type">FSDataOutPutStream</span> <span class="variable">fos</span> <span class="operator">=</span> fs.create(<span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;/user/tom/banzhu.txt&quot;</span>));</span><br><span class="line">    <span class="comment">//4. 流对拷</span></span><br><span class="line">    IOUtils.copyBytes(fis,fos,conf);</span><br><span class="line">    <span class="comment">//5. 释放资源</span></span><br><span class="line">    IOUtils.close(fos);</span><br><span class="line">    IOUtils.close(fis);</span><br><span class="line">    fs.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="HDFS文件下载-1"><a href="#HDFS文件下载-1" class="headerlink" title="HDFS文件下载"></a>HDFS文件下载</h3><p><strong>需求：从HDFS上下载banhua.txt文件到本地e盘上</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">customFileDownLoad</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">//1. 创建文件系统</span></span><br><span class="line">    <span class="type">Configuration</span> <span class="variable">conf</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">Configuration</span>();</span><br><span class="line">    FileSystem fs= FileSystem.get(<span class="keyword">new</span> <span class="title class_">URI</span>(<span class="string">&quot;hdfs://node01:9000&quot;</span>),conf,<span class="string">&quot;tom&quot;</span>);</span><br><span class="line">    <span class="comment">//2. 创建输入流</span></span><br><span class="line">    <span class="type">FSDataInputStream</span> <span class="variable">fis</span> <span class="operator">=</span> fs.open(<span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;/banzhu.txt&quot;</span>));</span><br><span class="line">    <span class="comment">//3. 创建输出流</span></span><br><span class="line">    <span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;e:/banzhu.txt&quot;</span>));</span><br><span class="line">    <span class="comment">//4. 流对拷</span></span><br><span class="line">    IOUtiles.copyBytes(fis,fos,conf);</span><br><span class="line">    <span class="comment">//5. 释放资源</span></span><br><span class="line">    IOUtils.close(fos);</span><br><span class="line">    IOUtils.close(fis);</span><br><span class="line">    fs.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="定位文件读取"><a href="#定位文件读取" class="headerlink" title="定位文件读取"></a>定位文件读取</h3><p><strong>需求：分块读取HDFS上的大文件，比如根目录下的&#x2F;hadoop-2.7.2.tar.gz</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">************注意：因为hadoop-<span class="number">2.7</span><span class="number">.2</span>.tar.gz大小在<span class="number">188.</span>MB，而每块是128M,所以分为了两块********</span><br><span class="line">************现在下载的是第一块*******************************************************</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">clipFile</span><span class="params">()</span>&#123;</span><br><span class="line">     <span class="comment">//1. 创建文件系统</span></span><br><span class="line">    <span class="type">Configuration</span> <span class="variable">conf</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">Configuration</span>();</span><br><span class="line">    FileSystem fs= FileSystem.get(<span class="keyword">new</span> <span class="title class_">URI</span>(<span class="string">&quot;hdfs://node01:9000&quot;</span>),conf,<span class="string">&quot;tom&quot;</span>);</span><br><span class="line">    <span class="comment">//2. 获取输入流</span></span><br><span class="line">    <span class="type">FSDataInputStream</span> <span class="variable">fis</span> <span class="operator">=</span>fs.open(<span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;/hadoop-2.7.2.tar.gz&quot;</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//3. 获取输出流</span></span><br><span class="line">    <span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;e:/hadoop-2.7.2.tar.gz.part1&quot;</span>));</span><br><span class="line">    <span class="comment">//4. 流对拷</span></span><br><span class="line">    <span class="type">byte</span>[] buf = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];<span class="comment">//1024字节</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">1024</span>*<span class="number">128</span>;i++)&#123; <span class="comment">//因为每块是128M = 1024(kb)*1024(mb)*128</span></span><br><span class="line">        fis.read(buf);</span><br><span class="line">        fos.write(buf);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//5. 释放资源</span></span><br><span class="line">    IOUtils.closeStream(fis);</span><br><span class="line">IOUtils.closeStream(fos);</span><br><span class="line">fs.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">************现在下载的是第二块*******************************************************</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">clipFile1</span><span class="params">()</span>&#123;</span><br><span class="line">     <span class="comment">//1. 创建文件系统</span></span><br><span class="line">    <span class="type">Configuration</span> <span class="variable">conf</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">Configuration</span>();</span><br><span class="line">    FileSystem fs= FileSystem.get(<span class="keyword">new</span> <span class="title class_">URI</span>(<span class="string">&quot;hdfs://node01:9000&quot;</span>),conf,<span class="string">&quot;tom&quot;</span>);</span><br><span class="line">    <span class="comment">//2. 获取输入流</span></span><br><span class="line">    <span class="type">FSDataInputStream</span> <span class="variable">fis</span> <span class="operator">=</span>fs.open(<span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;/hadoop-2.7.2.tar.gz&quot;</span>));</span><br><span class="line">    <span class="comment">//3. 设置输入点</span></span><br><span class="line">    fis.seek(<span class="number">1024</span>*<span class="number">1024</span>*<span class="number">128</span>); <span class="comment">//就是前面下载的块的大小，那里关闭</span></span><br><span class="line">    <span class="comment">//4. 创建输出流</span></span><br><span class="line">   FileOutputStream fos= <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;e:/hadoop-2.7.2.tar.gz.part2&quot;</span>));</span><br><span class="line">    <span class="comment">//6. 流对拷</span></span><br><span class="line">    IOUtils.copyBytes(fis,fos,conf);</span><br><span class="line">    <span class="comment">//6. 释放资源</span></span><br><span class="line">    IOUtils.closeStream(fis);</span><br><span class="line">IOUtils.closeStream(fos);</span><br><span class="line">fs.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="HDFS的数据流-面试重点"><a href="#HDFS的数据流-面试重点" class="headerlink" title="HDFS的数据流(面试重点)"></a>HDFS的数据流(面试重点)</h1><h2 id="HDFS写数据流程"><a href="#HDFS写数据流程" class="headerlink" title="HDFS写数据流程"></a>HDFS写数据流程</h2><p><img src="D:\大数据\media\HDFS写数据.PNG"></p><p>步骤解读：</p><ul><li>客户端通过DistributedFileSystem模块想NameNode请求上传文件，NameNode检查目标文件是否存在，父目录是否存在</li><li>若是不存在，则响应可以上传文件</li><li>客户端请求上传第一个Block(0-128M)，请求返回DataNode</li><li>NameNode根据节点距离和负载情况，返回DataNode节点信息，表示用这些节点存储数据</li><li>客户端通过FSDataOutputStream开始请求DN1上传数据，DN1收到数据会继续调用DN2，然后DN2调用DN3，将这个通信管道建立完成</li><li>DN1,DN2,DN3逐级应答客户端</li><li>客户端开始往DN1上传第一个Block(先从磁盘读取数据放到一个本地内存缓存)，以Packet为单位，DN1收到一个Packet就会传给DN2,DN2传给DN3；<strong>DN1每传一个packet会放入一个应答队列等待应答</strong></li><li>当一个Block传输完成之后，客户端再次请求NameNode上传第二个Block服务器。(重复执行3-7步骤)</li></ul><h2 id="网络拓扑：节点距离计算"><a href="#网络拓扑：节点距离计算" class="headerlink" title="网络拓扑：节点距离计算"></a>网络拓扑：节点距离计算</h2><p>在HDFS写数据的过程中，NameNode会选择距离待上传数据最近距离的DataNode接收数据。那么这个最近距离怎么计算呢？</p><p>​<strong>节点距离：两个节点到达最近的共同祖先的距离总和。</strong></p><p><img src="D:\大数据\media\网络拓扑1.PNG"></p><p>​例如，假设有数据中心d1机架r1中的节点n1。该节点可以表示为&#x2F;d1&#x2F;r1&#x2F;n1。利用这种标记，这里给出四种距离描述，如图3-9所示。</p><p><img src="D:\大数据\media\网络拓扑2.PNG"></p><h3 id="副本节点选择"><a href="#副本节点选择" class="headerlink" title="副本节点选择"></a>副本节点选择</h3><p><img src="D:\大数据\media\网络拓扑3.PNG"></p><h2 id="HDFS读数据流程"><a href="#HDFS读数据流程" class="headerlink" title="HDFS读数据流程"></a>HDFS读数据流程</h2><p><img src="D:\大数据\media\HDFS读数据.PNG" alt="HDFS读数据"></p><p>步骤详情：</p><ul><li>客户端通过Distributed FileSystem向NameNode请求下载文件，NameNode通过查询元数据，找到文件所在的DataNode地址</li><li>挑选一台DataNode(就近原则)服务器，然后读取数据</li><li>DataNode开始传输数据给客户端（从磁盘里面读取数据输入流，以Packet为单位来做校验）。</li><li>客户端以Packet为单位接受，先放在本地缓存，然后写入目标文件</li></ul><h1 id="NameNode和SecondaryNameNode"><a href="#NameNode和SecondaryNameNode" class="headerlink" title="NameNode和SecondaryNameNode"></a>NameNode和SecondaryNameNode</h1><h2 id="NN和2NN的工作机制"><a href="#NN和2NN的工作机制" class="headerlink" title="NN和2NN的工作机制"></a>NN和2NN的工作机制</h2><p>思考：NameNode中的元数据是存储在哪里的？</p><p>​首先，我们做个假设，如果存储在NameNode节点的磁盘中，因为经常需要进行随机访问，还有响应客户请求，必然是效率过低。因此，元数据需要存放在内存中。但如果只存在内存中，一旦断电，元数据丢失，整个集群就无法工作了。因此产生在磁盘中备份元数据的FsImage。</p><p>​这样又会带来新的问题，当在内存中的元数据更新时，如果同时更新FsImage，就会导致效率过低，但如果不更新，就会发生一致性问题，一旦NameNode节点断电，就会产生数据丢失。因此，引入Edits文件(只进行追加操作，效率很高)。每当元数据有更新或者添加元数据时，修改内存中的元数据并追加到Edits中。这样，一旦NameNode节点断电，可以通过FsImage和Edits的合并，合成元数据。</p><p>​但是，如果长时间添加数据到Edits中，会导致该文件数据过大，效率降低，而且一旦断电，恢复元数据需要的时间过长。因此，需要定期进行FsImage和Edits的合并，如果这个操作由NameNode节点完成，又会效率过低。因此，引入一个新的节点SecondaryNamenode，专门用于FsImage和Edits的合并。</p><p>具体如图所示：</p><p><img src="D:\大数据\media\NameNode工作机制.PNG" alt="NameNode工作机制"></p><p><strong>第一阶段：</strong></p><ol><li>第一次启动NameNode格式化后，创建Fsimage和Edits文件。如果不是第一次启动，直接加载编辑日志和镜像文件到内存。</li><li>客户端对元数据进行增删改查</li><li>NameNode记录操作日志，更新滚动日志</li><li>NameNode在内存中对数据进行增删改查</li></ol><p><strong>第二阶段</strong></p><ol><li><p>Secondary NameNode询问NameNode是否需要CheckPoint。直接带回NameNode是否检查结果</p></li><li><p>Secondary NameNode请求执行CheckPoint</p></li><li><p>NameNode滚动正在写的Edits日志</p></li><li><p>将滚动前编辑日志和镜像文件拷贝到Secondary NameNode</p></li><li><p>Secondary NameNode加载编辑日志和镜像文件到内存，并合并</p></li><li><p>生成新的镜像文件fsimagechekpoint</p></li><li><p>拷贝fsimage chekpoint 到 NameNode</p></li><li><p>NameNode将fsimage chkpoint 重新命名成fsimage</p></li></ol><p><strong style="color:red;font-size:16px"><strong>NN和2NN工作机制详解</strong></strong></p><p><strong>Fsimage：</strong>NameNode内存中元数据序列化后形成的文件。</p><p><strong>Edits：</strong>记录客户端更新元数据信息的每一步操作（可通过Edits运算出元数据）。</p><p>​NameNode启动时，先滚动Edits并生成一个空的edits.inprogress，然后加载Edits和Fsimage到内存中，此时NameNode内存就持有最新的元数据信息。Client开始对NameNode发送元数据的增删改的请求，这些请求的操作首先会被记录到edits.inprogress中（查询元数据的操作不会被记录在Edits中，因为查询操作不会更改元数据信息），如果此时NameNode挂掉，重启后会从Edits中读取元数据的信息。然后，NameNode会在内存中执行元数据的增删改的操作。</p><p>​由于Edits中记录的操作会越来越多，Edits文件会越来越大，导致NameNode在启动加载Edits时会很慢，所以需要对Edits和Fsimage进行合并（所谓合并，就是将Edits和Fsimage加载到内存中，照着Edits中的操作一步步执行，最终形成新的Fsimage）。SecondaryNameNode的作用就是帮助NameNode进行Edits和Fsimage的合并工作。</p><p>​SecondaryNameNode首先会询问NameNode是否需要CheckPoint（触发CheckPoint需要满足两个条件中的任意一个，定时时间到和Edits中数据写满了）。直接带回NameNode是否检查结果。SecondaryNameNode执行CheckPoint操作，首先会让NameNode滚动Edits并生成一个空的edits.inprogress，滚动Edits的目的是给Edits打个标记，以后所有新的操作都写入edits.inprogress，其他未合并的Edits和Fsimage会拷贝到SecondaryNameNode的本地，然后将拷贝的Edits和Fsimage加载到内存中进行合并，生成fsimage.chkpoint，然后将fsimage.chkpoint拷贝给NameNode，重命名为Fsimage后替换掉原来的Fsimage。NameNode在启动时就只需要加载之前未合并的Edits和Fsimage即可，因为合并过的Edits中的元数据信息已经被记录在Fsimage中。</p><h1 id="Fsimage和Edits解析"><a href="#Fsimage和Edits解析" class="headerlink" title="Fsimage和Edits解析"></a>Fsimage和Edits解析</h1><h2 id="Fsimage和Edits概念"><a href="#Fsimage和Edits概念" class="headerlink" title="Fsimage和Edits概念"></a>Fsimage和Edits概念</h2><p><img src="D:\大数据\media\Fsimage.PNG" alt="Fsimage"></p><h2 id="查看文件"><a href="#查看文件" class="headerlink" title="查看文件"></a>查看文件</h2><h3 id="oiv查看Fsimage文件"><a href="#oiv查看Fsimage文件" class="headerlink" title="oiv查看Fsimage文件"></a>oiv查看Fsimage文件</h3><p>（1）查看oiv和oev命令</p><p>​[atguigu@hadoop102 current]$ hdfs</p><p>​<strong>oiv:</strong>    apply the offline fsimage viewer to an fsimage</p><p>​**oev: **  apply the offline edits viewer to an edits file</p><p>（2）基本语法</p><p>​hdfs oiv -p 文件类型 -i镜像文件 -o 转换后文件输出路径</p><p>（3）案例实操</p><p>[atguigu@hadoop102 current]$ pwd</p><p>​&#x2F;opt&#x2F;module&#x2F;hadoop-2.7.2&#x2F;data&#x2F;tmp&#x2F;dfs&#x2F;name&#x2F;current</p><p>[atguigu@hadoop102 current]$ hdfs oiv -p XML -i fsimage_0000000000000000025 -o &#x2F;opt&#x2F;module&#x2F;hadoop-2.7.2&#x2F;fsimage.xml</p><p>[atguigu@hadoop102 current]$ cat &#x2F;opt&#x2F;module&#x2F;hadoop-2.7.2&#x2F;fsimage.xml</p><p>将显示的xml文件内容拷贝到Eclipse中创建的xml文件中，并格式化。部分显示结果如下。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">inode</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;<span class="name">id</span>&gt;</span>16386<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;<span class="name">type</span>&gt;</span>DIRECTORY<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;<span class="name">name</span>&gt;</span>user<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;<span class="name">mtime</span>&gt;</span>1512722284477<span class="tag">&lt;/<span class="name">mtime</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;<span class="name">permission</span>&gt;</span>atguigu:supergroup:rwxr-xr-x<span class="tag">&lt;/<span class="name">permission</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;<span class="name">nsquota</span>&gt;</span>-1<span class="tag">&lt;/<span class="name">nsquota</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;<span class="name">dsquota</span>&gt;</span>-1<span class="tag">&lt;/<span class="name">dsquota</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">inode</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">inode</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;<span class="name">id</span>&gt;</span>16387<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;<span class="name">type</span>&gt;</span>DIRECTORY<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;<span class="name">name</span>&gt;</span>atguigu<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;<span class="name">mtime</span>&gt;</span>1512790549080<span class="tag">&lt;/<span class="name">mtime</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;<span class="name">permission</span>&gt;</span>atguigu:supergroup:rwxr-xr-x<span class="tag">&lt;/<span class="name">permission</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;<span class="name">nsquota</span>&gt;</span>-1<span class="tag">&lt;/<span class="name">nsquota</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;<span class="name">dsquota</span>&gt;</span>-1<span class="tag">&lt;/<span class="name">dsquota</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">inode</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">inode</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;<span class="name">id</span>&gt;</span>16389<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;<span class="name">type</span>&gt;</span>FILE<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;<span class="name">name</span>&gt;</span>wc.input<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;<span class="name">replication</span>&gt;</span>3<span class="tag">&lt;/<span class="name">replication</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;<span class="name">mtime</span>&gt;</span>1512722322219<span class="tag">&lt;/<span class="name">mtime</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;<span class="name">atime</span>&gt;</span>1512722321610<span class="tag">&lt;/<span class="name">atime</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;<span class="name">perferredBlockSize</span>&gt;</span>134217728<span class="tag">&lt;/<span class="name">perferredBlockSize</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;<span class="name">permission</span>&gt;</span>atguigu:supergroup:rw-r--r--<span class="tag">&lt;/<span class="name">permission</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;<span class="name">blocks</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;<span class="name">block</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;<span class="name">id</span>&gt;</span>1073741825<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;<span class="name">genstamp</span>&gt;</span>1001<span class="tag">&lt;/<span class="name">genstamp</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;<span class="name">numBytes</span>&gt;</span>59<span class="tag">&lt;/<span class="name">numBytes</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;/<span class="name">block</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;/<span class="name">blocks</span>&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;/inode &gt;</span><br></pre></td></tr></table></figure><p>思考：可以看出，Fsimage中没有记录块所对应DataNode，为什么？</p><p>在集群启动后，要求DataNode上报数据块信息，并间隔一段时间后再次上报。</p><h3 id="oev查看Edits文件"><a href="#oev查看Edits文件" class="headerlink" title="oev查看Edits文件"></a>oev查看Edits文件</h3><p>（1）基本语法</p><p>​hdfs oev -p 文件类型 -i编辑日志 -o 转换后文件输出路径</p><p>（2）案例实操</p><p>​[atguigu@hadoop102 current]$ hdfs oev -p XML -i edits_0000000000000000012-0000000000000000013 -o &#x2F;opt&#x2F;module&#x2F;hadoop-2.7.2&#x2F;edits.xml</p><p>​[atguigu@hadoop102 current]$ cat &#x2F;opt&#x2F;module&#x2F;hadoop-2.7.2&#x2F;edits.xml</p><p>将显示的xml文件内容拷贝到Eclipse中创建的xml文件中，并格式化。显示结果如下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line"></span><br><span class="line">&lt;EDITS&gt;</span><br><span class="line"></span><br><span class="line">​&lt;EDITS_VERSION&gt;-63&lt;/EDITS_VERSION&gt;</span><br><span class="line"></span><br><span class="line">​&lt;RECORD&gt;</span><br><span class="line"></span><br><span class="line">​&lt;OPCODE&gt;OP_START_LOG_SEGMENT&lt;/OPCODE&gt;</span><br><span class="line"></span><br><span class="line">​&lt;DATA&gt;</span><br><span class="line"></span><br><span class="line">​&lt;TXID&gt;129&lt;/TXID&gt;</span><br><span class="line"></span><br><span class="line">​&lt;/DATA&gt;</span><br><span class="line"></span><br><span class="line">​&lt;/RECORD&gt;</span><br><span class="line"></span><br><span class="line">​&lt;RECORD&gt;</span><br><span class="line"></span><br><span class="line">​&lt;OPCODE&gt;OP_ADD&lt;/OPCODE&gt;</span><br><span class="line"></span><br><span class="line">​&lt;DATA&gt;</span><br><span class="line"></span><br><span class="line">​&lt;TXID&gt;130&lt;/TXID&gt;</span><br><span class="line"></span><br><span class="line">​&lt;LENGTH&gt;0&lt;/LENGTH&gt;</span><br><span class="line"></span><br><span class="line">​&lt;INODEID&gt;16407&lt;/INODEID&gt;</span><br><span class="line"></span><br><span class="line">​&lt;PATH&gt;/hello7.txt&lt;/PATH&gt;</span><br><span class="line"></span><br><span class="line">​&lt;REPLICATION&gt;2&lt;/REPLICATION&gt;</span><br><span class="line"></span><br><span class="line">​&lt;MTIME&gt;1512943607866&lt;/MTIME&gt;</span><br><span class="line"></span><br><span class="line">​&lt;ATIME&gt;1512943607866&lt;/ATIME&gt;</span><br><span class="line"></span><br><span class="line">​&lt;BLOCKSIZE&gt;134217728&lt;/BLOCKSIZE&gt;</span><br><span class="line"></span><br><span class="line">​&lt;CLIENT_NAME&gt;DFSClient_NONMAPREDUCE_-1544295051_1&lt;/CLIENT_NAME&gt;</span><br><span class="line"></span><br><span class="line">​&lt;CLIENT_MACHINE&gt;192.168.1.5&lt;/CLIENT_MACHINE&gt;</span><br><span class="line"></span><br><span class="line">​&lt;OVERWRITE&gt;true&lt;/OVERWRITE&gt;</span><br><span class="line"></span><br><span class="line">​&lt;PERMISSION_STATUS&gt;</span><br><span class="line"></span><br><span class="line">​&lt;USERNAME&gt;atguigu&lt;/USERNAME&gt;</span><br><span class="line"></span><br><span class="line">​&lt;GROUPNAME&gt;supergroup&lt;/GROUPNAME&gt;</span><br><span class="line"></span><br><span class="line">​&lt;MODE&gt;420&lt;/MODE&gt;</span><br><span class="line"></span><br><span class="line">​&lt;/PERMISSION_STATUS&gt;</span><br><span class="line"></span><br><span class="line">​&lt;RPC_CLIENTID&gt;908eafd4-9aec-4288-96f1-e8011d181561&lt;/RPC_CLIENTID&gt;</span><br><span class="line"></span><br><span class="line">​&lt;RPC_CALLID&gt;0&lt;/RPC_CALLID&gt;</span><br><span class="line"></span><br><span class="line">​&lt;/DATA&gt;</span><br><span class="line"></span><br><span class="line">​&lt;/RECORD&gt;</span><br><span class="line"></span><br><span class="line">​&lt;RECORD&gt;</span><br><span class="line"></span><br><span class="line">​&lt;OPCODE&gt;OP_ALLOCATE_BLOCK_ID&lt;/OPCODE&gt;</span><br><span class="line"></span><br><span class="line">​&lt;DATA&gt;</span><br><span class="line"></span><br><span class="line">​&lt;TXID&gt;131&lt;/TXID&gt;</span><br><span class="line"></span><br><span class="line">​&lt;BLOCK_ID&gt;1073741839&lt;/BLOCK_ID&gt;</span><br><span class="line"></span><br><span class="line">​&lt;/DATA&gt;</span><br><span class="line"></span><br><span class="line">​&lt;/RECORD&gt;</span><br><span class="line"></span><br><span class="line">​&lt;RECORD&gt;</span><br><span class="line"></span><br><span class="line">​&lt;OPCODE&gt;OP_SET_GENSTAMP_V2&lt;/OPCODE&gt;</span><br><span class="line"></span><br><span class="line">​&lt;DATA&gt;</span><br><span class="line"></span><br><span class="line">​&lt;TXID&gt;132&lt;/TXID&gt;</span><br><span class="line"></span><br><span class="line">​&lt;GENSTAMPV2&gt;1016&lt;/GENSTAMPV2&gt;</span><br><span class="line"></span><br><span class="line">​&lt;/DATA&gt;</span><br><span class="line"></span><br><span class="line">​&lt;/RECORD&gt;</span><br><span class="line"></span><br><span class="line">​&lt;RECORD&gt;</span><br><span class="line"></span><br><span class="line">​&lt;OPCODE&gt;OP_ADD_BLOCK&lt;/OPCODE&gt;</span><br><span class="line"></span><br><span class="line">​&lt;DATA&gt;</span><br><span class="line"></span><br><span class="line">​&lt;TXID&gt;133&lt;/TXID&gt;</span><br><span class="line"></span><br><span class="line">​&lt;PATH&gt;/hello7.txt&lt;/PATH&gt;</span><br><span class="line"></span><br><span class="line">​&lt;BLOCK&gt;</span><br><span class="line"></span><br><span class="line">​&lt;BLOCK_ID&gt;1073741839&lt;/BLOCK_ID&gt;</span><br><span class="line"></span><br><span class="line">​&lt;NUM_BYTES&gt;0&lt;/NUM_BYTES&gt;</span><br><span class="line"></span><br><span class="line">​&lt;GENSTAMP&gt;1016&lt;/GENSTAMP&gt;</span><br><span class="line"></span><br><span class="line">​&lt;/BLOCK&gt;</span><br><span class="line"></span><br><span class="line">​&lt;RPC_CLIENTID&gt;&lt;/RPC_CLIENTID&gt;</span><br><span class="line"></span><br><span class="line">​&lt;RPC_CALLID&gt;-2&lt;/RPC_CALLID&gt;</span><br><span class="line"></span><br><span class="line">​&lt;/DATA&gt;</span><br><span class="line"></span><br><span class="line">​&lt;/RECORD&gt;</span><br><span class="line"></span><br><span class="line">​&lt;RECORD&gt;</span><br><span class="line"></span><br><span class="line">​&lt;OPCODE&gt;OP_CLOSE&lt;/OPCODE&gt;</span><br><span class="line"></span><br><span class="line">​&lt;DATA&gt;</span><br><span class="line"></span><br><span class="line">​&lt;TXID&gt;134&lt;/TXID&gt;</span><br><span class="line"></span><br><span class="line">​&lt;LENGTH&gt;0&lt;/LENGTH&gt;</span><br><span class="line"></span><br><span class="line">​&lt;INODEID&gt;0&lt;/INODEID&gt;</span><br><span class="line"></span><br><span class="line">​&lt;PATH&gt;/hello7.txt&lt;/PATH&gt;</span><br><span class="line"></span><br><span class="line">​&lt;REPLICATION&gt;2&lt;/REPLICATION&gt;</span><br><span class="line"></span><br><span class="line">​&lt;MTIME&gt;1512943608761&lt;/MTIME&gt;</span><br><span class="line"></span><br><span class="line">​&lt;ATIME&gt;1512943607866&lt;/ATIME&gt;</span><br><span class="line"></span><br><span class="line">​&lt;BLOCKSIZE&gt;134217728&lt;/BLOCKSIZE&gt;</span><br><span class="line"></span><br><span class="line">​&lt;CLIENT_NAME&gt;&lt;/CLIENT_NAME&gt;</span><br><span class="line"></span><br><span class="line">​&lt;CLIENT_MACHINE&gt;&lt;/CLIENT_MACHINE&gt;</span><br><span class="line"></span><br><span class="line">​&lt;OVERWRITE&gt;false&lt;/OVERWRITE&gt;</span><br><span class="line"></span><br><span class="line">​&lt;BLOCK&gt;</span><br><span class="line"></span><br><span class="line">​&lt;BLOCK_ID&gt;1073741839&lt;/BLOCK_ID&gt;</span><br><span class="line"></span><br><span class="line">​&lt;NUM_BYTES&gt;25&lt;/NUM_BYTES&gt;</span><br><span class="line"></span><br><span class="line">​&lt;GENSTAMP&gt;1016&lt;/GENSTAMP&gt;</span><br><span class="line"></span><br><span class="line">​&lt;/BLOCK&gt;</span><br><span class="line"></span><br><span class="line">​&lt;PERMISSION_STATUS&gt;</span><br><span class="line"></span><br><span class="line">​&lt;USERNAME&gt;atguigu&lt;/USERNAME&gt;</span><br><span class="line"></span><br><span class="line">​&lt;GROUPNAME&gt;supergroup&lt;/GROUPNAME&gt;</span><br><span class="line"></span><br><span class="line">​&lt;MODE&gt;420&lt;/MODE&gt;</span><br><span class="line"></span><br><span class="line">​&lt;/PERMISSION_STATUS&gt;</span><br><span class="line"></span><br><span class="line">​&lt;/DATA&gt;</span><br><span class="line"></span><br><span class="line">​&lt;/RECORD&gt;</span><br><span class="line"></span><br><span class="line">&lt;/EDITS &gt;</span><br></pre></td></tr></table></figure><p><strong>思考：NameNode如何确定下次开机启动的时候合并哪些Edits？</strong></p><p>​根据seen_txid来判断启动哪儿个EDITS</p><h2 id="CheckPoint时间点设置"><a href="#CheckPoint时间点设置" class="headerlink" title="CheckPoint时间点设置"></a>CheckPoint时间点设置</h2><p>（1）通常情况下，SecondaryNameNode每隔一小时执行一次。</p><p>​[hdfs-default.xml]</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.checkpoint.period<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">value</span>&gt;</span>3600<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><p>（2）一分钟检查一次操作次数，3当操作次数达到1百万时，SecondaryNameNode执行一次。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.checkpoint.txns<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">value</span>&gt;</span>1000000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>操作动作次数<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.checkpoint.check.period<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">value</span>&gt;</span>60<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span> 1分钟检查一次操作次数<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;/property &gt;</span><br></pre></td></tr></table></figure><h1 id="NameNode故障处理-重点"><a href="#NameNode故障处理-重点" class="headerlink" title="NameNode故障处理(重点)"></a>NameNode故障处理(重点)</h1><p>NameNode故障后，可以采用如下两种方法恢复数据。</p><h3 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a>方法一：</h3><p><strong>将SecondaryNameNode中数据拷贝到NameNode存储数据中</strong></p><ol><li><p>kill -9 NameNode进程</p></li><li><p>删除NameNode存储的数据（&#x2F;opt&#x2F;module&#x2F;hadoop-2.7.2&#x2F;data&#x2F;tmp&#x2F;dfs&#x2F;name）</p></li></ol><p>[atguigu@hadoop102 hadoop-2.7.2]$ rm -rf &#x2F;opt&#x2F;module&#x2F;hadoop-2.7.2&#x2F;data&#x2F;tmp&#x2F;dfs&#x2F;name&#x2F;*</p><ol start="3"><li>拷贝SecondaryNameNode中数据到原NameNode存储数据目录</li></ol><p>[atguigu@hadoop102 dfs]$ scp -r atguigu@hadoop104:&#x2F;opt&#x2F;module&#x2F;hadoop-2.7.2&#x2F;data&#x2F;tmp&#x2F;dfs&#x2F;namesecondary&#x2F;* .&#x2F;name&#x2F;</p><ol start="4"><li>重新启动NameNode</li></ol><p>[atguigu@hadoop102 hadoop-2.7.2]$ sbin&#x2F;hadoop-daemon.sh start namenode</p><h3 id="方法二："><a href="#方法二：" class="headerlink" title="方法二："></a>方法二：</h3><p><strong>使用-importCheckpoint选项启动NameNode守护进程，从而将SecondaryNameNode中的数据拷贝到NameNode中</strong></p><ol><li>修改hdfs-site.xml中的</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.checkpoint.period<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">value</span>&gt;</span>120<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.name.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">value</span>&gt;</span>/opt/module/hadoop-2.7.2/data/tmp/dfs/name<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li><p>kill -9 NameNode进程</p></li><li><p>删除NameNode存储的数据（&#x2F;opt&#x2F;module&#x2F;hadoop-2.7.2&#x2F;data&#x2F;tmp&#x2F;dfs&#x2F;name）</p></li></ol><p>[atguigu@hadoop102 hadoop-2.7.2]$ rm -rf &#x2F;opt&#x2F;module&#x2F;hadoop-2.7.2&#x2F;data&#x2F;tmp&#x2F;dfs&#x2F;name&#x2F;*</p><ol start="4"><li>如果SecondaryNameNode不和NameNode在一个主机节点上，需要将SecondaryNameNode存储数据的目录拷贝到NameNode存储数据的平级目录，并删除in_use.lock文件</li></ol><p>[atguigu@hadoop102 dfs]$ scp -r atguigu@hadoop104:&#x2F;opt&#x2F;module&#x2F;hadoop-2.7.2&#x2F;data&#x2F;tmp&#x2F;dfs&#x2F;namesecondary .&#x2F;</p><p>[atguigu@hadoop102 namesecondary]$ rm -rf in_use.lock</p><p>[atguigu@hadoop102 dfs]$ pwd</p><p>&#x2F;opt&#x2F;module&#x2F;hadoop-2.7.2&#x2F;data&#x2F;tmp&#x2F;dfs</p><p>[atguigu@hadoop102 dfs]$ ls</p><p>data  name  namesecondary</p><ol start="5"><li>导入检查点数据（等待一会ctrl+c结束掉）</li></ol><p>[atguigu@hadoop102 hadoop-2.7.2]$ bin&#x2F;hdfs namenode -importCheckpoint</p><ol start="6"><li>启动NameNode</li></ol><p>[atguigu@hadoop102 hadoop-2.7.2]$ sbin&#x2F;hadoop-daemon.sh start namenode</p><h1 id="集群安全模式"><a href="#集群安全模式" class="headerlink" title="集群安全模式"></a>集群安全模式</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p><img src="D:\大数据\media\集群安全.PNG" alt="集群安全"></p><h2 id="语法和案例"><a href="#语法和案例" class="headerlink" title="语法和案例"></a>语法和案例</h2><h3 id="基本语法：-1"><a href="#基本语法：-1" class="headerlink" title="基本语法："></a>基本语法：</h3><p>集群处于安全模式，不能执行重要操作（写操作）。集群启动完成后，自动退出安全模式。</p><p>（1）bin&#x2F;hdfs dfsadmin -safemode get（功能描述：查看安全模式状态）</p><p>（2）bin&#x2F;hdfs dfsadmin -safemode enter  （功能描述：进入安全模式状态）</p><p>（3）bin&#x2F;hdfs dfsadmin -safemode leave（功能描述：离开安全模式状态）</p><p>（4）bin&#x2F;hdfs dfsadmin -safemode wait（功能描述：等待安全模式状态）</p><p><strong style="color:red;font-size:18px">注意：等待安全模式，是正处在安全模式，安全模式一旦推出就执行xx程序的状态</strong></p><h3 id="案例："><a href="#案例：" class="headerlink" title="案例："></a>案例：</h3><p>​模拟等待安全模式</p><p>（1）查看当前模式</p><p>[atguigu@hadoop102 hadoop-2.7.2]$ hdfs dfsadmin -safemode get</p><p>Safe mode is OFF</p><p>（2）先进入安全模式</p><p>[atguigu@hadoop102 hadoop-2.7.2]$ bin&#x2F;hdfs dfsadmin -safemode enter</p><p>​（3）创建并执行下面的脚本</p><p>在&#x2F;opt&#x2F;module&#x2F;hadoop-2.7.2路径上，编辑一个脚本safemode.sh</p><p>[atguigu@hadoop102 hadoop-2.7.2]$ touch safemode.sh</p><p>[atguigu@hadoop102 hadoop-2.7.2]$ vim safemode.sh</p><p>#!&#x2F;bin&#x2F;bash</p><p>hdfs dfsadmin -safemode wait</p><p>hdfs dfs -put &#x2F;opt&#x2F;module&#x2F;hadoop-2.7.2&#x2F;README.txt  &#x2F;</p><p>[atguigu@hadoop102 hadoop-2.7.2]$ chmod 777 safemode.sh</p><p>[atguigu@hadoop102 hadoop-2.7.2]$ .&#x2F;safemode.sh </p><p>​（4）再打开一个窗口，执行</p><p>[atguigu@hadoop102 hadoop-2.7.2]$ bin&#x2F;hdfs dfsadmin -safemode leave</p><p>（5）观察</p><p>（a）再观察上一个窗口</p><p>Safe mode is OFF</p><p>（b）HDFS集群上已经有上传的数据了</p><h1 id="NameNode多目录配置"><a href="#NameNode多目录配置" class="headerlink" title="NameNode多目录配置"></a>NameNode多目录配置</h1><h2 id="意义："><a href="#意义：" class="headerlink" title="意义："></a>意义：</h2><p>NameNode的本地目录可以配置成多个，且每个目录存放内容相同，增加了可靠性</p><p>其实，就是将NameNode多复制几份</p><h2 id="具体配置"><a href="#具体配置" class="headerlink" title="具体配置"></a>具体配置</h2><p>（1）在hdfs-site.xml文件中增加如下内容</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.name.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>file:///$&#123;hadoop.tmp.dir&#125;/dfs/name1,file:///$&#123;hadoop.tmp.dir&#125;/dfs/name2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><p>（2）停止集群，删除data和logs中所有数据。</p><p>[atguigu@hadoop102 hadoop-2.7.2]$ rm -rf data&#x2F; logs&#x2F;</p><p>[atguigu@hadoop103 hadoop-2.7.2]$ rm -rf data&#x2F; logs&#x2F;</p><p>[atguigu@hadoop104 hadoop-2.7.2]$ rm -rf data&#x2F; logs&#x2F;</p><p>（3）格式化集群并启动。</p><p>[atguigu@hadoop102 hadoop-2.7.2]$ bin&#x2F;hdfs namenode –format</p><p>[atguigu@hadoop102 hadoop-2.7.2]$ sbin&#x2F;start-dfs.sh</p><p>（4）查看结果</p><p>[atguigu@hadoop102 dfs]$ ll</p><p>总用量 12</p><p>drwx——. 3 atguigu atguigu 4096 12月 11 08:03 data</p><p>drwxrwxr-x. 3 atguigu atguigu 4096 12月 11 08:03 name1</p><p>drwxrwxr-x. 3 atguigu atguigu 4096 12月 11 08:03 name2</p><h1 id="DataNode（面试开发重点"><a href="#DataNode（面试开发重点" class="headerlink" title="DataNode（面试开发重点)"></a>DataNode（面试开发重点)</h1><h2 id="DataNode工作机制"><a href="#DataNode工作机制" class="headerlink" title="DataNode工作机制"></a>DataNode工作机制<img src="D:\大数据\media\datanode工作原理.PNG" alt="datanode工作原理"></h2><ol><li>一个数据块在DataNode上以文件形式存储在磁盘上，包括两个文件，一个是数据本身，一个是元数据包括数据块的长度，块数据的校验和，以及时间戳</li><li>DataNode启动后向NameNode注册，通过后，周期性(1小时)的想NameNode上报所有块信息</li><li>心跳是每3秒一次，心跳的返回结果带有NameNode给该DataNode的命令，如复制块数据到另一台机器上，或删除某个数据块。如果超过10分钟没有收到某个DataNode的心跳，认为该节点不可以。<strong>（应该是10分钟加3秒）</strong></li><li>集群运行中可以安全加入和退出一些机器。</li></ol><h2 id="数据完整性"><a href="#数据完整性" class="headerlink" title="数据完整性"></a>数据完整性</h2><p>DataNode节点保证数据完整性的方法。</p><p>1）当DataNode读取Block的时候，它会计算CheckSum。</p><p>2）如果计算后的CheckSum，与Block创建时值不一样，说明Block已经损坏。</p><p>3）Client读取其他DataNode上的Block。</p><p>4）DataNode在其文件创建后周期验证CheckSum，如图3-16所示。</p><p><img src="D:\大数据\media\数据完整下.PNG" alt="数据完整下"></p><h2 id="掉线时限参数设置"><a href="#掉线时限参数设置" class="headerlink" title="掉线时限参数设置"></a>掉线时限参数设置</h2><p><img src="D:\大数据\media\掉参数.PNG" alt="数据完整下"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">注意：hdfs-site.xml 配置文件中：</span><br><span class="line">heartbeat.recheck.interval的单位为毫秒</span><br><span class="line">dfs.heartbeat.interval的单位为秒</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.heartbeat.recheck-interval<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>300000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.heartbeat.interval<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>3<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="服役新数据节点"><a href="#服役新数据节点" class="headerlink" title="服役新数据节点"></a>服役新数据节点</h2><h3 id="需求："><a href="#需求：" class="headerlink" title="需求："></a>需求：</h3><p>​随着公司业务的增长，数据量越来越大，原有的数据节点的容量已经不能满足存储数据的需求，需要在原有集群基础上动态添加新的数据节点</p><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><ol><li><p>在准备一台主机</p></li><li><p>修改IP和主机名称</p></li><li><p><strong>删除原来HDFS文件系统存留的文件</strong>(<strong>&#x2F;opt&#x2F;module&#x2F;hadoop-2.7.2&#x2F;data和log</strong>)</p></li><li><p>source以下配置文件</p><p>[atguigu@hadoop105 hadoop-2.7.2]$ source &#x2F;etc&#x2F;profile</p></li></ol><h3 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h3><p>   (1)直接启动DataNode，即可关联到集群</p><p>[atguigu@hadoop105 hadoop-2.7.2]$ sbin&#x2F;hadoop-daemon.sh start datanode</p><p>[atguigu@hadoop105 hadoop-2.7.2]$ sbin&#x2F;yarn-daemon.sh start nodemanager </p><p>（2）在hadoop105上上传文件</p><p>[atguigu@hadoop105 hadoop-2.7.2]$ hadoop fs -put &#x2F;opt&#x2F;module&#x2F;hadoop-2.7.2&#x2F;LICENSE.txt &#x2F;</p><p>（3）如果数据不均衡，可以用命令实现集群的再平衡</p><p>[atguigu@hadoop102 sbin]$ .&#x2F;start-balancer.sh</p><p>starting balancer, logging to &#x2F;opt&#x2F;module&#x2F;hadoop-2.7.2&#x2F;logs&#x2F;hadoop-atguigu-balancer-hadoop102.out</p><p>Time Stamp        Iteration#  Bytes Already Moved  Bytes Left To Move  Bytes Being Moved</p><h2 id="退役旧数据节点"><a href="#退役旧数据节点" class="headerlink" title="退役旧数据节点"></a>退役旧数据节点</h2><h3 id="添加白名单"><a href="#添加白名单" class="headerlink" title="添加白名单"></a>添加白名单</h3><p>添加到白名单的主机节点，都允许访问NameNode，不在白名单的主机节点，都会被退出。</p><p>配置白名单的具体步骤如下：</p><p>（1）在NameNode的&#x2F;opt&#x2F;module&#x2F;hadoop-2.7.2&#x2F;etc&#x2F;hadoop目录下创建dfs.hosts文件</p><p>[atguigu@hadoop102 hadoop]$ pwd</p><p>&#x2F;opt&#x2F;module&#x2F;hadoop-2.7.2&#x2F;etc&#x2F;hadoop</p><p>[atguigu@hadoop102 hadoop]$ touch dfs.hosts</p><p>[atguigu@hadoop102 hadoop]$ vi dfs.hosts</p><p>添加如下主机名称（不添加hadoop105）</p><p>hadoop102</p><p>hadoop103</p><p>hadoop104</p><p>(2）在NameNode的hdfs-site.xml配置文件中增加dfs.hosts属性</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.hosts<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>/opt/module/hadoop-2.7.2/etc/hadoop/dfs.hosts<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><p>（3）配置文件分发</p><p>[atguigu@hadoop102 hadoop]$ xsync hdfs-site.xml</p><p>​（4）刷新NameNode</p><p>[atguigu@hadoop102 hadoop-2.7.2]$ hdfs dfsadmin -refreshNodes</p><p>Refresh nodes successful</p><p>​（5）更新ResourceManager节点</p><p>[atguigu@hadoop102 hadoop-2.7.2]$ yarn rmadmin -refreshNodes</p><p>17&#x2F;06&#x2F;24 14:17:11 INFO client.RMProxy: Connecting to ResourceManager at hadoop103&#x2F;192.168.1.103:8033</p><p>​（6）在web浏览器上查看</p><p><strong>如果数据不均衡，可以用命令实现集群的再平衡</strong></p><p><strong>[atguigu@hadoop102 sbin]$ .&#x2F;start-balancer.sh</strong></p><p><strong>starting balancer, logging to &#x2F;opt&#x2F;module&#x2F;hadoop-2.7.2&#x2F;logs&#x2F;hadoop-atguigu-balancer-hadoop102.out</strong></p><p><strong>Time Stamp        Iteration#  Bytes Already Moved  Bytes Left To Move  Bytes Being Moved</strong></p><h3 id="黑名单退役"><a href="#黑名单退役" class="headerlink" title="黑名单退役"></a>黑名单退役</h3><p><strong>在黑名单上面的主机都会被强制退出</strong></p><p>1.在NameNode的&#x2F;opt&#x2F;module&#x2F;hadoop-2.7.2&#x2F;etc&#x2F;hadoop目录下创建dfs.hosts.exclude文件</p><p>[atguigu@hadoop102 hadoop]$ pwd</p><p>&#x2F;opt&#x2F;module&#x2F;hadoop-2.7.2&#x2F;etc&#x2F;hadoop</p><p>[atguigu@hadoop102 hadoop]$ touch dfs.hosts.exclude</p><p>[atguigu@hadoop102 hadoop]$ vi dfs.hosts.exclude</p><p>添加如下主机名称（要退役的节点）</p><p>hadoop105</p><p>2．在NameNode的hdfs-site.xml配置文件中增加dfs.hosts.exclude属性</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.hosts.exclude<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">value</span>&gt;</span>/opt/module/hadoop-2.7.2/etc/hadoop/dfs.hosts.exclude<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3．刷新NameNode、刷新ResourceManager</p><p>[atguigu@hadoop102 hadoop-2.7.2]$ hdfs dfsadmin -refreshNodes</p><p>Refresh nodes successful</p><p>[atguigu@hadoop102 hadoop-2.7.2]$ yarn rmadmin -refreshNodes</p><p>17&#x2F;06&#x2F;24 14:55:56 INFO client.RMProxy: Connecting to ResourceManager at hadoop103&#x2F;192.168.1.103:8033</p><ol start="4"><li><pre><code>    检查Web浏览器，退役节点的状态为decommission in progress（退役中），说明数据节点正在复制块到其他节点，如图3-17所示</code></pre></li></ol><p><img src="file:///C:\Users\84350\AppData\Local\Temp\ksohtml6992\wps2.jpg" alt="img"> </p><p>图3-17  退役中</p><p>\5. 等待退役节点状态为decommissioned（所有块已经复制完成），停止该节点及节点资源管理器。注意：如果副本数是3，服役的节点小于等于3，是不能退役成功的，需要修改副本数后才能退役，如图3-18所示</p><p><img src="file:///C:\Users\84350\AppData\Local\Temp\ksohtml6992\wps3.jpg" alt="img"> </p><p>图3-18 已退役</p><p>[atguigu@hadoop105 hadoop-2.7.2]$ sbin&#x2F;hadoop-daemon.sh stop datanode</p><p>stopping datanode</p><p>[atguigu@hadoop105 hadoop-2.7.2]$ sbin&#x2F;yarn-daemon.sh stop nodemanager</p><p>stopping nodemanager</p><ol start="6"><li><pre><code>如果数据不均衡，可以用命令实现集群的再平衡</code></pre></li></ol><p>[atguigu@hadoop102 hadoop-2.7.2]$ sbin&#x2F;start-balancer.sh </p><p>starting balancer, logging to &#x2F;opt&#x2F;module&#x2F;hadoop-2.7.2&#x2F;logs&#x2F;hadoop-atguigu-balancer-hadoop102.out</p><p>Time Stamp        Iteration#  Bytes Already Moved  Bytes Left To Move  Bytes Being Moved</p><p>​<strong>注意：不允许白名单和黑名单中同时出现同一个主机名称。</strong></p><h2 id="DataNode多目录配置"><a href="#DataNode多目录配置" class="headerlink" title="DataNode多目录配置"></a>DataNode多目录配置</h2><ol><li><pre><code>DataNode也可以配置成多个目录，每个目录存储的数据不一样。即：数据不是副本</code></pre></li></ol><p>2．具体配置如下</p><p>​hdfs-site.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.datanode.data.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>file:///$&#123;hadoop.tmp.dir&#125;/dfs/data1,file:///$&#123;hadoop.tmp.dir&#125;/dfs/data2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;HDFS篇&quot;&gt;&lt;a href=&quot;#HDFS篇&quot; class=&quot;headerlink&quot; title=&quot;HDFS篇&quot;&gt;&lt;/a&gt;HDFS篇&lt;/h1&gt;&lt;h1 id=&quot;HDFS概述&quot;&gt;&lt;a href=&quot;#HDFS概述&quot; class=&quot;headerlink&quot; title=&quot;H</summary>
      
    
    
    
    <category term="大数据" scheme="http://example.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="hadoop" scheme="http://example.com/tags/hadoop/"/>
    
  </entry>
  
  <entry>
    <title>hadoop</title>
    <link href="http://example.com/2022/05/29/hadoop/"/>
    <id>http://example.com/2022/05/29/hadoop/</id>
    <published>2022-05-29T14:33:30.000Z</published>
    <updated>2022-05-29T14:34:38.696Z</updated>
    
    <content type="html"><![CDATA[<h1 id="大数据入门"><a href="#大数据入门" class="headerlink" title="大数据入门"></a>大数据入门</h1><h2 id="hadoop1-x和hadoop2-x的区别"><a href="#hadoop1-x和hadoop2-x的区别" class="headerlink" title="hadoop1.x和hadoop2.x的区别"></a>hadoop1.x和hadoop2.x的区别</h2><h3 id="hadoop1-x"><a href="#hadoop1-x" class="headerlink" title="hadoop1.x"></a>hadoop1.x</h3><ul><li>MapReduce: 计算和资源调度</li><li>HDFS：数据存储</li><li>Common：辅助工具</li></ul><h3 id="hadoop2-x"><a href="#hadoop2-x" class="headerlink" title="hadoop2.x"></a>hadoop2.x</h3><ul><li>MapRuduce:计算</li><li>Yarn:资源调度</li><li>HDFS：数据存储</li><li>Common:辅助工具</li></ul><h2 id="HDFS架构："><a href="#HDFS架构：" class="headerlink" title="HDFS架构："></a>HDFS架构：</h2><ul><li>NameNode: 存储文件的元数据，比如文件名，文件目录结构，文件属性(生成时间，副本数，文件权限)，以及每个文件的块列表和块所在的DataNode</li><li>DataNode: 在本地文件系统存储文件块数据，以及块数据的校验和</li><li>Secondary NameNode:来监控HDFS状态和辅助后台数据，每隔一段时间获取HDFS元数据的快照</li></ul><h2 id="YARN架构："><a href="#YARN架构：" class="headerlink" title="YARN架构："></a>YARN架构：</h2><ul><li>ResuorceManager作用：<ul><li>处理客户机请求</li><li>监控NodeManager</li><li>启动或监控ApplicationMaster</li><li>资源的分配和调度</li></ul></li><li>NodeManager<ul><li>管理单个节点的资源</li><li>处理来自ResourceManager的命令</li><li>处理来自ApplicationMaster的命令</li></ul></li><li>Applicationmastes<ul><li>负责数据的切分</li><li>为应用程序申请资源并分配给内部的任务</li><li>任务的监控和容错</li></ul></li><li>Container<ul><li>是Yarn资源的抽象，如内存，cpu，磁盘网络等</li></ul></li></ul><h2 id="MapReduce架构"><a href="#MapReduce架构" class="headerlink" title="MapReduce架构"></a>MapReduce架构</h2><ul><li>Map阶段并行处理输入数据</li><li>Reduce阶段对Map结果进行汇总</li></ul><h2 id="完全分布式运行模式"><a href="#完全分布式运行模式" class="headerlink" title="完全分布式运行模式"></a>完全分布式运行模式</h2><ul><li>分析<ul><li>准备客户机(静态IP、关闭防火墙、主机名称)</li><li>安装JDK</li><li>配置环境变量</li><li>安装Hadoop</li><li>配置环境变量</li><li>配置集群</li><li>单点启动</li><li>配置ssh</li><li>群起并测试集群</li></ul></li></ul><h3 id="编写集群分发脚本"><a href="#编写集群分发脚本" class="headerlink" title="编写集群分发脚本"></a>编写集群分发脚本</h3><h4 id="1-scp（secure-copy）安全拷贝"><a href="#1-scp（secure-copy）安全拷贝" class="headerlink" title="1.scp（secure copy）安全拷贝"></a>1.scp（secure copy）安全拷贝</h4><p>​（1）scp定义：</p><p>​scp可以实现服务器与服务器之间的数据拷贝。（from server1 to server2）</p><p>​（2）基本语法</p><p>​scp  -r      $pdir&#x2F;$fname        $user@hadoop$host:$pdir&#x2F;$fname</p><p>​命令  递归    要拷贝的文件路径&#x2F;名称   目的用户@主机:目的路径&#x2F;名称</p><p>（3）案例实操</p><p>​（a）在hadoop101上，将hadoop101中&#x2F;opt&#x2F;module目录下的软件拷贝到hadoop102上。</p><p>​[atguigu@hadoop101 &#x2F;]$ scp -r &#x2F;opt&#x2F;module  root@hadoop102:&#x2F;opt&#x2F;module</p><p>​（b）在hadoop103上，将hadoop101服务器上的&#x2F;opt&#x2F;module目录下的软件拷贝到hadoop103上。</p><p>[atguigu@hadoop103 opt]$sudo scp -r atguigu@hadoop101:&#x2F;opt&#x2F;module root@hadoop103:&#x2F;opt&#x2F;module</p><p>（c）在hadoop103上操作将hadoop101中&#x2F;opt&#x2F;module目录下的软件拷贝到hadoop104上。</p><p>[atguigu@hadoop103 opt]$ scp -r atguigu@hadoop101:&#x2F;opt&#x2F;module root@hadoop104:&#x2F;opt&#x2F;module</p><p>注意：拷贝过来的&#x2F;opt&#x2F;module目录，别忘了在hadoop102、hadoop103、hadoop104上修改所有文件的，所有者和所有者组。sudo chown atguigu:atguigu -R &#x2F;opt&#x2F;module</p><p>（d）将hadoop101中&#x2F;etc&#x2F;profile文件拷贝到hadoop102的&#x2F;etc&#x2F;profile上。</p><p>[atguigu@hadoop101 ~]$ sudo scp &#x2F;etc&#x2F;profile root@hadoop102:&#x2F;etc&#x2F;profile</p><p>（e）将hadoop101中&#x2F;etc&#x2F;profile文件拷贝到hadoop103的&#x2F;etc&#x2F;profile上。</p><p>[atguigu@hadoop101 ~]$ sudo scp &#x2F;etc&#x2F;profile root@hadoop103:&#x2F;etc&#x2F;profile</p><p>（f）将hadoop101中&#x2F;etc&#x2F;profile文件拷贝到hadoop104的&#x2F;etc&#x2F;profile上。</p><p>[atguigu@hadoop101 ~]$ sudo scp &#x2F;etc&#x2F;profile root@hadoop104:&#x2F;etc&#x2F;profile</p><p>注意：拷贝过来的配置文件别忘了source一下&#x2F;etc&#x2F;profile，。</p><h4 id="2-rsync-远程同步工具"><a href="#2-rsync-远程同步工具" class="headerlink" title="2. rsync 远程同步工具"></a>2. rsync 远程同步工具</h4><p>rsync主要用于备份和镜像。具有速度快、避免复制相同内容和支持符号链接的优点。</p><p>rsync和scp区别：用rsync做文件的复制要比scp的速度快，rsync只对差异文件做更新。scp是把所有文件都复制过去。</p><p>​（1）基本语法</p><p>rsync   -rvl    $pdir&#x2F;$fname        $user@hadoop$host:$pdir&#x2F;$fname</p><p>命令  选项参数  要拷贝的文件路径&#x2F;名称   目的用户@主机:目的路径&#x2F;名称</p><p>​ 选项参数说明</p><p>表2-2</p><table><thead><tr><th>选项</th><th>功能</th></tr></thead><tbody><tr><td>-r</td><td>递归</td></tr><tr><td>-v</td><td>显示复制过程</td></tr><tr><td>-l</td><td>拷贝符号连接</td></tr></tbody></table><p>（2）案例实操</p><p>​（a）把hadoop101机器上的&#x2F;opt&#x2F;software目录同步到hadoop102服务器的root用户下的&#x2F;opt&#x2F;目录</p><p>[atguigu@hadoop101 opt]$ rsync -rvl &#x2F;opt&#x2F;software&#x2F; root@hadoop102:&#x2F;opt&#x2F;software</p><h4 id="3-xsync集群分发脚本"><a href="#3-xsync集群分发脚本" class="headerlink" title="3.xsync集群分发脚本"></a>3.xsync集群分发脚本</h4><p>（1）需求：循环复制文件到所有节点的相同目录下</p><p>​（2）需求分析：</p><p>（a）rsync命令原始拷贝：</p><p>rsync  -rvl   &#x2F;opt&#x2F;module   root@hadoop103:&#x2F;opt&#x2F;</p><p>​（b）期望脚本：</p><p>xsync要同步的文件名称</p><p>​（c）说明：在&#x2F;home&#x2F;atguigu&#x2F;bin这个目录下存放的脚本，atguigu用户可以在系统任何地方直接执行。</p><p>（3）脚本实现</p><p>（a）在&#x2F;home&#x2F;atguigu目录下创建bin目录，并在bin目录下xsync创建文件，文件内容如下：</p><p>[atguigu@hadoop102 ~]$ mkdir bin</p><p>[atguigu@hadoop102 ~]$ cd bin&#x2F;</p><p>[atguigu@hadoop102 bin]$ touch xsync</p><p>[atguigu@hadoop102 bin]$ vi xsync</p><p>在该文件中编写如下代码</p><p>#!&#x2F;bin&#x2F;bash</p><p>#1 获取输入参数个数，如果没有参数，直接退出</p><p>pcount&#x3D;$#</p><p>if((pcount&#x3D;&#x3D;0)); then</p><p>echo no args;</p><p>exit;</p><p>fi</p><p>#2 获取文件名称</p><p>p1&#x3D;$1</p><p>fname&#x3D;<code>basename $p1</code></p><p>echo fname&#x3D;$fname</p><p>#3 获取上级目录到绝对路径</p><p>pdir&#x3D;<code>cd -P $(dirname $p1); pwd</code></p><p>echo pdir&#x3D;$pdir</p><p>#4 获取当前用户名称</p><p>user&#x3D;<code>whoami</code></p><p>#5 循环</p><p>for((host&#x3D;103; host&lt;105; host++)); do</p><p>​    echo ——————- hadoop$host ————–</p><p>​    rsync -rvl $pdir&#x2F;$fname $user@hadoop$host:$pdir</p><p>done</p><p>（b）修改脚本 xsync 具有执行权限</p><p>[atguigu@hadoop102 bin]$ chmod 777 xsync</p><p>（c）调用脚本形式：xsync 文件名称</p><p>[atguigu@hadoop102 bin]$ xsync &#x2F;home&#x2F;atguigu&#x2F;bin</p><p>注意：如果将xsync放到&#x2F;home&#x2F;atguigu&#x2F;bin目录下仍然不能实现全局使用，可以将xsync移动到&#x2F;usr&#x2F;local&#x2F;bin目录下。</p><h3 id="集群配置"><a href="#集群配置" class="headerlink" title="集群配置"></a>集群配置</h3><h4 id="集群部署规划"><a href="#集群部署规划" class="headerlink" title="集群部署规划"></a>集群部署规划</h4><table><thead><tr><th></th><th>node01</th><th>node02</th><th>node03</th></tr></thead><tbody><tr><td>HDFS</td><td>NameNode、DataNode</td><td>DataNode</td><td>SecondaryNameNode、DataNode</td></tr><tr><td>YARN</td><td>Nodemanager</td><td>ResourceManager、NodeManager</td><td>Nodemanager</td></tr></tbody></table><h3 id="配置集群"><a href="#配置集群" class="headerlink" title="配置集群"></a>配置集群</h3><h4 id="（1）核心配置文件"><a href="#（1）核心配置文件" class="headerlink" title="（1）核心配置文件"></a>（1）核心配置文件</h4><p>配置core-site.xml</p><p>[atguigu@hadoop102 hadoop]$ vi core-site.xml</p><p>在该文件中编写如下配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 指定HDFS中NameNode的地址 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;<span class="name">name</span>&gt;</span>fs.defaultFS<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://hadoop102:9000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 指定Hadoop运行时产生文件的存储目录 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.tmp.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;<span class="name">value</span>&gt;</span>/opt/module/hadoop-2.7.2/data/tmp<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="（2）HDFS配置文件"><a href="#（2）HDFS配置文件" class="headerlink" title="（2）HDFS配置文件"></a>（2）HDFS配置文件</h4><p>配置hadoop-env.sh</p><p>[atguigu@hadoop102 hadoop]$ vi hadoop-env.sh</p><p>export JAVA_HOME&#x3D;&#x2F;opt&#x2F;module&#x2F;jdk1.8.0_144</p><p>配置hdfs-site.xml</p><p>[atguigu@hadoop102 hadoop]$ vi hdfs-site.xml</p><p>在该文件中编写如下配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 指定HDFS中NameNode的地址 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;<span class="name">name</span>&gt;</span>fs.defaultFS<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://hadoop102:9000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 指定Hadoop运行时产生文件的存储目录 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.tmp.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;<span class="name">value</span>&gt;</span>/opt/module/hadoop-2.7.2/data/tmp<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="（3）YARN配置文件"><a href="#（3）YARN配置文件" class="headerlink" title="（3）YARN配置文件"></a>（3）YARN配置文件</h4><p>配置yarn-env.sh</p><p>[atguigu@hadoop102 hadoop]$ vi yarn-env.sh</p><p>export JAVA_HOME&#x3D;&#x2F;opt&#x2F;module&#x2F;jdk1.8.0_144</p><p>配置yarn-site.xml</p><p>[atguigu@hadoop102 hadoop]$ vi yarn-site.xml</p><p>在该文件中增加如下配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Reducer获取数据的方式 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.aux-services<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;<span class="name">value</span>&gt;</span>mapreduce_shuffle<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 指定YARN的ResourceManager的地址 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.hostname<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop103<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="（4）MapReduce配置文件"><a href="#（4）MapReduce配置文件" class="headerlink" title="（4）MapReduce配置文件"></a>（4）MapReduce配置文件</h4><p>配置mapred-env.sh</p><p>[atguigu@hadoop102 hadoop]$ vi mapred-env.sh</p><p>export JAVA_HOME&#x3D;&#x2F;opt&#x2F;module&#x2F;jdk1.8.0_144</p><p>配置mapred-site.xml</p><p>[atguigu@hadoop102 hadoop]$ cp mapred-site.xml.template mapred-site.xml</p><p>[atguigu@hadoop102 hadoop]$ vi mapred-site.xml</p><p>在该文件中增加如下配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 指定MR运行在Yarn上 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.framework.name<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;<span class="name">value</span>&gt;</span>yarn<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3．在集群上分发配置好的Hadoop配置文件</p><p>[atguigu@hadoop102 hadoop]$ xsync &#x2F;opt&#x2F;module&#x2F;hadoop-2.7.2&#x2F;</p><p>4．查看文件分发情况</p><p>[atguigu@hadoop103 hadoop]$ cat &#x2F;opt&#x2F;module&#x2F;hadoop-2.7.2&#x2F;etc&#x2F;hadoop&#x2F;core-site.xml</p><h3 id="集群单点启动"><a href="#集群单点启动" class="headerlink" title="集群单点启动"></a>集群单点启动</h3><p>（1）如果集群是第一次启动，需要<em><strong>*格式化*</strong></em><em><strong>*NameNode*</strong></em></p><p>[atguigu@hadoop102 hadoop-2.7.2]$ hadoop namenode -format</p><p>（2）在hadoop102上启动NameNode</p><p>[atguigu@hadoop102 hadoop-2.7.2]$ hadoop-daemon.sh start namenode</p><p>[atguigu@hadoop102 hadoop-2.7.2]$ jps</p><p>3461 NameNode</p><p>（3）在hadoop102、hadoop103以及hadoop104上分别启动DataNode</p><p>[atguigu@hadoop102 hadoop-2.7.2]$ hadoop-daemon.sh start datanode</p><p>[atguigu@hadoop102 hadoop-2.7.2]$ jps</p><p>3461 NameNode</p><p>3608 Jps</p><p>3561 DataNode</p><p>[atguigu@hadoop103 hadoop-2.7.2]$ hadoop-daemon.sh start datanode</p><p>[atguigu@hadoop103 hadoop-2.7.2]$ jps</p><p>3190 DataNode</p><p>3279 Jps</p><p>[atguigu@hadoop104 hadoop-2.7.2]$ hadoop-daemon.sh start datanode</p><p>[atguigu@hadoop104 hadoop-2.7.2]$ jps</p><p>3237 Jps</p><p>3163 DataNode</p><p>（4）思考：每次都一个一个节点启动，如果节点数增加到1000个怎么办？</p><h3 id="SSH无密码登录配置"><a href="#SSH无密码登录配置" class="headerlink" title="SSH无密码登录配置"></a>SSH无密码登录配置</h3><h4 id="配置ssh"><a href="#配置ssh" class="headerlink" title="配置ssh"></a>配置ssh</h4><p>（1）基本语法</p><p>ssh另一台电脑的ip地址</p><p>（2）ssh连接时出现Host key verification failed的解决方法</p><p>​[atguigu@hadoop102 opt] $ ssh 192.168.1.103</p><p>​The authenticity of host ‘192.168.1.103 (192.168.1.103)’ can’t be established.</p><p>​RSA key fingerprint is cf:1e:de:d7:d0:4c:2d:98:60:b4:fd:ae:b1:2d:ad:06.</p><p>​Are you sure you want to continue connecting (yes&#x2F;no)? </p><p>​Host key verification failed.</p><p>（3）解决方案如下：直接输入yes</p><h4 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h4><p>（2）生成公钥和私钥：</p><p>​[atguigu@hadoop102 .ssh]$ ssh-keygen -t rsa</p><p>​然后敲（三个回车），就会生成两个文件id_rsa（私钥）、id_rsa.pub（公钥）</p><p>（3）将公钥拷贝到要免密登录的目标机器上</p><p>​[atguigu@hadoop102 .ssh]$ ssh-copy-id hadoop102</p><p>​[atguigu@hadoop102 .ssh]$ ssh-copy-id hadoop103</p><p>​[atguigu@hadoop102 .ssh]$ ssh-copy-id hadoop104</p><p>注意：</p><p>还需要在hadoop102上采用root账号，配置一下无密登录到hadoop102、hadoop103、hadoop104；</p><p>还需要在hadoop103上采用atguigu账号配置一下无密登录到hadoop102、hadoop103、hadoop104服务器上。</p><h4 id="SSH文件夹下的文件功能解释"><a href="#SSH文件夹下的文件功能解释" class="headerlink" title="SSH文件夹下的文件功能解释"></a>SSH文件夹下的文件功能解释</h4><table><thead><tr><th>known_hosts</th><th>记录ssh访问过计算机的公钥(public key)</th></tr></thead><tbody><tr><td>id_rsa</td><td>生成的私钥</td></tr><tr><td>id_rsa.pub</td><td>生成的公钥</td></tr><tr><td>authorized_keys</td><td>存放授权过得无密登录服务器公钥</td></tr></tbody></table><h4 id="群起集群"><a href="#群起集群" class="headerlink" title="群起集群"></a>群起集群</h4><h5 id="配置slaves"><a href="#配置slaves" class="headerlink" title="配置slaves"></a>配置slaves</h5><p>&#x2F;opt&#x2F;module&#x2F;hadoop-2.7.2&#x2F;etc&#x2F;hadoop&#x2F;slaves</p><p>[atguigu@hadoop102 hadoop]$ vi slaves</p><p>在该文件中增加如下内容：</p><p>hadoop102</p><p>hadoop103</p><p>hadoop104</p><p>注意：该文件中添加的内容结尾不允许有空格，文件中不允许有空行。</p><p>同步所有节点配置文件</p><p>[atguigu@hadoop102 hadoop]$ xsync slaves</p><h5 id="启动集群"><a href="#启动集群" class="headerlink" title="启动集群"></a>启动集群</h5><p>（1）如果集群是第一次启动，需要格式化NameNode（注意格式化之前，一定要先停止上次启动的所有namenode和datanode进程，然后再删除data和log数据）</p><p>[atguigu@hadoop102 hadoop-2.7.2]$ bin&#x2F;hdfs namenode -format</p><p>（2）启动HDFS</p><p>[atguigu@hadoop102 hadoop-2.7.2]$ sbin&#x2F;start-dfs.sh</p><p>[atguigu@hadoop102 hadoop-2.7.2]$ jps</p><p>4166 NameNode</p><p>4482 Jps</p><p>4263 DataNode</p><p>[atguigu@hadoop103 hadoop-2.7.2]$ jps</p><p>3218 DataNode</p><p>3288 Jps</p><p>[atguigu@hadoop104 hadoop-2.7.2]$ jps</p><p>3221 DataNode</p><p>3283 SecondaryNameNode</p><p>3364 Jps</p><p>（3）启动YARN</p><p>[atguigu@hadoop103 hadoop-2.7.2]$ sbin&#x2F;start-yarn.sh</p><p>注意：NameNode和ResourceManger如果不是同一台机器，不能在NameNode上启动 YARN，应该在ResouceManager所在的机器上启动YARN。</p><p>（4）Web端查看SecondaryNameNode</p><p>（a）浏览器中输入：<a href="http://hadoop104:50090/status.html">http://hadoop104:50090/status.html</a></p><p>​（b）查看SecondaryNameNode信息，如图2-41所示。</p><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><ol><li><p>防火墙没关闭、或者没有启动Yarn</p><p><strong>INFO client.RMProxy: Connecting to ResourceManager at hadoop108&#x2F;192.168.10.108:8032</strong></p></li><li><p>主机名配置错误</p></li><li><p>IP地址配置错误</p></li><li><p>SSH没有配置好</p></li><li><p>root用户和其他用于其他集群不统一</p></li><li><p>配置文件修改不细心</p></li><li><p>未编译源码</p><p><strong>Unable to load native-hadoop library for your platform… using builtin-java classes where applicable</strong></p><p><strong>17&#x2F;05&#x2F;22 15:38:58 INFO client.RMProxy: Connecting to ResourceManager at hadoop108&#x2F;192.168.10.108:8032</strong></p></li><li><p>不识别主机名</p><p>java.net.UnknownHostException: hadoop102: hadoop102</p><p>​    at java.net.InetAddress.getLocalHost(InetAddress.java:1475)</p><p>​    at org.apache.hadoop.mapreduce.JobSubmitter.submitJobInternal(JobSubmitter.java:146)</p><p>​    at org.apache.hadoop.mapreduce.Job$10.run(Job.java:1290)</p><p>​    at org.apache.hadoop.mapreduce.Job$10.run(Job.java:1287)</p><p>​    at java.security.AccessController.doPrivileged(Native Method)</p><p>at javax.security.auth.Subject.doAs(Subject.java:415)</p><p><strong>解决方案</strong></p><p>​（1）在&#x2F;etc&#x2F;hosts文件中添加192.168.1.102 hadoop102</p><p>​（2）主机名称不要起hadoop  hadoop000等特殊名称</p></li><li><p>DataNode和NameNode进制同时只能工作一个</p><p><img src="D:\大数据\media\DataNode和NameNode.PNG" alt="DataNode和NameNode"></p></li><li><p>执行命令不生效，黏贴word中命令时，遇到- 和-没区分开。导致命令失效</p></li><li><p>JPS发现进程已经没有，但是重新启动集群，提示进程以及开启。</p><p>原因：在Linux的根目录下&#x2F;tmp目录中存在启动的进程临时文件，将集群相关的进程删除掉，在重新启动</p></li><li><p>JPS不生效</p><p>原因：全局变量hadoop java没有生效。解决办法：需要source &#x2F;etc&#x2F;profile文件</p></li><li><p>8088端口链接不上</p><p>[atguigu@hadoop102 桌面]$ cat &#x2F;etc&#x2F;hosts</p><p>注释掉如下代码</p><p>#127.0.0.1  localhost localhost.localdomain localhost4 localhost4.localdomain4</p><p>#::1     hadoop102</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;大数据入门&quot;&gt;&lt;a href=&quot;#大数据入门&quot; class=&quot;headerlink&quot; title=&quot;大数据入门&quot;&gt;&lt;/a&gt;大数据入门&lt;/h1&gt;&lt;h2 id=&quot;hadoop1-x和hadoop2-x的区别&quot;&gt;&lt;a href=&quot;#hadoop1-x和hadoop2-x</summary>
      
    
    
    
    <category term="大数据" scheme="http://example.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="hadoop" scheme="http://example.com/tags/hadoop/"/>
    
  </entry>
  
  <entry>
    <title>mysql基础</title>
    <link href="http://example.com/2022/05/29/mysql%E5%9F%BA%E7%A1%80/"/>
    <id>http://example.com/2022/05/29/mysql%E5%9F%BA%E7%A1%80/</id>
    <published>2022-05-29T14:29:22.000Z</published>
    <updated>2022-05-29T14:31:08.513Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h1><ul><li><p>数据库分类</p><ol><li><p>关系型数据库(RDBMS)</p><p>概念：建立在关系模型基础上，由多张相互连接的二维表组成的数据库</p><p>特点：</p><ol><li>使用表存储数据，格式统一，便于维护</li><li>使用SQL语言操作，标准统一，使用方便</li></ol></li><li><p>非关系性数据库：<br>概念：不是使用表来构建的数据库。比如HIve以行的模式。redis键值对</p></li></ol></li><li><p>MySQL数据库的数据模型</p><p><img src="C:\Users\84350\AppData\Roaming\Typora\typora-user-images\image-20220405160611509.png" alt="image-20220405160611509"></p></li></ul><h2 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h2><p>分为：</p><ul><li>SQL的通用语法</li><li>SQL的分类</li><li>DDL</li><li>DML</li><li>DQL</li><li>DCL</li></ul><h3 id="SQL的通用语法"><a href="#SQL的通用语法" class="headerlink" title="SQL的通用语法"></a>SQL的通用语法</h3><ol><li>SQL语句可以单行或者多行书写，以分号结尾</li><li>SQL语句可以使用空格&#x2F;缩进来增强语句的可读性</li><li>Mysql数据库的SQL语句不分大小写，关键字建议使用大写</li><li>注释：<ul><li>单行注释：<code>-- 注释内容</code> 或者<code># 注释内容</code></li><li>多行注释： <code>/*注释内容*/</code></li></ul></li></ol><h3 id="SQL的分类"><a href="#SQL的分类" class="headerlink" title="SQL的分类"></a>SQL的分类</h3><table><thead><tr><th>分类</th><th>全称</th><th>说明</th></tr></thead><tbody><tr><td>DDL</td><td>Data Definition Language</td><td>数据定义语言，用来定义数据库对象(数据库、表，字段)</td></tr><tr><td>DML</td><td>Data Manipulation Language</td><td>数据操作语言，用来对数据库表中的数据进行增删改</td></tr><tr><td>DQL</td><td>Data Query Languaue</td><td>数据查询语言，用来对数据库表中的数据进行查询操作</td></tr><tr><td>DCL</td><td>Data Control Language</td><td>数据控制语言，用来创建数据库用户、控制数据库的访问权限</td></tr></tbody></table><h3 id="Mysql的基础数据类型"><a href="#Mysql的基础数据类型" class="headerlink" title="Mysql的基础数据类型"></a>Mysql的基础数据类型</h3><p><strong>MySQL的数据类型有很多，主要分为三类：数值类型、字符串类型、日期时间类型</strong></p><h4 id="数值类型"><a href="#数值类型" class="headerlink" title="数值类型"></a>数值类型</h4><table><thead><tr><th>类型</th><th>大小</th><th>有符号范围</th><th>无符号范围</th><th>描述</th></tr></thead><tbody><tr><td>TINYINT</td><td>1byte</td><td>(-128~127)</td><td>(0~255)</td><td>小整数值</td></tr><tr><td>smallint</td><td>2bytes</td><td>(-32768~32767)</td><td>(0~65535)</td><td>大整数值</td></tr><tr><td>mediumint</td><td>3bytes</td><td>(-2^23~2^23-1)</td><td>(0~2^24-1)</td><td>大整数值</td></tr><tr><td>int或integer</td><td>4bytes</td><td>(-2^31~2^31-1)</td><td>(0~2^32-1)</td><td>大整数值</td></tr><tr><td>bigint</td><td>8bytes</td><td>(-2^63~2^63-1)</td><td>(0~2^64-1)</td><td>极大整数值</td></tr><tr><td>Float</td><td>4bytes</td><td></td><td></td><td>单精度浮点数</td></tr><tr><td>Double</td><td>8bytes</td><td></td><td></td><td>双精度浮点数</td></tr><tr><td>decimal</td><td></td><td>依赖于M(精度)和D(标度)的值</td><td>依赖于M(精度)和D(标度)的值</td><td>小数值(精确定点数)</td></tr></tbody></table><p><strong>使用：如果是age 则可以在定义时使用，age tinyint unsigned</strong></p><p>原因：因为age一般在100以内，使用int也可以表示，但是浪费3个字节。此外年龄没有负数，所以使用无符号</p><p>score： 定于： score double(4,1)   其中4代表长度，1代表位数(小数位)。</p><h4 id="字符串类型"><a href="#字符串类型" class="headerlink" title="字符串类型"></a>字符串类型</h4><table><thead><tr><th>类型</th><th>大小</th><th>说明</th></tr></thead><tbody><tr><td>CHAR</td><td>0-255bytes</td><td>定长字符串</td></tr><tr><td>VARCHAR</td><td>0-65535bytes</td><td>变长字符串</td></tr><tr><td>TINYBLOB</td><td>0-255bytes</td><td>不超过255个字符的二进制数据</td></tr><tr><td>TINYTEXT</td><td>0-255bytes</td><td>短文本字符串</td></tr><tr><td>BLOB</td><td>0-65535bytes</td><td>二进制形式的长文本数据</td></tr><tr><td>TEXT</td><td>0-65535bytes</td><td>长文本数据</td></tr><tr><td>MEDIUMBLOB</td><td>0-16777215bytes</td><td>二进制形式的中等长度文本数据</td></tr><tr><td>MEDIUMTEXT</td><td>0-16777215bytes</td><td>中等长度文本数据</td></tr><tr><td>LONGBLOB</td><td>0-4294967295bytes</td><td>二进制形式的极大文本数据</td></tr><tr><td>LONGTEXT</td><td>0-4294967295bytes</td><td>极大本文数据</td></tr></tbody></table><p><strong>定长和变长的字符串</strong></p><ol><li><p>可以标明长度</p><p>char(10):  表示可以存储10个字符的定长字符串。不管存储几个字符都占10个字符的位置，没有用0补</p><p>varchar(10): 表示可以存储10个字符的定长字符串。使用几个字符占几个字符的位置</p></li><li><p>对比：</p><ol><li>char： 性能高</li><li>varchar： 性能低，因为需要根据内容计算长度</li></ol></li><li><p>使用推荐：</p><ul><li>用户名：varchar(50)。 推荐varchar因为不确定用户输入的用户名长</li><li>性别：char(1)。 因为知道性别不是男就是女，所以使用定长就可以，性能反而很高</li></ul></li></ol><h4 id="日期时间类型"><a href="#日期时间类型" class="headerlink" title="日期时间类型"></a>日期时间类型</h4><table><thead><tr><th>类型</th><th>大小</th><th>范围</th><th>格式</th><th>描述</th></tr></thead><tbody><tr><td>DATE</td><td>3</td><td>1000-01-01至9999-12-31</td><td>YYYY-MM-DD</td><td>日期值</td></tr><tr><td>TIME</td><td>3</td><td>-838:59:59至838:59:59</td><td>HH:MM:SS</td><td>时间值或持续时间</td></tr><tr><td>YEAR</td><td>1</td><td>1901至2155</td><td>YYYY</td><td>年份值</td></tr><tr><td>DATETIME</td><td>8</td><td>1000-01至9999-12-31</td><td>YYYY-MM-DD HH:MM:SS</td><td>混合日期和时间值</td></tr><tr><td>TIMESTAMP</td><td>4</td><td>1970-01至2038-01</td><td>YYYY-MM-DD HH:MM:SS</td><td>混合日期和时间值，时间戳</td></tr></tbody></table><h4 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h4><p>设计一张员工表，要求如下：</p><ol><li>编号，纯数字</li><li>员工工号(字符串长度，长度不超过10位)</li><li>员工姓名（字符串长度，长度不超过10位）</li><li>性别（男&#x2F;女，存储一个汉字）</li><li>年龄（正常人年龄，不可能存储负数）</li><li>身份证号（二代身份证均为18位，身份证中含有X）</li><li>入职时间（取值年月日）</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">crate <span class="keyword">table</span> employee(</span><br><span class="line">id <span class="type">int</span>,</span><br><span class="line">eno <span class="type">varchar</span>(<span class="number">10</span>),</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">10</span>),</span><br><span class="line">gender <span class="type">char</span>(<span class="number">1</span>),</span><br><span class="line">age tinyint unsigned,</span><br><span class="line">idcard <span class="type">char</span>(<span class="number">18</span>),</span><br><span class="line">hiretime <span class="type">date</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="DDL"><a href="#DDL" class="headerlink" title="DDL"></a>DDL</h3><p><strong>数据定义语言</strong>，用来操作数据库、数据表、字段的定义</p><ul><li><p>数据库相关操作</p><ol><li><p>查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 查询所有数据库</span><br><span class="line"><span class="keyword">show</span> databases;</span><br><span class="line"># 查询当前数据库</span><br><span class="line"><span class="keyword">select</span> databases();</span><br></pre></td></tr></table></figure></li><li><p>创建</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 语法：<span class="keyword">create</span> database [IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>] 数据库名 [<span class="keyword">DEFAULT</span> CHARSET 字符集] [<span class="keyword">COLLATE</span> 排序规则]</span><br><span class="line"><span class="keyword">create</span> database myData;# 创建数据库名为myData的数据库</span><br><span class="line"><span class="keyword">create</span> database test <span class="keyword">default</span> charset utf8mb4; # utf8mb4支持四个字节存储，建议使用此字符集</span><br></pre></td></tr></table></figure></li><li><p>删除</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 语法：<span class="keyword">drop</span> database [IF <span class="keyword">EXISTS</span>] 数据库名;</span><br><span class="line"><span class="keyword">drop</span> database if <span class="keyword">exists</span> myData;</span><br></pre></td></tr></table></figure></li><li><p>使用</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 使用</span><br><span class="line">use 数据库名；</span><br></pre></td></tr></table></figure></li></ol></li><li><p>数据表相关操作</p><ol><li><p>查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 查询当前数据库的所有表</span><br><span class="line"><span class="keyword">show</span> tables;</span><br><span class="line"># 查询表结构</span><br><span class="line"><span class="keyword">desc</span> 表名字；</span><br><span class="line"># 查询指定表的建表语句</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> 表名；</span><br></pre></td></tr></table></figure></li><li><p>创建</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line">字段<span class="number">1</span> 字段<span class="number">1</span>类型 [comment 字段<span class="number">1</span>注释],</span><br><span class="line">    字段<span class="number">2</span> 字段<span class="number">2</span>类型 [comment 字段<span class="number">2</span>注释],</span><br><span class="line">    ......,</span><br><span class="line">    字段n 字段n类型[comment 字段n注释]</span><br><span class="line">)[comment 表注释];</span><br></pre></td></tr></table></figure></li><li><p>删除</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> 表名;</span><br></pre></td></tr></table></figure></li><li><p>修改表结构(修改字段)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 添加字段</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> 字段名 字段类型(长度) [comment 注释] [约束];</span><br><span class="line"># 修改数据类型</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 modify 字段名 新数据类型(长度)</span><br><span class="line"># 修改数据类型和字段名</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 change 旧字段名 新字段名 类型(长度) [comment 注释][约束];</span><br><span class="line"># 删除字段</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> 字段名；</span><br></pre></td></tr></table></figure></li><li><p>修改表名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 rename <span class="keyword">to</span> 新表名；</span><br></pre></td></tr></table></figure></li><li><p>删除表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 删除表</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> [IF <span class="keyword">exists</span>] 表名；</span><br><span class="line"># 删除指定表，并重新创建该表（其实就是清空数据）</span><br><span class="line"><span class="keyword">truncate</span> <span class="keyword">table</span> 表名；</span><br></pre></td></tr></table></figure></li></ol></li></ul><h3 id="DML"><a href="#DML" class="headerlink" title="DML"></a>DML</h3><p><strong>数据操作语言</strong>，用来对数据库中表的数据记录进行增删改操作</p><p><strong>添加数据</strong>： insert into</p><p><strong>删除数据</strong>： delete</p><p><strong>修改数据</strong>： update</p><h4 id="添加数据"><a href="#添加数据" class="headerlink" title="添加数据"></a>添加数据</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 给指定字段添加数据</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 表名(字段<span class="number">1</span>，字段<span class="number">2</span>,...) <span class="keyword">values</span> (值<span class="number">1</span>，值<span class="number">2</span>，...) # 字段名和值一一对应</span><br><span class="line"># 给全部字段添加数据</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 表名 <span class="keyword">values</span> (值<span class="number">1</span>，值<span class="number">2</span>，...) # 这里的值<span class="number">1</span>，值<span class="number">2</span>与表的结构中的字段名，一一对应</span><br><span class="line"># 批量添加数据</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 表名(字段<span class="number">1</span>，字段<span class="number">2</span>，...) <span class="keyword">values</span> (值<span class="number">1</span>，值<span class="number">2</span>，...),(值<span class="number">1</span>，值<span class="number">2</span>，...),(值<span class="number">1</span>，值<span class="number">2</span>，...)</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 表名 <span class="keyword">values</span> (值<span class="number">1</span>，值<span class="number">2</span>，...),(值<span class="number">1</span>，值<span class="number">2</span>，...),(值<span class="number">1</span>，值<span class="number">2</span>，...)</span><br></pre></td></tr></table></figure><p><strong>注意：</strong></p><ol><li>插入数据时，指定的字段和需要的值需要一一对应</li><li>字符串类型和日期型数据应该包含在引号中</li><li>插入的数据大小，应该在字段的规定范围内</li></ol><h4 id="修改数据"><a href="#修改数据" class="headerlink" title="修改数据"></a>修改数据</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 修改数据</span><br><span class="line"><span class="keyword">update</span> 表名 <span class="keyword">set</span> 字段<span class="number">1</span><span class="operator">=</span>值<span class="number">1</span>，字段<span class="number">2</span><span class="operator">=</span>值<span class="number">2</span>，... [<span class="keyword">where</span> 条件];</span><br></pre></td></tr></table></figure><p><strong>注意：</strong></p><ol><li>修改语句的条件可以有，也可以没有，如果没有条件，会修改整个表中的所有数据</li></ol><h4 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 删除数据</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> 表名 [<span class="keyword">where</span> 条件];</span><br></pre></td></tr></table></figure><p><strong>注意：</strong></p><ol><li>delete的条件可以可有可无，如果没有删除表中所有数据</li><li>delete语句不能删除某一个字段的值。此时建议使用<strong>update</strong>语句，将其要删除的某个字段的值设置为<code>null</code></li></ol><h3 id="DQL"><a href="#DQL" class="headerlink" title="DQL"></a>DQL</h3><p><strong>数据查询语言</strong>： 用来查询数据库中表的记录。使用频率最高~！关键字select </p><p><strong>DQL的语法格式</strong></p><p><img src="C:\Users\84350\AppData\Roaming\Typora\typora-user-images\image-20220406180959332.png" alt="image-20220406180959332"></p><p><strong>常见的几种查询</strong></p><ul><li>基本查询</li><li>条件查询(where)</li><li>聚合函数(count,max,min,avg,sum)</li><li>分组查询（group by）</li><li>排序查询（order by）</li><li>分页查询（limit）</li></ul><p><strong>下属sql为案例的建表语句</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"># 选中数据库</span><br><span class="line"><span class="keyword">create</span> database if <span class="keyword">not</span> <span class="keyword">exists</span> myTest <span class="keyword">default</span> charset<span class="operator">=</span>utf8mb4;</span><br><span class="line"># 进入新创建的数据库</span><br><span class="line">use myTest;</span><br><span class="line"># 创建数据库</span><br><span class="line"><span class="keyword">create</span> if <span class="keyword">not</span> <span class="keyword">exists</span> <span class="keyword">table</span> emp(</span><br><span class="line">    id <span class="type">int</span> comment <span class="string">&#x27;编号&#x27;</span>,</span><br><span class="line">    workno <span class="type">varchar</span>(<span class="number">10</span>) comment <span class="string">&#x27;工号&#x27;</span>,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">10</span>) comment <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">    gender <span class="type">char</span>(<span class="number">1</span>) comment <span class="string">&#x27;性别&#x27;</span>,</span><br><span class="line">    age tinyint unsigned comment <span class="string">&#x27;年龄&#x27;</span>,</span><br><span class="line">    idcard <span class="type">char</span>(<span class="number">18</span>) comment <span class="string">&#x27;身份证号&#x27;</span>,</span><br><span class="line">    workaddress <span class="type">varchar</span>(<span class="number">50</span>) comment <span class="string">&#x27;工作地址&#x27;</span>,</span><br><span class="line">    entrydate <span class="type">date</span> comment <span class="string">&#x27;入职时间&#x27;</span></span><br><span class="line">)comment <span class="string">&#x27;员工表&#x27;</span>;</span><br><span class="line"></span><br><span class="line"># 插入数据</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> emp</span><br><span class="line"><span class="keyword">values</span></span><br><span class="line">    (<span class="number">1</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;刘岩&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="number">23</span>,<span class="string">&#x27;012345678987654321&#x27;</span>,<span class="string">&#x27;北京&#x27;</span>,<span class="string">&#x27;2000-01-05&#x27;</span>),</span><br><span class="line">    (<span class="number">2</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;张无忌&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">26</span>,<span class="string">&#x27;013345678987654321&#x27;</span>,<span class="string">&#x27;河北&#x27;</span>,<span class="string">&#x27;2004-01-05&#x27;</span>),</span><br><span class="line">    (<span class="number">3</span>,<span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;韦一笑&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">18</span>,<span class="string">&#x27;112345678987654321&#x27;</span>,<span class="string">&#x27;上海&#x27;</span>,<span class="string">&#x27;1995-01-05&#x27;</span>),</span><br><span class="line">    (<span class="number">4</span>,<span class="string">&#x27;4&#x27;</span>,<span class="string">&#x27;赵敏&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="number">38</span>,<span class="string">&#x27;052345678987654321&#x27;</span>,<span class="string">&#x27;北京&#x27;</span>,<span class="string">&#x27;1995-01-05&#x27;</span>),</span><br><span class="line">    (<span class="number">5</span>,<span class="string">&#x27;5&#x27;</span>,<span class="string">&#x27;小昭&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="number">23</span>,<span class="string">&#x27;012345678987654321&#x27;</span>,<span class="string">&#x27;北京&#x27;</span>,<span class="string">&#x27;2022-01-05&#x27;</span>),</span><br><span class="line">    (<span class="number">6</span>,<span class="string">&#x27;6&#x27;</span>,<span class="string">&#x27;杨逍&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">26</span>,<span class="string">&#x27;013345678987654321&#x27;</span>,<span class="string">&#x27;河北&#x27;</span>,<span class="string">&#x27;2014-01-05&#x27;</span>),</span><br><span class="line">    (<span class="number">7</span>,<span class="string">&#x27;7&#x27;</span>,<span class="string">&#x27;樊亮亮&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">18</span>,<span class="string">&#x27;112345678987654321&#x27;</span>,<span class="string">&#x27;上海&#x27;</span>,<span class="string">&#x27;1934-01-05&#x27;</span>),</span><br><span class="line">    (<span class="number">8</span>,<span class="string">&#x27;8&#x27;</span>,<span class="string">&#x27;张士诚&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">78</span>,<span class="string">&#x27;052345878987654321&#x27;</span>,<span class="string">&#x27;北京&#x27;</span>,<span class="string">&#x27;1988-01-05&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> emp <span class="keyword">values</span> (<span class="number">9</span>,<span class="string">&#x27;9&#x27;</span>,<span class="string">&#x27;卢登&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="keyword">null</span>,<span class="string">&#x27;052345878987654321&#x27;</span>,<span class="string">&#x27;日本&#x27;</span>,<span class="string">&#x27;1983-01-05&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> emp <span class="keyword">values</span> (<span class="number">10</span>,<span class="string">&#x27;10&#x27;</span>,<span class="string">&#x27;安娜卡尔&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="number">14</span>,<span class="string">&#x27;052345878987654321&#x27;</span>,<span class="string">&#x27;美国&#x27;</span>,<span class="string">&#x27;2022-01-05&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> emp <span class="keyword">values</span> (<span class="number">11</span>,<span class="string">&#x27;11&#x27;</span>,<span class="string">&#x27;女巫&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">21</span>,<span class="string">&#x27;052345878987654321&#x27;</span>,<span class="string">&#x27;法国&#x27;</span>,<span class="string">&#x27;2014-01-05&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> emp <span class="keyword">values</span> (<span class="number">12</span>,<span class="string">&#x27;12&#x27;</span>,<span class="string">&#x27;张三丰&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">88</span>,<span class="string">&#x27;05234587898765432X&#x27;</span>,<span class="string">&#x27;重阳&#x27;</span>,<span class="string">&#x27;1977-01-05&#x27;</span>);</span><br></pre></td></tr></table></figure><h4 id="基本查询"><a href="#基本查询" class="headerlink" title="基本查询"></a>基本查询</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># <span class="number">1.</span> 查询多个字段</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 表名; # 查询表中所有的字段信息，不建议使用，不管是阅读性和执行的性能都不好</span><br><span class="line"><span class="keyword">select</span> 字段<span class="number">1</span>，字段<span class="number">2</span>，字段<span class="number">3</span>，... <span class="keyword">from</span> 表名; # 建议使用</span><br><span class="line"># <span class="number">2.</span> 设置别名。可以省略<span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> 字段<span class="number">1</span> [<span class="keyword">as</span> 别名<span class="number">1</span>],字段<span class="number">2</span> [<span class="keyword">as</span> 别名<span class="number">2</span>],... <span class="keyword">from</span> 表名;</span><br><span class="line"><span class="keyword">select</span> 字段<span class="number">1</span> 别名<span class="number">1</span>，字段<span class="number">2</span> 别名<span class="number">2</span>,... <span class="keyword">from</span> 表名 ;</span><br><span class="line"># <span class="number">3.</span> 去除重复记录</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> 字段列表 <span class="keyword">from</span> 表名;</span><br></pre></td></tr></table></figure><p><strong>基本案例</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 基本查询</span><br><span class="line">#<span class="comment">----- 1. 查询指定字段，name,workno,age 返回</span></span><br><span class="line"><span class="keyword">select</span> name <span class="keyword">as</span> <span class="string">&#x27;姓名&#x27;</span>, workno <span class="keyword">as</span> <span class="string">&#x27;工号&#x27;</span>,age <span class="keyword">as</span> <span class="string">&#x27;年龄&#x27;</span> <span class="keyword">from</span> emp;</span><br><span class="line">#<span class="comment">----- 2. 查询所有字段</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line">#<span class="comment">----- 3. 查询所有员工的工作地址，起别名</span></span><br><span class="line"><span class="keyword">select</span> name <span class="keyword">as</span> <span class="string">&#x27;姓名&#x27;</span>, workaddress <span class="keyword">as</span> <span class="string">&#x27;工作地址&#x27;</span> <span class="keyword">from</span> emp;</span><br><span class="line"><span class="keyword">select</span> workaddress  <span class="string">&#x27;工作地址&#x27;</span> <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line">#<span class="comment">----- 4.  查询公司员工的上班地址，不重复</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> workaddress <span class="keyword">as</span> <span class="string">&#x27;工作地址&#x27;</span> <span class="keyword">from</span> emp;</span><br></pre></td></tr></table></figure><h4 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 基本语法结构</span><br><span class="line"><span class="keyword">select</span> 字段列表 <span class="keyword">from</span> 表名 <span class="keyword">where</span> 条件列表</span><br></pre></td></tr></table></figure><p><strong>条件</strong></p><ul><li>比较运算符<ol><li><code>&gt;</code>,<code>&lt;</code>,<code>&gt; =</code>,<code>&lt; =</code>，<code>&lt;&gt; 或者 ! =</code>，<code>=</code></li><li>between 最小值(包含) and 最大值(包含)： 符合最小值到最大值的数据记录</li><li>in(x1,x2,x3) ：值等于x1,x2,x3的记录</li><li>like 占位符：模糊匹配。<code>_匹配单个字符，%匹配多个字符</code></li><li>is null： 字段的值为空</li><li>is not null： 字段的值不为空</li></ol></li><li>逻辑运算符<ul><li><code>and 或 &amp;&amp; </code>: 逻辑与，并且，多个条件同时成立</li><li><code>or 或 ||</code>: 逻辑或，或者，多个条件有一成立</li><li><code>not 或 ！</code> ： 逻辑非，不是</li></ul></li></ul><p><strong>案例</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"># 条件查询</span><br><span class="line">#<span class="comment">---- 1. 查询年龄等于 18 的员工</span></span><br><span class="line"><span class="keyword">select</span> name,age <span class="keyword">from</span> emp <span class="keyword">where</span> age <span class="operator">=</span> <span class="number">18</span>;</span><br><span class="line">#<span class="comment">---- 2. 查询年龄小于 20 的员工</span></span><br><span class="line"><span class="keyword">select</span> name,age <span class="keyword">from</span> emp <span class="keyword">where</span> age <span class="operator">&lt;</span> <span class="number">20</span>;</span><br><span class="line">#<span class="comment">---- 3. 查询年龄小于等于 23 的员工</span></span><br><span class="line"><span class="keyword">select</span> name, age <span class="keyword">from</span> emp <span class="keyword">where</span> age <span class="operator">&lt;=</span> <span class="number">23</span> <span class="keyword">order</span> <span class="keyword">by</span> age;</span><br><span class="line">#<span class="comment">---- 4. 查询没有年龄的员工</span></span><br><span class="line"><span class="keyword">select</span> name , age <span class="keyword">from</span> emp <span class="keyword">where</span> age <span class="keyword">is</span> <span class="keyword">null</span>;</span><br><span class="line">#<span class="comment">---- 5. 查询有年龄的员工</span></span><br><span class="line"><span class="keyword">select</span> name ,age <span class="keyword">from</span> emp <span class="keyword">where</span>  age <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span>;</span><br><span class="line">#<span class="comment">---- 6. 查询年龄不等于23的员工</span></span><br><span class="line"><span class="keyword">select</span> name,age <span class="keyword">from</span> emp <span class="keyword">where</span> age <span class="operator">&lt;&gt;</span> <span class="number">23</span> <span class="keyword">order</span> <span class="keyword">by</span> age;</span><br><span class="line">#<span class="comment">---- 7. 查询年龄在18岁(包含)到23岁的员工</span></span><br><span class="line"><span class="keyword">select</span> name, age <span class="keyword">from</span> emp <span class="keyword">where</span> age <span class="keyword">between</span> <span class="number">18</span> <span class="keyword">and</span> <span class="number">23</span> <span class="keyword">order</span> <span class="keyword">by</span> age;</span><br><span class="line"><span class="keyword">select</span> name, age <span class="keyword">from</span> emp <span class="keyword">where</span> age<span class="operator">&gt;=</span><span class="number">18</span> <span class="keyword">and</span> age <span class="operator">&lt;=</span> <span class="number">23</span> <span class="keyword">order</span> <span class="keyword">by</span> age;</span><br><span class="line">#<span class="comment">---- 8. 查询性别为女 且年龄小于 25岁的员工</span></span><br><span class="line"><span class="keyword">select</span> name,age, gender <span class="keyword">from</span> emp <span class="keyword">where</span> gender<span class="operator">=</span><span class="string">&#x27;女&#x27;</span> <span class="keyword">and</span> age<span class="operator">&lt;</span> <span class="number">25</span>;</span><br><span class="line"><span class="keyword">select</span> name,age, gender <span class="keyword">from</span> emp <span class="keyword">where</span> gender<span class="operator">=</span><span class="string">&#x27;女&#x27;</span>;</span><br><span class="line">#<span class="comment">---- 9. 查询有年龄等于18或23 的员工</span></span><br><span class="line"><span class="keyword">select</span> name, age <span class="keyword">from</span> emp <span class="keyword">where</span> age <span class="keyword">in</span> (<span class="number">14</span>,<span class="number">21</span>);</span><br><span class="line"><span class="keyword">select</span> name ,age <span class="keyword">from</span> emp <span class="keyword">where</span> age <span class="operator">=</span> <span class="number">14</span> <span class="keyword">or</span> age <span class="operator">=</span> <span class="number">38</span>;</span><br><span class="line">#<span class="comment">---- 10. 查询姓名为两个字的员工</span></span><br><span class="line"><span class="keyword">select</span> name,age <span class="keyword">from</span> emp <span class="keyword">where</span> name <span class="keyword">like</span> <span class="string">&#x27;____&#x27;</span>;</span><br><span class="line">#<span class="comment">---- 11. 查询当前身份证尾号为X的员工。 使用17个下划线也可以，但是%号简单</span></span><br><span class="line"><span class="keyword">select</span> name, age, idcard <span class="keyword">from</span> emp <span class="keyword">where</span> idcard <span class="keyword">like</span> <span class="string">&#x27;%X&#x27;</span>;</span><br></pre></td></tr></table></figure><h4 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h4><p><strong>介绍：</strong>将一列数据作为一个整体，进行纵向计算。注意实对列进行操作</p><table><thead><tr><th align="center">函数</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">count</td><td align="center">统计数量</td></tr><tr><td align="center">max</td><td align="center">此列最大值</td></tr><tr><td align="center">min</td><td align="center">此列最小值</td></tr><tr><td align="center">avg</td><td align="center">此列平均值</td></tr><tr><td align="center">sum</td><td align="center">此列的和</td></tr></tbody></table><p><strong>注意：</strong>如果该列有空值，不参与聚合函数的计算</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 基础语法</span><br><span class="line"><span class="keyword">select</span> 聚合函数(字段列表) <span class="keyword">from</span> 表名;</span><br></pre></td></tr></table></figure><p><strong>案例</strong>：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 聚合函数. 所有的<span class="keyword">null</span>不参与聚合计算</span><br><span class="line">#<span class="comment">---- 1. 统计该企业员工数量</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> emp ;</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(age) <span class="keyword">from</span> emp ;</span><br><span class="line">#<span class="comment">---- 2. 统计该企业员工的平均年龄</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(age) <span class="keyword">from</span> emp;</span><br><span class="line">#<span class="comment">---- 3. 统计该企业员工的最大年龄</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">max</span>(age) <span class="keyword">from</span> emp;</span><br><span class="line">#<span class="comment">---- 4. 统计该企业员工的最小年龄</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">min</span>(age) <span class="keyword">from</span> emp;</span><br><span class="line">#<span class="comment">---- 5. 统计上海地区员工的年龄之和</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(age) <span class="keyword">from</span> emp <span class="keyword">where</span> workaddress<span class="operator">=</span><span class="string">&#x27;北京&#x27;</span>;</span><br></pre></td></tr></table></figure><h4 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 基础语法</span><br><span class="line"><span class="keyword">select</span> 字段列表 <span class="keyword">from</span> 表名 [<span class="keyword">where</span> 条件] <span class="keyword">group</span> <span class="keyword">by</span> 分组字段名 [<span class="keyword">having</span> 分组后过滤条件];</span><br></pre></td></tr></table></figure><p><strong>where和having的区别</strong>：</p><ul><li>执行时机不同：where实对分组前进行过滤，不满足where的不参与分组；having是对分组后的结果进行筛选。</li><li>判断条件不同：where不能对聚合函数进行判断，而having可以</li></ul><p><strong>案例</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 分组查询</span><br><span class="line"># <span class="number">1.</span> 根据性别分组，统计男性员工和女性员工的数量</span><br><span class="line"><span class="keyword">select</span> gender, <span class="built_in">count</span>(name) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> gender;</span><br><span class="line"># <span class="number">2.</span> 根据性别分组，统计男性员工和女性员工的平均年龄</span><br><span class="line"><span class="keyword">select</span> gender,<span class="built_in">avg</span>(age) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> gender;</span><br><span class="line"># <span class="number">3.</span> 查询年龄小于<span class="number">45</span>的员工，并根据工作地址分组，获取员工数量大于等于<span class="number">2</span>的工作地址</span><br><span class="line"><span class="keyword">select</span> workaddress, <span class="built_in">count</span>(<span class="operator">*</span>) address_count <span class="keyword">from</span> emp <span class="keyword">where</span> age<span class="operator">&lt;</span><span class="number">45</span> <span class="keyword">group</span> <span class="keyword">by</span> workaddress <span class="keyword">having</span> address_count<span class="operator">&gt;=</span><span class="number">2</span>;</span><br></pre></td></tr></table></figure><h4 id="排序查询"><a href="#排序查询" class="headerlink" title="排序查询"></a>排序查询</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 基础语法</span><br><span class="line"><span class="keyword">select</span> 字段列表 <span class="keyword">from</span> 表名 [<span class="keyword">where</span> 条件] <span class="keyword">order</span> <span class="keyword">by</span> 字段<span class="number">1</span> 排序方式，字段<span class="number">2</span> 排序方式<span class="number">2</span>，...;</span><br></pre></td></tr></table></figure><p><strong>排序方式：</strong></p><ul><li>ASC: 升序（默认值，可以不写）。就是从小到大排列</li><li>DESC: 降序。从大到小排列</li></ul><p><strong>注意：</strong></p><p>如果是多字段排序，当第一个字段值相同时，才会对第二个字段进行排序。</p><p><strong>案例</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 排序查询</span><br><span class="line"># <span class="number">1.</span> 根据年龄对公司的员工进行升序排序</span><br><span class="line"><span class="keyword">select</span> name,age <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> age;</span><br><span class="line"># <span class="number">2.</span> 根据入职时间，对员工进行降序排序</span><br><span class="line"><span class="keyword">select</span> name, entrydate <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> entrydate <span class="keyword">desc</span>;</span><br><span class="line"># <span class="number">3.</span> 根据年龄对公司的员工进行升序排序，年龄相同按照入职时间进行降序排序</span><br><span class="line"><span class="keyword">select</span> name,age,entrydate <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> age, entrydate <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure><h4 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 基础语法</span><br><span class="line"><span class="keyword">select</span> 字段列表 <span class="keyword">from</span> emp limit 起始页码,查询数目;</span><br></pre></td></tr></table></figure><p><strong>注意：</strong></p><ol><li>起始页码从0开始，<strong>起始页码&#x3D;(查询页码-1) * 查询数目</strong></li><li>分页查询是数据库的方言，不同的数据库可能有不同的实现，MYSQL是LIMIT</li><li>如果查询的是第一个数据，可以省略起始页码，直接简写<strong>limit 查询数目</strong></li></ol><p><strong>案例</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 分页查询</span><br><span class="line"># <span class="number">1.</span>  查询第一页员工数据，每页展示<span class="number">10</span>条数据</span><br><span class="line"><span class="keyword">select</span> name, age <span class="keyword">from</span> emp limit <span class="number">10</span>;</span><br><span class="line">#或者</span><br><span class="line"><span class="keyword">select</span> name, age <span class="keyword">from</span> emp limit <span class="number">0</span>,<span class="number">10</span>;</span><br><span class="line"># <span class="number">2.</span>  查询第二页员工数据，每页展示<span class="number">10</span>条数据  起始索引<span class="operator">=</span> (目标页码<span class="number">-1</span>) <span class="operator">*</span> 每页的展示记录数目</span><br><span class="line"><span class="keyword">select</span> name,age <span class="keyword">from</span> emp limit <span class="number">10</span>,<span class="number">10</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="案例练习"><a href="#案例练习" class="headerlink" title="案例练习"></a>案例练习</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 案例：</span><br><span class="line"># <span class="number">1.</span> 查询年龄为<span class="number">20</span>，<span class="number">21</span>，<span class="number">22</span>，<span class="number">23</span>岁的女性员工信息</span><br><span class="line"><span class="keyword">select</span> name,age,gender <span class="keyword">from</span> emp <span class="keyword">where</span> age <span class="keyword">in</span> (<span class="number">20</span>,<span class="number">21</span>,<span class="number">22</span>,<span class="number">23</span>) <span class="operator">&amp;&amp;</span> gender<span class="operator">=</span><span class="string">&#x27;女&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> name, age <span class="keyword">from</span> emp <span class="keyword">where</span> age <span class="operator">=</span> <span class="number">20</span> <span class="keyword">or</span> age <span class="operator">=</span> <span class="number">21</span> <span class="operator">||</span> age <span class="operator">=</span> <span class="number">22</span> <span class="operator">||</span> age <span class="operator">=</span> <span class="number">23</span>;</span><br><span class="line"># <span class="number">2.</span> 查询性别为男，并且年龄在<span class="number">20</span><span class="number">-40</span>岁之间的三个字的员工</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp;</span><br><span class="line"><span class="keyword">select</span> name <span class="string">&#x27;姓名&#x27;</span>,age <span class="string">&#x27;年龄&#x27;</span>,gender <span class="string">&#x27;性别&#x27;</span> <span class="keyword">from</span> emp <span class="keyword">where</span> gender<span class="operator">=</span><span class="string">&#x27;男&#x27;</span> <span class="keyword">and</span> age <span class="keyword">between</span> <span class="number">14</span> <span class="keyword">and</span> <span class="number">40</span> <span class="keyword">and</span> name <span class="keyword">like</span> <span class="string">&#x27;___&#x27;</span> <span class="keyword">order</span> <span class="keyword">by</span> age;</span><br><span class="line"># <span class="number">3.</span> 统计员工表中，年龄小于<span class="number">60</span>岁的，男性员工和女性员工的人数</span><br><span class="line"><span class="keyword">select</span> gender, <span class="built_in">count</span>(gender) <span class="keyword">from</span> emp <span class="keyword">where</span> age<span class="operator">&lt;</span><span class="number">60</span> <span class="keyword">group</span> <span class="keyword">by</span> gender;</span><br><span class="line"># <span class="number">4.</span> 查询所有年龄小于等于<span class="number">35</span>岁员工的姓名和年龄，并对查询结构按年龄升序，如果年龄相同按照入职时间降序</span><br><span class="line"><span class="keyword">select</span> name,age, entrydate <span class="keyword">from</span> emp <span class="keyword">where</span> age<span class="operator">&lt;=</span><span class="number">35</span> <span class="keyword">order</span> <span class="keyword">by</span> age , entrydate <span class="keyword">desc</span>;</span><br><span class="line"># <span class="number">5.</span> 查询性别为男，且年龄在<span class="number">20</span><span class="number">-40</span>岁之间以内的前五个员工信息，对查询的结果按照年龄升序，年龄同入职时间降序</span><br><span class="line"><span class="keyword">select</span> name, gender, age, entrydate <span class="keyword">from</span> emp  <span class="keyword">where</span> gender<span class="operator">=</span><span class="string">&#x27;男&#x27;</span> <span class="keyword">and</span> age <span class="keyword">between</span> <span class="number">20</span> <span class="keyword">and</span> <span class="number">40</span> <span class="keyword">order</span> <span class="keyword">by</span> age, entrydate <span class="keyword">desc</span> limit <span class="number">0</span>,<span class="number">5</span>;</span><br></pre></td></tr></table></figure><h3 id="DQL的执行顺序"><a href="#DQL的执行顺序" class="headerlink" title="DQL的执行顺序"></a>DQL的执行顺序</h3><p><img src="C:\Users\84350\AppData\Roaming\Typora\typora-user-images\image-20220406184030493.png" alt="image-20220406184030493"></p><p><strong>注意：</strong></p><p>from &gt; where &gt; group by [having] &gt; select &gt; order by &gt; limit</p><h3 id="DCL"><a href="#DCL" class="headerlink" title="DCL"></a>DCL</h3><p><strong>数据控制语言</strong>：用来管理数据库的用户、控制数据库的访问权限</p><h4 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># DCL<span class="operator">-</span>管理用户</span><br><span class="line">#<span class="number">1.</span> 查询用户</span><br><span class="line">use mysql; # mysql的默认配置和其他的参数配置的基础数据库</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span>;</span><br><span class="line"></span><br><span class="line">#<span class="number">2.</span> 创建用户</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机名&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;密码&#x27;</span>； # 主机名为地址名，表示指定地址的用户可以连接</span><br><span class="line"></span><br><span class="line">#<span class="number">3.</span> 修改用户密码</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">user</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机名&#x27;</span> identified <span class="keyword">with</span> mysql_native_password <span class="keyword">by</span> <span class="string">&#x27;新密码&#x27;</span>;</span><br><span class="line"></span><br><span class="line">#<span class="number">4.</span>  删除用户</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">user</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机名&#x27;</span>;</span><br></pre></td></tr></table></figure><p><strong>案例</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># DCL ： 管理用户</span><br><span class="line">use mysql;</span><br><span class="line"># 查看当前用户</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span>;</span><br><span class="line"># 创建一个用户tom, 任何主机都能访问</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> <span class="string">&#x27;tom&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line"># 修改密码</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">user</span> <span class="string">&#x27;tom&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified <span class="keyword">with</span> mysql_native_password <span class="keyword">by</span> <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"># 删除用户</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">user</span> <span class="string">&#x27;tom&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br></pre></td></tr></table></figure><p><strong>注意：</strong></p><ul><li><code>&#39;用户名&#39;@&#39;%&#39;：表示所有主机地址的用户名都可以连接访问</code></li></ul><h4 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h4><p><strong>常见权限：</strong></p><table><thead><tr><th align="center">权限</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">ALL,ALL PRIVILEGES</td><td align="center">所有权限</td></tr><tr><td align="center">select</td><td align="center">查询数据</td></tr><tr><td align="center">delete</td><td align="center">删除数据</td></tr><tr><td align="center">update</td><td align="center">更新数据</td></tr><tr><td align="center">insert</td><td align="center">插入数据</td></tr><tr><td align="center">alter</td><td align="center">修改表</td></tr><tr><td align="center">drop</td><td align="center">修改数据库&#x2F;表&#x2F;视图</td></tr><tr><td align="center">create</td><td align="center">创建数据库&#x2F;表</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># <span class="number">1.</span> 查询权限</span><br><span class="line"><span class="keyword">show</span> grants <span class="keyword">for</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机名&#x27;</span>;</span><br><span class="line"></span><br><span class="line"># <span class="number">2.</span> 授予权限</span><br><span class="line"><span class="keyword">grant</span> 权限列表 <span class="keyword">on</span> 数据库.表名 <span class="keyword">to</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机名&#x27;</span>;</span><br><span class="line"># 注意：如果授予数据库下的所有表的权限，可以使用<span class="operator">*</span>号代表 <span class="operator">*</span>.<span class="operator">*</span> 表示所有数据库下的所有表</span><br><span class="line"></span><br><span class="line"># <span class="number">3.</span> 撤销权限</span><br><span class="line"><span class="keyword">revoke</span> 权限列表 <span class="keyword">on</span> 数据库.表名 <span class="keyword">from</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机名&#x27;</span>;</span><br></pre></td></tr></table></figure><p><strong>注意点：</strong></p><ol><li>多个权限之间，使用逗号分割</li><li>授权时，数据库名和表名可以使用<code>*</code>进行通配，代表所有</li></ol><p><strong>案例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 1. 查询权限</span><br><span class="line">show grants for &#x27;tom&#x27;@&#x27;%&#x27;</span><br><span class="line"># 显示USAGE，代表没有权限</span><br><span class="line"></span><br><span class="line"># 2. 给tom用户赋予数据库chales下的所有表的增加，删除，查询的权限</span><br><span class="line">grant delete,insert,select on chales.* to &#x27;tom&#x27;@&#x27;%&#x27;;</span><br><span class="line"></span><br><span class="line"># 3. 撤销tom用户的数据库chales下所有表的删除权限</span><br><span class="line">revoke delete on chales.* from &#x27;tom&#x27;@&#x27;%&#x27;;</span><br></pre></td></tr></table></figure><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><p>  <strong>函数：</strong>是指一段可以直接被另一段程序调用的代码或程序</p><p>  <strong>分类：</strong></p><ul><li>字符串函数</li><li>数值函数</li><li>日期函数</li><li>流程函数</li></ul><h4 id="字符串函数"><a href="#字符串函数" class="headerlink" title="字符串函数"></a>字符串函数</h4><table><thead><tr><th align="center">函数</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">concat(s1,s2,…,sn)</td><td align="center">字符串拼接，将s1,s2,…,sn拼接成一个字符串</td></tr><tr><td align="center">lower(str)</td><td align="center">将字符串str全部转为小写</td></tr><tr><td align="center">upper(str)</td><td align="center">将字符串str全部转为大写</td></tr><tr><td align="center">lpad(str,n,pad)</td><td align="center">左填充，将字符串pad对str的左边进行填充，填充后长度为n</td></tr><tr><td align="center">rpad(str,n,pad)</td><td align="center">右填充，将字符串pad对str的左边进行填充，填充后长度为n</td></tr><tr><td align="center">trim(str)</td><td align="center">去掉字符串头部和尾部的空格</td></tr><tr><td align="center">substring(str,start,len)</td><td align="center">返回字符串str从start开始的len长度的字符串(注意：start索引从1开始)</td></tr></tbody></table><p><strong>用法</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># 函数</span><br><span class="line"><span class="comment">-- 字符串函数</span></span><br><span class="line"><span class="comment">-- concat</span></span><br><span class="line"><span class="keyword">select</span> concat(<span class="string">&#x27;Hello&#x27;</span>,<span class="string">&#x27; MySQL&#x27;</span>);</span><br><span class="line"><span class="comment">-- lower</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">lower</span>(<span class="string">&#x27;Hello&#x27;</span>);</span><br><span class="line"><span class="comment">-- upper</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">upper</span>(<span class="string">&#x27;Hello&#x27;</span>);</span><br><span class="line"><span class="comment">-- lpad</span></span><br><span class="line"><span class="keyword">select</span> lpad(<span class="string">&#x27;01&#x27;</span>, <span class="number">5</span>, <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line"><span class="comment">-- rpad</span></span><br><span class="line"><span class="keyword">select</span> rpad(<span class="string">&#x27;01&#x27;</span>, <span class="number">5</span>, <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line"><span class="comment">-- trim</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">trim</span>(<span class="string">&#x27; Hello  Mysql &#x27;</span>);</span><br><span class="line"><span class="comment">-- substring</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">substring</span>(<span class="string">&#x27;Hello MySQL&#x27;</span>, <span class="number">1</span>, <span class="number">5</span>);</span><br></pre></td></tr></table></figure><p><strong>案例</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 企业员工的工号，统一为<span class="number">5</span>位数，不足<span class="number">5</span>位数的全部在前面补<span class="number">0</span>。比如：<span class="number">1</span>号员工的工号应该为<span class="number">00001</span></span><br><span class="line"><span class="keyword">select</span> name, lpad(workno, <span class="number">5</span> ,<span class="string">&#x27;0&#x27;</span>) <span class="keyword">from</span> emp;</span><br></pre></td></tr></table></figure><h4 id="数值函数"><a href="#数值函数" class="headerlink" title="数值函数"></a>数值函数</h4><table><thead><tr><th align="center">函数</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">ceil(x)</td><td align="center">向上取整</td></tr><tr><td align="center">floor(x)</td><td align="center">向下取整</td></tr><tr><td align="center">mod(x,y)</td><td align="center">返回x&#x2F;y的模</td></tr><tr><td align="center">rand()</td><td align="center">返回0~1内的随机数</td></tr><tr><td align="center">round(x,y)</td><td align="center">求参数x的四舍五入值，保留y位小数</td></tr></tbody></table><p><strong>使用：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 数值函数</span></span><br><span class="line"><span class="comment">-- ceil</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">ceil</span>(<span class="number">1.1</span>); # 向上取整，只要小数有值，就向上取整</span><br><span class="line"><span class="comment">-- floor</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">floor</span>(<span class="number">1.9</span>); # 向下取整，不管小数位，直接要整数位</span><br><span class="line"><span class="comment">-- mod</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">mod</span>(<span class="number">4</span>,<span class="number">6</span>);</span><br><span class="line"><span class="comment">-- rand</span></span><br><span class="line"><span class="keyword">select</span> rand(); # <span class="number">0</span><span class="operator">~</span><span class="number">1</span>的范围内取值</span><br><span class="line"><span class="comment">-- round</span></span><br><span class="line"><span class="keyword">select</span> round(<span class="number">7.3355</span>, <span class="number">2</span>); # 四舍五入</span><br></pre></td></tr></table></figure><p><strong>案例：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 案例：通过数据库的函数，生成一个六位数的随机验证码</span><br><span class="line"><span class="keyword">select</span> lpad(round(rand()<span class="operator">*</span><span class="number">1000000</span>, <span class="number">0</span>),<span class="number">6</span>,<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line"><span class="comment">-- 中间涉及了数值向字符串之间的转换</span></span><br><span class="line"><span class="comment">-- round生成0-1之间的随机数，*1000000 将其扩展成5-6位整数</span></span><br><span class="line"><span class="comment">-- 可能生成的位数不满足6位，原因是：0.01之类的数</span></span><br><span class="line"><span class="comment">-- lpad就是为了满足整个要求</span></span><br></pre></td></tr></table></figure><h4 id="日期函数"><a href="#日期函数" class="headerlink" title="日期函数"></a>日期函数</h4><table><thead><tr><th align="center">函数</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">curdate()</td><td align="center">返回当前日期</td></tr><tr><td align="center">curtime()</td><td align="center">返回当前时间</td></tr><tr><td align="center">now()</td><td align="center">返回当前时间和日期</td></tr><tr><td align="center">year(date)</td><td align="center">获取指定date的年份</td></tr><tr><td align="center">month(date)</td><td align="center">获取指定date的月份</td></tr><tr><td align="center">day(date)</td><td align="center">获取指定date的日期</td></tr><tr><td align="center">date_add(date, Interval expr type)</td><td align="center">返回一个日期&#x2F;时间值加上一个时间间隔expr后的时间值</td></tr><tr><td align="center">datediff(date1,date2)</td><td align="center">返回date1到date2之间的天数。一般date1的日期晚于date2否则会出现负数</td></tr></tbody></table><p><strong>使用：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 日期函数</span></span><br><span class="line"><span class="comment">-- curdate()</span></span><br><span class="line"><span class="keyword">select</span> curdate();</span><br><span class="line"><span class="comment">-- curtime()</span></span><br><span class="line"><span class="keyword">select</span> curtime();</span><br><span class="line"><span class="comment">-- now()</span></span><br><span class="line"><span class="keyword">select</span> now();</span><br><span class="line"><span class="comment">-- year</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">year</span>(now());</span><br><span class="line"><span class="comment">-- month</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">month</span>(now());</span><br><span class="line"><span class="comment">-- day</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">day</span>(now());</span><br><span class="line"><span class="comment">-- date_add</span></span><br><span class="line"><span class="keyword">select</span> date_add(now(),<span class="type">interval</span> <span class="number">70</span> <span class="keyword">year</span>);</span><br><span class="line"><span class="comment">-- datediff</span></span><br><span class="line"><span class="keyword">select</span> datediff(<span class="string">&#x27;2022-10-11&#x27;</span>,<span class="string">&#x27;2021-10-11&#x27;</span>);</span><br></pre></td></tr></table></figure><p><strong>案例：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询所有员工的入职天数，并根据入职天数倒序排序</span></span><br><span class="line"><span class="keyword">select</span> name,datediff(now(),entrydate) <span class="keyword">as</span> <span class="string">&#x27;入职天数&#x27;</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> 入职天数 <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure><h4 id="流程函数"><a href="#流程函数" class="headerlink" title="流程函数"></a>流程函数</h4><table><thead><tr><th align="center">函数</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">if(value,t,f)</td><td align="center">如果value为true，返回t,否则返回f</td></tr><tr><td align="center">ifnull(value1,value2)</td><td align="center">如果value1不为空，返回value1，否则返回value2</td></tr><tr><td align="center">case when [val1] then [res] .. else [default] end</td><td align="center">如果val1为true返回res1，..否则返回default默认值</td></tr><tr><td align="center">case [expr] when [val1] then [res1]… else [default] end</td><td align="center">如果expr的值等于val1，返回res1，..否则返回default的值</td></tr></tbody></table><p><strong>使用：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 流程函数</span></span><br><span class="line"><span class="comment">-- if</span></span><br><span class="line"><span class="keyword">select</span> if(<span class="literal">true</span>,<span class="string">&#x27;OK&#x27;</span>,<span class="string">&#x27;ERROR&#x27;</span>); <span class="comment">-- 返回ok</span></span><br><span class="line"><span class="keyword">select</span> if(<span class="literal">false</span>,<span class="string">&#x27;OK&#x27;</span>,<span class="string">&#x27;ERROR&#x27;</span>); <span class="comment">-- 返回error</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- ifnull</span></span><br><span class="line"><span class="keyword">select</span> ifnull(<span class="string">&#x27;ok&#x27;</span>,<span class="string">&#x27;error&#x27;</span>); <span class="comment">-- 返回ok</span></span><br><span class="line"><span class="keyword">select</span> ifnull(<span class="keyword">null</span>,<span class="keyword">null</span>); <span class="comment">-- 返回null</span></span><br><span class="line"><span class="keyword">select</span> ifnull(<span class="keyword">null</span>,<span class="string">&#x27;error&#x27;</span>); <span class="comment">-- 返回 error</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- case when</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">case</span> <span class="keyword">when</span> <span class="number">10</span><span class="operator">&gt;</span><span class="number">5</span> <span class="keyword">then</span> <span class="string">&#x27;优秀&#x27;</span> <span class="keyword">else</span> <span class="string">&#x27;不及格&#x27;</span> <span class="keyword">end</span>;</span><br><span class="line"><span class="comment">-- case expr when</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">case</span> <span class="string">&#x27;开发&#x27;</span> <span class="keyword">when</span> <span class="string">&#x27;测试&#x27;</span> <span class="keyword">then</span> <span class="string">&#x27;成功&#x27;</span> <span class="keyword">when</span> <span class="string">&#x27;开发&#x27;</span> <span class="keyword">then</span> <span class="string">&#x27;失败&#x27;</span> <span class="keyword">else</span> <span class="string">&#x27;重新输入&#x27;</span> <span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><p><strong>案例：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 需求<span class="number">1</span>：查询emp员工姓名和工作地址(北京<span class="operator">/</span>上海<span class="comment">---》国内，美国和其他---》国外)</span></span><br><span class="line"><span class="keyword">select</span></span><br><span class="line">       name,</span><br><span class="line">       <span class="keyword">case</span> workaddress <span class="keyword">when</span> <span class="string">&#x27;北京&#x27;</span> <span class="keyword">then</span> <span class="string">&#x27;国内&#x27;</span> <span class="keyword">when</span> <span class="string">&#x27;河北&#x27;</span> <span class="keyword">then</span> <span class="string">&#x27;国内&#x27;</span> <span class="keyword">when</span> <span class="string">&#x27;上海&#x27;</span> <span class="keyword">then</span> <span class="string">&#x27;国内&#x27;</span> <span class="keyword">else</span> <span class="string">&#x27;国外&#x27;</span> <span class="keyword">end</span></span><br><span class="line"><span class="keyword">from</span> emp;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># 需求<span class="number">2</span>：统计班级各个学员的成绩，展示规则如下：</span><br><span class="line"><span class="comment">-- &gt;=85 优秀</span></span><br><span class="line"><span class="comment">-- &gt;=60 及格</span></span><br><span class="line"><span class="comment">-- 否则，不及格</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 建表语句和插入数据</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> score</span><br><span class="line">(</span><br><span class="line">    id      <span class="type">int</span> comment <span class="string">&#x27;学号&#x27;</span>,</span><br><span class="line">    name    <span class="type">varchar</span>(<span class="number">10</span>) comment <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">    english tinyint unsigned comment <span class="string">&#x27;英语成绩&#x27;</span>,</span><br><span class="line">    math    tinyint unsigned comment <span class="string">&#x27;数学成绩&#x27;</span>,</span><br><span class="line">    chinese tinyint unsigned comment <span class="string">&#x27;语文成绩&#x27;</span></span><br><span class="line">) comment <span class="string">&#x27;成绩表&#x27;</span>;</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> score <span class="keyword">values</span> (<span class="number">1</span>, <span class="string">&#x27;张三&#x27;</span>,<span class="number">55</span>,<span class="number">75</span>,<span class="number">86</span>),(<span class="number">2</span>, <span class="string">&#x27;李斯&#x27;</span>,<span class="number">88</span>,<span class="number">90</span>,<span class="number">97</span>),(<span class="number">3</span>, <span class="string">&#x27;王五&#x27;</span>,<span class="number">77</span>,<span class="number">23</span>,<span class="number">80</span>),(<span class="number">4</span>, <span class="string">&#x27;赵飞&#x27;</span>,<span class="number">99</span>,<span class="number">99</span>,<span class="number">99</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 实现要求</span></span><br><span class="line"><span class="keyword">select</span></span><br><span class="line">       name,</span><br><span class="line">       <span class="keyword">case</span> <span class="keyword">when</span> math<span class="operator">&gt;=</span><span class="number">85</span> <span class="keyword">then</span> <span class="string">&#x27;优秀&#x27;</span> <span class="keyword">when</span> math<span class="operator">&gt;=</span><span class="number">60</span> <span class="keyword">then</span> <span class="string">&#x27;及格&#x27;</span> <span class="keyword">else</span> <span class="string">&#x27;不及格&#x27;</span> <span class="keyword">end</span> <span class="keyword">as</span> <span class="string">&#x27;数学成绩&#x27;</span>,</span><br><span class="line">       <span class="keyword">case</span> <span class="keyword">when</span> english<span class="operator">&gt;=</span><span class="number">85</span> <span class="keyword">then</span> <span class="string">&#x27;优秀&#x27;</span> <span class="keyword">when</span> english<span class="operator">&gt;=</span><span class="number">60</span> <span class="keyword">then</span> <span class="string">&#x27;及格&#x27;</span> <span class="keyword">else</span> <span class="string">&#x27;不及格&#x27;</span> <span class="keyword">end</span> <span class="keyword">as</span> <span class="string">&#x27;英语成绩&#x27;</span>,</span><br><span class="line">       <span class="keyword">case</span> <span class="keyword">when</span> chinese<span class="operator">&gt;=</span><span class="number">85</span> <span class="keyword">then</span> <span class="string">&#x27;优秀&#x27;</span> <span class="keyword">when</span> chinese<span class="operator">&gt;=</span><span class="number">60</span> <span class="keyword">then</span> <span class="string">&#x27;及格&#x27;</span> <span class="keyword">else</span> <span class="string">&#x27;不及格&#x27;</span> <span class="keyword">end</span> <span class="keyword">as</span> <span class="string">&#x27;语文成绩&#x27;</span></span><br><span class="line"><span class="keyword">from</span> score;</span><br></pre></td></tr></table></figure><h2 id="约束"><a href="#约束" class="headerlink" title="约束"></a>约束</h2><h4 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h4><ol><li><p>概念：约束是作用于表中字段上的规则，用于限制存储在表中的数据</p></li><li><p>目的：保证数据库中数据的正确、有效性和完整性</p></li><li><p>分类</p><table><thead><tr><th align="center">约束</th><th align="center">描述</th><th align="center">关键字</th></tr></thead><tbody><tr><td align="center">非空约束</td><td align="center">限制该字段不能为null</td><td align="center">NOT NULL</td></tr><tr><td align="center">唯一约束</td><td align="center">限制字段内的所有数据都是唯一的，不重复</td><td align="center">UNIQUE</td></tr><tr><td align="center">主键约束</td><td align="center">主键是一行数据的唯一标识，要求非空且唯一</td><td align="center">primary key</td></tr><tr><td align="center">默认约束</td><td align="center">保存数据时，如果未指定该字段的值，则采用默认值</td><td align="center">default</td></tr><tr><td align="center">检查约束(8.0以后)</td><td align="center">保证字段值满足某一条件</td><td align="center">check</td></tr><tr><td align="center">外键约束</td><td align="center">用来让两张表数据之间建立连接，保证数据的一致性和完整性</td><td align="center">foreign key</td></tr></tbody></table></li></ol><h4 id="约束演示"><a href="#约束演示" class="headerlink" title="约束演示"></a>约束演示</h4><p>  <img src="C:\Users\84350\AppData\Roaming\Typora\typora-user-images\image-20220407160241441.png" alt="image-20220407160241441"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 约束的使用演示</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">user</span>(</span><br><span class="line">    id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment comment <span class="string">&#x27;主键&#x27;</span>,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">10</span>) <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">unique</span> comment <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">    age tinyint unsigned <span class="keyword">check</span> ( age<span class="operator">&gt;</span><span class="number">0</span> <span class="keyword">and</span> age<span class="operator">&lt;=</span><span class="number">120</span> ) comment <span class="string">&#x27;年龄&#x27;</span>,</span><br><span class="line">    status <span class="type">char</span>(<span class="number">1</span>) <span class="keyword">default</span> <span class="string">&#x27;1&#x27;</span> comment <span class="string">&#x27;状态&#x27;</span>,</span><br><span class="line">    gender <span class="type">char</span>(<span class="number">1</span>) comment <span class="string">&#x27;性别&#x27;</span></span><br><span class="line">)comment <span class="string">&#x27;用户表&#x27;</span>;</span><br><span class="line"><span class="comment">-- 插入数据</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">user</span>(name,age,status,gender) <span class="keyword">values</span> (<span class="string">&#x27;zhangsan&#x27;</span>,<span class="number">120</span>,<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">user</span>(name,age,gender) <span class="keyword">values</span> (<span class="string">&#x27;李斯&#x27;</span>,<span class="number">55</span>,<span class="string">&#x27;女&#x27;</span>);</span><br></pre></td></tr></table></figure><h4 id="外键约束"><a href="#外键约束" class="headerlink" title="外键约束"></a>外键约束</h4><p><strong>概念：</strong>外键用来让两张表的数据之间建立连接，从而保证数据的一致性和完整性</p><p><img src="C:\Users\84350\AppData\Roaming\Typora\typora-user-images\image-20220407161042671.png" alt="image-20220407161042671"></p><p><strong>注意：</strong></p><ul><li>有外键的表称为子表，也称为从表</li><li>外键所对应的主键表称为父表，也称为主表</li></ul><p><strong>语法：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 添加外键，创建表时</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line">字段 数据类型,</span><br><span class="line">    ...</span><br><span class="line">    [<span class="keyword">constraint</span>] [外键名称] <span class="keyword">foreign</span> key (外键字段名) <span class="keyword">references</span> 主表(主表列名)</span><br><span class="line">)</span><br><span class="line"># 添加外键，创建完成表之后</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> <span class="keyword">constraint</span> 外键名称 <span class="keyword">foreign</span> key （外键字段名） <span class="keyword">references</span> 主表(主表列名)</span><br><span class="line"></span><br><span class="line"># 删除外键</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> <span class="keyword">foreign</span> key 外键名称;</span><br></pre></td></tr></table></figure><p><strong>案例</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 外键约束的使用</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> dept(</span><br><span class="line">    id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">10</span>) <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line">)comment <span class="string">&#x27;部门表&#x27;</span>;</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> dept(name) <span class="keyword">values</span> (<span class="string">&#x27;研发部&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> dept(name) <span class="keyword">values</span> (<span class="string">&#x27;市场部&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> dept(name) <span class="keyword">values</span> (<span class="string">&#x27;财务部&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> dept(name) <span class="keyword">values</span> (<span class="string">&#x27;销售部&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> dept(name) <span class="keyword">values</span> (<span class="string">&#x27;总经办&#x27;</span>);</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">add</span> <span class="keyword">column</span> dept_id <span class="type">int</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp;</span><br><span class="line"><span class="keyword">update</span> emp <span class="keyword">set</span> dept_id <span class="operator">=</span> <span class="number">1</span> <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">update</span> emp <span class="keyword">set</span> dept_id <span class="operator">=</span> <span class="number">2</span> <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line"><span class="keyword">update</span> emp <span class="keyword">set</span> dept_id <span class="operator">=</span> <span class="number">3</span> <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line"><span class="keyword">update</span> emp <span class="keyword">set</span> dept_id <span class="operator">=</span> <span class="number">4</span> <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">4</span>;</span><br><span class="line"><span class="keyword">update</span> emp <span class="keyword">set</span> dept_id <span class="operator">=</span> <span class="number">1</span> <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line"><span class="keyword">update</span> emp <span class="keyword">set</span> dept_id <span class="operator">=</span> <span class="number">1</span> <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">6</span>;</span><br><span class="line"><span class="keyword">update</span> emp <span class="keyword">set</span> dept_id <span class="operator">=</span> <span class="number">1</span> <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">7</span>;</span><br><span class="line"><span class="keyword">update</span> emp <span class="keyword">set</span> dept_id <span class="operator">=</span> <span class="number">1</span> <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">8</span>;</span><br><span class="line"><span class="keyword">update</span> emp <span class="keyword">set</span> dept_id <span class="operator">=</span> <span class="number">2</span> <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">9</span>;</span><br><span class="line"><span class="keyword">update</span> emp <span class="keyword">set</span> dept_id <span class="operator">=</span> <span class="number">3</span> <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="keyword">update</span> emp <span class="keyword">set</span> dept_id <span class="operator">=</span> <span class="number">2</span> <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">11</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 设置外键</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">add</span> <span class="keyword">constraint</span> emp_dept_foreign_key <span class="keyword">foreign</span> key emp(dept_id) <span class="keyword">references</span> dept(id);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除外键</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">drop</span> <span class="keyword">foreign</span> key emp_dept_foreign_key;</span><br></pre></td></tr></table></figure><p><strong>设置外键约束规则</strong></p><p><code>删除/更新行为</code></p><table><thead><tr><th align="center">行为</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">NO ACTION</td><td align="center">当父表中删除&#x2F;更新对应记录时，首先检查该记录是否有对应外键，如果有则不允许删除&#x2F;更新(与RESTRICT一致)</td></tr><tr><td align="center">RESTRICT</td><td align="center">当父表中删除&#x2F;更新对应记录时，首先检查该记录是否有对应外键，如果有则不允许删除&#x2F;更新(与NO ACTION一致)</td></tr><tr><td align="center">CASCADE</td><td align="center">当父表中删除&#x2F;更新对应记录时，首先检查该记录是否有对应外键，如果有，则也删除&#x2F;更新外键在子表中的记录</td></tr><tr><td align="center">SET NULL</td><td align="center">当父表中删除&#x2F;更新对应记录时，首先检查该记录是否有对应外键，如果有，则设置子表中该外键值为null（这就要求该外键允许取值为null）</td></tr><tr><td align="center">SET DEFAULT</td><td align="center">父表有变更时，子表将外键列设置成一个默认的值(innodb不支持)</td></tr></tbody></table><p><strong>语法</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> <span class="keyword">constraint</span> 外键名称 <span class="keyword">foreign</span> key 外键字段 <span class="keyword">references</span> 主表名(主表字段) <span class="keyword">on</span> <span class="keyword">update</span> cascade <span class="keyword">on</span> <span class="keyword">delete</span> cascade;</span><br></pre></td></tr></table></figure><p><strong>使用</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 设置外键，并将更新设置为cascade 删除设置为<span class="keyword">set</span> <span class="keyword">null</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">add</span> <span class="keyword">constraint</span> emp_dept_foreign_key <span class="keyword">foreign</span> key emp(dept_id) <span class="keyword">references</span> dept(id) <span class="keyword">on</span> <span class="keyword">update</span> cascade <span class="keyword">on</span> <span class="keyword">delete</span> <span class="keyword">set</span> <span class="keyword">null</span>;</span><br></pre></td></tr></table></figure><h2 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h2><p>目录：</p><ul><li>多表关系</li><li>多表查询概述</li><li>内连接</li><li>外连接</li><li>子连接</li><li>子查询</li><li>多表查询案例</li></ul><h4 id="多表关系"><a href="#多表关系" class="headerlink" title="多表关系"></a>多表关系</h4><p><strong>概述：</strong>项目开发中，再进行数据表结构设计时，会根据业务需求及业务模块之间的关系，分析并设计表结构，由于业务之间相互关联，所以各个表结构之间也存在着各种联系，基本分为三种：</p><ul><li>一对多(多对一)<ul><li>员工和部门的关系。一个员工对应多个部门</li></ul></li><li>多对多<ul><li>学生和课程关系：一个学生可以选择多个课程，一个课程可以被多个学生选择。</li></ul></li><li>一对一<ul><li>学生和学生详情信息：学生有基本信息，但是如果查询列太多就会查询不方便，所以将信息分割成基础信息和详情信息。</li></ul></li></ul><p><strong>案例：</strong></p><ol><li><p>一对多(多对一)</p><ul><li>案例：部门与员工的关系</li><li>关系：一个部门对应多个员工，一个员工对应多个部门</li><li>实现：在多的一方建立外键，指向一的一方的外键</li></ul><p><img src="C:\Users\84350\Desktop\image-20220411095334891.png" alt="image-20220411095334891"></p></li><li><p>多对多</p><ul><li><p>案例：学生与课程的关系</p></li><li><p>关系：一个学生可以选修多门课程，一门课程也可以供多个学生选择</p></li><li><p>实现：建立第三张中间表，中间表至少包含两个外键，分别关联两方主键</p></li></ul><p><img src="C:\Users\84350\AppData\Roaming\Typora\typora-user-images\image-20220411095623612.png" alt="image-20220411095623612"></p></li><li><p>一对一</p><ul><li>案例：用户与用户详情的关系</li><li>关系：一对一关系，多用于单表拆分，将一张表的基础字段放在一张表中，其他详情字段放在另一张表中，以提高操作效率</li><li>实现：在任意一方加入外键，关联另外一方的主键，并设置外键为唯一的(UNIQUE)</li></ul><p><img src="C:\Users\84350\Desktop\image-20220411102048027.png" alt="image-20220411102048027"></p></li></ol><h4 id="多表查询概述"><a href="#多表查询概述" class="headerlink" title="多表查询概述"></a>多表查询概述</h4><ul><li><p>概述：指从多张表中查询数据</p></li><li><p>笛卡尔积：笛卡尔积是指在数学中，两个集合A集合和B集合所有组合的情况。</p></li><li><p>目标：多表查询时，需要消除无效的笛卡尔积</p><p><img src="C:\Users\84350\AppData\Roaming\Typora\typora-user-images\image-20220411163909120.png" alt="image-20220411163909120"></p></li><li><p>多表查询的分别</p><ol><li><p>连接查询</p><ul><li>内连接：相当于查询A、B交集部分数据</li><li>外连接：<ul><li>左外连接：查询左表所有数据，以及两张表交集部分数据</li><li>右外连接：查询右表所有数据，以及两张表交集部分数据</li></ul></li><li>自连接：当前表与自身的连接查询，自连接必须使用表别名</li></ul></li><li><p>子查询</p><p><img src="C:\Users\84350\AppData\Roaming\Typora\typora-user-images\image-20220411164249203.png" alt="image-20220411164249203"></p></li></ol></li></ul><h4 id="内连接"><a href="#内连接" class="headerlink" title="内连接"></a>内连接</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 隐式内连接</span></span><br><span class="line"><span class="keyword">select</span> 字段列表 <span class="keyword">from</span> 表<span class="number">1</span>，表<span class="number">2</span> <span class="keyword">where</span> 条件;</span><br><span class="line"><span class="comment">-- 显示内连接</span></span><br><span class="line"><span class="keyword">select</span> 字段列表 <span class="keyword">from</span> 表<span class="number">1</span> <span class="keyword">join</span> 表<span class="number">2</span> <span class="keyword">on</span> 连接条件; </span><br></pre></td></tr></table></figure><p><strong>内连接就是查询两张表交集的部分：AB的交集</strong></p><p><strong>案例：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 内连接演示</span></span><br><span class="line"><span class="comment">-- 1. 查询每一个员工的姓名，以及关联的部门名称（隐式）</span></span><br><span class="line"><span class="keyword">select</span> emp.name, dept.name <span class="keyword">from</span> emp,dept <span class="keyword">where</span> emp.dept_id <span class="operator">=</span> dept.id;</span><br><span class="line"><span class="comment">-- 2. 查询每一个员工的姓名，以及关联的部门名称（显示）</span></span><br><span class="line"><span class="keyword">select</span> emp.name, dept.name <span class="keyword">from</span> emp <span class="keyword">join</span> dept <span class="keyword">on</span> emp.dept_id <span class="operator">=</span> dept.id;</span><br></pre></td></tr></table></figure><h4 id="外连接"><a href="#外连接" class="headerlink" title="外连接"></a>外连接</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 左外连接：相当于查询表1(左表)的所有数据包含表1和表2的交集部分的数据</span></span><br><span class="line"><span class="keyword">select</span> 字段列表 <span class="keyword">from</span> 表<span class="number">1</span> <span class="keyword">left</span>[<span class="keyword">outer</span>] <span class="keyword">join</span> 表<span class="number">2</span> <span class="keyword">on</span> 条件...;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 右外连接：相当于查询表2(右表)的所有数据包含表1和表2的交集部分的数据</span></span><br><span class="line"><span class="keyword">select</span> 字段列表 <span class="keyword">from</span> 表<span class="number">1</span> <span class="keyword">right</span> [<span class="keyword">outer</span>] <span class="keyword">join</span> 表<span class="number">2</span> <span class="keyword">on</span> 条件...;</span><br></pre></td></tr></table></figure><p><strong>案例：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1. 查询emp的所有数据，和对应的部门信息(左外连接)</span></span><br><span class="line"><span class="keyword">select</span> emp.<span class="operator">*</span>, dept.name <span class="keyword">from</span> emp <span class="keyword">left</span> <span class="keyword">join</span> dept <span class="keyword">on</span> emp.dept_id <span class="operator">=</span> dept.id;</span><br><span class="line"><span class="comment">-- 2. 查询emp的所有数据，和对应的部门信息(右外连接)</span></span><br><span class="line"><span class="keyword">select</span> emp.<span class="operator">*</span>, dept.name <span class="keyword">from</span> emp <span class="keyword">right</span> <span class="keyword">join</span> dept <span class="keyword">on</span> emp.dept_id <span class="operator">=</span> dept.id;</span><br><span class="line"><span class="comment">-- 3. 查询emp的所有数据，和对应的部门信息(右连接换为左连接)</span></span><br><span class="line"><span class="keyword">select</span> emp.<span class="operator">*</span>, dept.name <span class="keyword">from</span> dept <span class="keyword">left</span> <span class="keyword">join</span> emp <span class="keyword">on</span> dept.id <span class="operator">=</span> emp.dept_id;</span><br></pre></td></tr></table></figure><p><strong>注意点：</strong></p><ol><li>左外连接和右外连接没有什么区别，一般使用左外连接，转换成右外连接只需将表1换为表2即可；</li><li>左外注意是左表的全部：含有左表中没有对应右表的数据</li><li>右外注意是右表的全部：同理</li></ol><h4 id="自连接"><a href="#自连接" class="headerlink" title="自连接"></a>自连接</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">-</span> 自连接查询，可以是内连接查询，可以是外连接查询</span><br><span class="line"><span class="keyword">select</span> 字段列表 <span class="keyword">from</span> 表<span class="number">1</span> 别名A <span class="keyword">join</span> 表<span class="number">1</span> 别名B <span class="keyword">on</span> 条件...;</span><br><span class="line"><span class="comment">-- 注意： 必须取别名</span></span><br></pre></td></tr></table></figure><p><strong>案例：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1. 查询员工以及所属领导的名称 &lt;内连接，两种写法，隐式/显式&gt;</span></span><br><span class="line"><span class="keyword">select</span> emp.name <span class="string">&#x27;员工名称&#x27;</span>, leader.name <span class="string">&#x27;领导名称&#x27;</span> <span class="keyword">from</span> employee emp <span class="keyword">join</span> employee leader <span class="keyword">on</span> emp.leaderid <span class="operator">=</span> leader.id <span class="keyword">order</span> <span class="keyword">by</span> 领导名称 <span class="keyword">desc</span>;</span><br><span class="line"><span class="keyword">select</span> emp.name <span class="string">&#x27;员工名称&#x27;</span>, leader.name <span class="string">&#x27;领导名称&#x27;</span> <span class="keyword">from</span> employee emp, employee leader <span class="keyword">where</span> emp.leaderid <span class="operator">=</span> leader.id <span class="keyword">order</span> <span class="keyword">by</span> 领导名称 <span class="keyword">desc</span>;</span><br><span class="line"><span class="comment">-- 2. 查询所有员工emp及其领导名字emp ，如果员工没有领导也要查询出来</span></span><br><span class="line"><span class="keyword">select</span> emp.name <span class="string">&#x27;员工名称&#x27;</span>, leader.name <span class="string">&#x27;领导名称&#x27;</span> <span class="keyword">from</span> employee emp <span class="keyword">left</span> <span class="keyword">join</span> employee leader <span class="keyword">on</span> emp.leaderid <span class="operator">=</span> leader.id <span class="keyword">order</span> <span class="keyword">by</span> 领导名称 <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure><h4 id="联合查询"><a href="#联合查询" class="headerlink" title="联合查询"></a>联合查询</h4><p><strong>对于union&#x2F;union all查询，就是把多次查询的结果合并起来，形成一个新的查询结果集</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 字段列表 <span class="keyword">from</span> 表A </span><br><span class="line"><span class="keyword">union</span> [<span class="keyword">all</span>]</span><br><span class="line"><span class="keyword">select</span> 字段列表 <span class="keyword">from</span> 表B；</span><br></pre></td></tr></table></figure><p><strong>案例：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1. 查询薪资6000.0的员工(不含6000.0)，且年龄大于50岁的员工</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> salary<span class="operator">&lt;</span><span class="number">6000.0</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> age <span class="operator">&gt;</span> <span class="number">50</span>;</span><br></pre></td></tr></table></figure><p><strong>注意：</strong></p><ul><li>union&#x2F;union all是将<strong>两个查询的结果用<code>逻辑或</code>聚合起来</strong></li><li>union会将结果去重，union all 不会将去重</li></ul><h4 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h4><ul><li><p>概念：SQL语句中嵌套select语句，称为<strong>嵌套查询</strong>，<strong>又称子查询</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t1 <span class="keyword">where</span> <span class="keyword">column</span> <span class="operator">=</span> (<span class="keyword">select</span> column1 <span class="keyword">from</span> t2)</span><br></pre></td></tr></table></figure><p><strong>子查询外部的语句可以是增删查改的任何一个</strong></p></li><li><p>根据子查询的结果不同，分为：</p><ul><li>标量子查询(子查询结果为单个值)</li><li>列子查询(子查询结果为一列)</li><li>行子查询(子查询结果为一行)</li><li>表子查询(子查询的结果为多行多列)</li></ul></li><li><p>根据子查询位置，分为where之后、from之后、select之后</p></li></ul><h5 id="标量子查询"><a href="#标量子查询" class="headerlink" title="标量子查询"></a>标量子查询</h5><p><strong>概念：</strong>子查询返回的结果是单个值(数字，字符串，日期等)，最简单的形式，这种子查询称为标量子查询</p><p><strong>常用操作符：</strong>&#x3D;、&lt;&gt;、&gt;、&gt;&#x3D;、&lt;、&lt;&#x3D;</p><p><strong>注意：</strong>两个SQL语句，被嵌套的那个SQL语句要放到<code>()</code>内</p><p><strong>案例：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1. 查询“研发部”的所有员工信息</span></span><br><span class="line"><span class="comment">-- 1.1 查询研发部的id</span></span><br><span class="line"><span class="keyword">select</span> id <span class="keyword">from</span> dept <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;研发部&#x27;</span>;</span><br><span class="line"><span class="comment">-- 1.2 查询根据id查询所有的员工信息</span></span><br><span class="line"><span class="keyword">select</span> name <span class="keyword">from</span> emp <span class="keyword">where</span> dept_id <span class="operator">=</span> (<span class="keyword">select</span> id <span class="keyword">from</span> dept <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;研发部&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2. 查询在“赵敏”入职之后的员工信息</span></span><br><span class="line"><span class="comment">-- 2.1 查询赵敏的入职日期</span></span><br><span class="line"><span class="keyword">select</span> entrydate <span class="keyword">from</span> emp <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;赵敏&#x27;</span>;</span><br><span class="line"><span class="comment">-- 2.2 查询赵敏入职日期之后的员工信息</span></span><br><span class="line"><span class="keyword">select</span> name, entrydate <span class="keyword">from</span> emp <span class="keyword">where</span> entrydate<span class="operator">&gt;</span> (<span class="keyword">select</span> entrydate <span class="keyword">from</span> emp <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;赵敏&#x27;</span>) <span class="keyword">order</span> <span class="keyword">by</span> entrydate;</span><br></pre></td></tr></table></figure><h5 id="列子查询"><a href="#列子查询" class="headerlink" title="列子查询"></a>列子查询</h5><p><strong>概念：</strong>子查询返回的结果是一列(或者说是多行)，这种子查询称为列子查询</p><p><strong>操作符：</strong>IN、NOT IN、ANY、SOME、ALL</p><table><thead><tr><th align="center">操作符</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">IN</td><td align="center">在指定的集合范围之内，多选一</td></tr><tr><td align="center">NOT IN</td><td align="center">不在指定的集合范围之内</td></tr><tr><td align="center">ANY</td><td align="center">子查询返回列表中，有任意一个满足即可</td></tr><tr><td align="center">SOME</td><td align="center">与ANY等同，使用SOME的地方都可以使用ANY</td></tr><tr><td align="center">ALL</td><td align="center">子查询返回列表的所有值都必须满足</td></tr></tbody></table><p><strong>案例：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1. 查询“研发部”和“市场部”的所有员工信息</span></span><br><span class="line"><span class="keyword">select</span> dept.id <span class="keyword">from</span> dept <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;市场部&#x27;</span> <span class="keyword">or</span> name<span class="operator">=</span><span class="string">&#x27;研发部&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> emp.name <span class="keyword">from</span> emp <span class="keyword">where</span> dept_id <span class="keyword">in</span> (<span class="keyword">select</span> dept.id <span class="keyword">from</span> dept <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;市场部&#x27;</span> <span class="keyword">or</span> name<span class="operator">=</span><span class="string">&#x27;研发部&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2. 查询比财务部所有员工工资都高的员工信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dept <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;财务部&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> salary <span class="keyword">from</span> emp <span class="keyword">where</span> dept_id <span class="operator">=</span> (<span class="keyword">select</span> id <span class="keyword">from</span> dept <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;财务部&#x27;</span>);</span><br><span class="line"><span class="keyword">select</span> emp.name, emp.salary <span class="keyword">from</span> emp <span class="keyword">where</span> salary <span class="operator">&gt;</span> <span class="keyword">all</span>(<span class="keyword">select</span> salary <span class="keyword">from</span> emp <span class="keyword">where</span> dept_id <span class="operator">=</span> (<span class="keyword">select</span> id <span class="keyword">from</span> dept <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;财务部&#x27;</span>));</span><br><span class="line"><span class="comment">-- 3. 查询比研发部其中任意一人的工资都高的员工信息</span></span><br><span class="line"><span class="keyword">select</span> id <span class="keyword">from</span> dept <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;研发部&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> name, salary <span class="keyword">from</span> emp <span class="keyword">where</span> dept_id <span class="operator">=</span> (<span class="keyword">select</span> id <span class="keyword">from</span> dept <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;研发部&#x27;</span>);</span><br><span class="line"><span class="comment">-- 3.* 含研发部</span></span><br><span class="line"><span class="keyword">select</span> name, salary <span class="keyword">from</span> emp <span class="keyword">where</span> salary <span class="operator">&gt;</span> <span class="keyword">any</span>(<span class="keyword">select</span> salary <span class="keyword">from</span> emp <span class="keyword">where</span> dept_id <span class="operator">=</span> (<span class="keyword">select</span> id <span class="keyword">from</span> dept <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;研发部&#x27;</span>));</span><br><span class="line"><span class="comment">-- 3.* 不含研发部</span></span><br><span class="line"><span class="keyword">select</span> emp1.name, emp1.salary, emp1.dept_id <span class="keyword">from</span> (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> dept_id <span class="operator">&lt;&gt;</span> <span class="number">1</span>) <span class="keyword">as</span> emp1 <span class="keyword">where</span> salary <span class="operator">&gt;</span> <span class="keyword">any</span>(<span class="keyword">select</span> salary <span class="keyword">from</span> emp <span class="keyword">where</span> dept_id <span class="operator">=</span> (<span class="keyword">select</span> id <span class="keyword">from</span> dept <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;研发部&#x27;</span>));</span><br></pre></td></tr></table></figure><h5 id="行子查询"><a href="#行子查询" class="headerlink" title="行子查询"></a>行子查询</h5><p><strong>概念：</strong>子查询的返回结果是一行(或者多列)，这种查询称为行子查询</p><p><strong>常用操作符：</strong>&#x3D;、&lt;&gt;、IN、NOT IN</p><p><strong>案例：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 行子查询</span></span><br><span class="line"><span class="comment">-- 1. 查询与“张无忌”的薪资及地区相同的员工信息</span></span><br><span class="line"><span class="keyword">select</span> salary, workaddress <span class="keyword">from</span> emp <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;张无忌&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> name, salary, workaddress <span class="keyword">from</span> emp <span class="keyword">where</span> (salary, workaddress) <span class="operator">=</span> (<span class="keyword">select</span> salary, workaddress <span class="keyword">from</span> emp <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;张无忌&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="表子查询"><a href="#表子查询" class="headerlink" title="表子查询"></a>表子查询</h5><p><strong>概念：</strong>子查询返回的结果是多行多列，这种子查询称为<code>表子查询</code></p><p><strong>常用操作符：</strong>IN</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 表子查询</span></span><br><span class="line"><span class="comment">-- 1. 查询与“张无忌”,&quot;小昭&quot;的薪资和工作地点相同的员工信息</span></span><br><span class="line"><span class="keyword">select</span> salary,workaddress <span class="keyword">from</span> emp <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;张无忌&#x27;</span> <span class="keyword">or</span> name <span class="operator">=</span> <span class="string">&#x27;小昭&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> name,salary, workaddress <span class="keyword">from</span> emp <span class="keyword">where</span> (salary, workaddress) <span class="keyword">in</span> (<span class="keyword">select</span> salary,workaddress <span class="keyword">from</span> emp <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;张无忌&#x27;</span> <span class="keyword">or</span> name <span class="operator">=</span> <span class="string">&#x27;小昭&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2. 查询入职日期是“2000-01-05”之后的员工信息和部门信息</span></span><br><span class="line"><span class="keyword">select</span> e.name,e.entrydate,d.name <span class="keyword">from</span> (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> entrydate<span class="operator">&gt;</span><span class="string">&#x27;2000-01-05&#x27;</span>) e <span class="keyword">left</span> <span class="keyword">join</span> dept d <span class="keyword">on</span> e.dept_id <span class="operator">=</span> d.id;</span><br></pre></td></tr></table></figure><h2 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h2><p><strong>事务</strong>：是一组操作的集合，它是不可分割的最小工作单位，事务会把所有的操作作为一个整体一起向系统提交或者撤销操作请求，即这些操作<strong>要么同时成功，要么同时失败</strong></p><p><img src="C:\Users\84350\AppData\Roaming\Typora\typora-user-images\image-20220412000033546.png" alt="image-20220412000033546"></p><p><strong>注意：默认MySQL的事务是自动提交的，也就是说，当执行一条DML语句，MySQL会立即隐式提交事务</strong></p><h4 id="事务操作"><a href="#事务操作" class="headerlink" title="事务操作"></a>事务操作</h4><p><strong>案例引入：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> bank(</span><br><span class="line">    id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">10</span>),</span><br><span class="line">    salary <span class="type">float</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> bank <span class="keyword">values</span> (<span class="keyword">null</span>, <span class="string">&#x27;张三&#x27;</span>, <span class="number">2000.0</span>),(<span class="keyword">null</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="number">2000.0</span>);</span><br><span class="line"><span class="comment">-- 转账操作(张三给李四转账1000)</span></span><br><span class="line"><span class="comment">-- 1. 查询张三账户</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> bank <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;张三&#x27;</span>;</span><br><span class="line"><span class="comment">-- 2. 将张三的账户余额-1000</span></span><br><span class="line"><span class="keyword">update</span> bank <span class="keyword">set</span> salary<span class="operator">=</span> salary <span class="number">-1000.0</span> <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;张三&#x27;</span>;</span><br><span class="line">程序抛出异常</span><br><span class="line"><span class="comment">-- 3. 将李四的账户余额+1000</span></span><br><span class="line"><span class="keyword">update</span> bank <span class="keyword">set</span> salary<span class="operator">=</span>salary<span class="operator">+</span><span class="number">1000.0</span> <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;李四&#x27;</span>;</span><br></pre></td></tr></table></figure><p>此时，张三账户金额变少，由于执行出错，李四没有收到转账金额；</p><p><strong>操作：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 查看事务</span><br><span class="line"><span class="keyword">select</span> @<span class="variable">@autocommit</span>;</span><br><span class="line"># 设置事务提交方式</span><br><span class="line"><span class="keyword">set</span> @<span class="variable">@autocommit</span> <span class="operator">=</span><span class="number">0</span>; <span class="comment">-- 手动提交：0 ，自动提交：1</span></span><br><span class="line"></span><br><span class="line"># 提交事务</span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line"></span><br><span class="line">#回滚事务</span><br><span class="line"><span class="keyword">rollback</span>;</span><br></pre></td></tr></table></figure><p><strong>改进案例</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 转账操作(张三给李四转账1000)</span></span><br><span class="line"><span class="comment">-- 0. 设置手动提交</span></span><br><span class="line"><span class="keyword">set</span> @<span class="variable">@autocommit</span><span class="operator">=</span><span class="number">0</span>;</span><br><span class="line"><span class="comment">-- 1. 查询张三账户</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> bank <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;张三&#x27;</span>;</span><br><span class="line"><span class="comment">-- 2. 将张三的账户余额-1000</span></span><br><span class="line"><span class="keyword">update</span> bank <span class="keyword">set</span> salary<span class="operator">=</span> salary <span class="number">-1000.0</span> <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;张三&#x27;</span>;</span><br><span class="line">程序抛出异常</span><br><span class="line"><span class="keyword">rollback</span>;</span><br><span class="line"><span class="comment">-- 3. 将李四的账户余额+1000</span></span><br><span class="line"><span class="keyword">update</span> bank <span class="keyword">set</span> salary<span class="operator">=</span>salary<span class="operator">+</span><span class="number">1000.0</span> <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;李四&#x27;</span>;</span><br><span class="line"><span class="keyword">commit</span>;</span><br></pre></td></tr></table></figure><h4 id="事务的四大特性ACID"><a href="#事务的四大特性ACID" class="headerlink" title="事务的四大特性ACID"></a>事务的四大特性ACID</h4><ul><li>原子性(Atomicity)：事务是不可分割的最小操作单元，要么全部成功，要么全部失败；</li><li>一致性(Consistency)：事务完成时，必须使所有的数据都保持一致状态；</li><li>隔离性(Isolation): 数据库系统提供的隔离机制，保证事务在不受外部并发操作影响的独立环境下运行；</li><li>持久性(Durability)：事务一旦提交或回滚，他对数据库的数据改变就是永久的</li></ul><p><img src="C:\Users\84350\AppData\Roaming\Typora\typora-user-images\image-20220412001614588.png" alt="image-20220412001614588"></p><h4 id="并发事务问题"><a href="#并发事务问题" class="headerlink" title="并发事务问题"></a>并发事务问题</h4><table><thead><tr><th align="center">问题</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">脏读</td><td align="center">一个事务读到另外一个事务还没有提交的数据</td></tr><tr><td align="center">不可重复读</td><td align="center">一个事务先后读取同一条记录，但两次读取的数据不一致，称为不可重复读</td></tr><tr><td align="center">幻读</td><td align="center">一个事务按照条件查询数据时，没有对应的数据行，但是在插入的时候，又发现这行数据存在了，好像出现了‘幻影’</td></tr></tbody></table><p><img src="C:\Users\84350\AppData\Roaming\Typora\typora-user-images\image-20220412001937820.png" alt="image-20220412001937820"></p><p><img src="C:\Users\84350\AppData\Roaming\Typora\typora-user-images\image-20220412002002558.png" alt="image-20220412002002558"></p><p><img src="C:\Users\84350\AppData\Roaming\Typora\typora-user-images\image-20220412002029593.png" alt="image-20220412002029593"></p><h4 id="事务的隔离级别"><a href="#事务的隔离级别" class="headerlink" title="事务的隔离级别"></a>事务的隔离级别</h4><table><thead><tr><th align="center">隔离级别</th><th align="center">脏读</th><th align="center">不可重复读</th><th align="center">幻读</th></tr></thead><tbody><tr><td align="center">Read uncommitted</td><td align="center">√</td><td align="center">√</td><td align="center">√</td></tr><tr><td align="center">Read committed</td><td align="center">×</td><td align="center">√</td><td align="center">√</td></tr><tr><td align="center">Repeatable Read(默认)</td><td align="center">×</td><td align="center">×</td><td align="center">√</td></tr><tr><td align="center">Serializable</td><td align="center">×</td><td align="center">×</td><td align="center">×</td></tr></tbody></table><p><strong>操作：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查看事务的隔离级别</span></span><br><span class="line"><span class="keyword">select</span> @<span class="variable">@transaction</span>_isolation;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 设置事务的隔离级别</span></span><br><span class="line"><span class="keyword">set</span> [session<span class="operator">|</span><span class="keyword">global</span>] transaction isolation level &#123;read uncommitted <span class="operator">|</span> read committed <span class="operator">|</span> repeatable read <span class="operator">|</span> serializable&#125;</span><br></pre></td></tr></table></figure><p><strong>案例一：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查看事务的隔离级别</span></span><br><span class="line"><span class="keyword">select</span> @<span class="variable">@transaction</span>_isolation;</span><br><span class="line"><span class="comment">-- 设置事务的隔离级别</span></span><br><span class="line"><span class="keyword">set</span> session transaction isolation level read committed ;</span><br></pre></td></tr></table></figure><p><strong>案例二：不可重复读演示</strong></p><p><img src="C:\Users\84350\AppData\Roaming\Typora\typora-user-images\image-20220412003719680.png" alt="image-20220412003719680"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;数据库&quot;&gt;&lt;a href=&quot;#数据库&quot; class=&quot;headerlink&quot; title=&quot;数据库&quot;&gt;&lt;/a&gt;数据库&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;数据库分类&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;关系型数据库(RDBMS)&lt;/p&gt;
&lt;p&gt;概念：建立在关系模型基础上，</summary>
      
    
    
    
    <category term="数据库" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="mysql" scheme="http://example.com/tags/mysql/"/>
    
  </entry>
  
</feed>
